%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 54_1_255_01.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: User
%%CreationDate: 11/21/2018
%%BoundingBox: 0 0 700 400
%%HiResBoundingBox: 0 0 700 400
%%CropBox: 0 0 700 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 76 8%%BeginData: 13265 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDEEFFCBFD7AFFCBFFFFFFCBFFCBFFCBFD76FFCBFFA9FFA9FFA9FF
%A9FFA9FFCBFD30FFCBFD7AFFCBFFA9FFA9FFA9FFCBFD05FFA9FD74FFCBFF
%FFFFCBFFFFFFCBFFFFFFCBFD13FFCBFD4EFFA9FFA9FFA9FD09FFCBFFFFFF
%CBFFFFFFCBFFFFFFA9FFFFFFCBFD0FFFA9FFA9FFA9FFA9FFA9FFFFFFA9FF
%CBFD29FFA9FD1AFFCBFD2FFFCBFFFFFFCBFD13FFCFC9C2C8C2C8C2C8C2C8
%C2C8C2C9CFFD1EFFA9FFCBFD07FFA9FFA9FFCBFFA9FD39FFCBFD08FFC9BA
%FD0BC1BAC9FD0EFFA9FD0EFFCBFFCBFFCBFD05FFCBFFFFFFCBFD3BFFCBFF
%CBFD07FFC9C1C1C8CACFCACFCACFC9C8C1C1C9FD07FFCBFFFFFFCBFFFFFF
%CBFD0CFFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFCBFFA9FF
%A9FFA9FFA9FD15FFCAFD0DFFA9FFA9FD05FFA9FFA9FFA9FD06FFC9C0C1C1
%C9C9CAA7CAC9C9C1C1C0C9FD04FFA9FFCBFFA9FFCBFFA9FFA9FFA9FFCBFD
%0CFFCBFFFFFFCBFFFFFFCBFFFFFFCBFFFFFFCBFFFFFFCBFFFFFFCBFFFFFF
%CBFD15FFC8CEC9CFCFFFCFFD07FFCBFD07FFCBFFFFFFCBFD05FFC9C1C1C8
%C9CFC9CFCACFC9C8C1C1C9FD05FFCBFFCBFFFFFFCBFFFFFFCBFD36FF5953
%A8FD08FFC7C0C1C0C7C8C9FD04FFA9FFCBFFA9FFCBFFA9FFCBFFA9FFCBFF
%A9FFFFFFAFC9C0C1C1CFCACFA8C8C2C8C1C1C0C9FD04FFCBFFCBFFA9FFFF
%FFA9FFA9FFA9FD34FFA952277EFD08FFC2C7C7CECAFD07FFCBFFFFFFCBFF
%FFFFCBFFFFFFCBFFFFFFCBFFFFFFC9FD04C1C8C2C8FD06C1C9FD24FFA8A9
%7EA9A9FD1DFF52A0A8FD09FFC9FD13FFCBFFFFFFCBFFFFFFCBFFFFCFFD08
%C1C0FD04C1CFFD23FFA9A97EA9A3A9A9FD1BFFA8A053FD11FFA8FFA9FD05
%FFAFFD17FFCFC8C0CFFD25FFA8A97EA97EA97EA3A8FD19FF7F7E7D7F7FFD
%09FFA8FFA8A9A8AFA8FFFFFFA9AF85AFA9AFA9AFA9AFA9FD07FFC9CEC9CE
%C9CEC9CEC9CFFFFFCAC1C9FD0FFFA9FFCBFD13FFA97EA9A3A97EA9A3A9A9
%FD18FF7F5B7F557EC3FFAFFFFFFFA8AFA8A9A8FD05FFAFAF85FD09FFAFAF
%A9FD05FFCFC8C7C8C8C8C7CDC7C7C7FFFFFFCACFFD25FF7EA37EA97EA97E
%A97EA3A8FD04FFCEC8CFCAFFFFFFA8AFA9AFA9FFAFFD05FF547F547EA1C2
%7D7DA1A77DA8A8FD07FF84AFAFFFCFFD0AFFAF84FFAFFFFFFFC7C7A6CFC9
%CFA8CEC7C8CAFD29FFA97EA9A3A9A2A9A3A97EA9FD04FFC9C7C1C8C7C8A6
%FFAFFFAFFFAFAFA9AFFFFFFF7F5BA8C2CAC3A1A1A1CAFD08FFAF85FD10FF
%AF85AFA9FFCFC8C7CFFFFFCFFFC9C7C7FD2AFF7EA97EA97EA97EA97EA97E
%A9FFFFFFCAC0C7C1C9C9FFCFFD07FFA9FFFFFF547F7DC9C2C97C2806FD07
%FFAFAFA9FD10FFAFA9AFFFFF85FFC7C7C8CFC9C8C7C8C7C7CFFFFFFFA9FF
%A9FFA9FFA9FFA9FD1CFFA9A9A3A97EA9A3A97EA9A3A97EFFFFAFA8CFCEFD
%10FF7F547F7EA12E2E0606A8FD06FFAFAFFD11FFA9FFA9FFFFFF85CDC7C8
%C7CDC7C8C7C8C8FFFFFFA9A97FA97FA97FA97FA9FD1CFFA97EA97EA97EA9
%7EA37EA97EA384AFA9FD13FF5A7F547F060553A8007DFD04FFA9AFAFFD11
%FF85FFFFAFA9FFFFAFA8FFC7C8CAFFCFFFCAFFFFFFA9857FA9A8A9A8A97E
%857FFD1CFFA9A9A3A9A2A9A3A9A9A9A3A97E85FD15FF532953532F06FFFF
%2E2EFD04FFAFFD14FFAFFFA9FFFFFFAFFFFFCECFFD09FF7FA9A9FD05FF7F
%A9A9FD1BFFA97EA9A9A9A2A9A2CB7EA97E7FA8FD14FFA805060506050653
%AF7D28CAFFFFFFA9FD14FFAF85FD04FFAFA9FD0BFFA9A97FA9A8FFA9A97E
%A97FFD1CFFA9A9A9FFA3CBA8FFA9A9A2857FFFFFA9A9FD11FFA82E060605
%0C060606FF2E53A8FD1DFFAFFD0BFFA9AF7FA97FA97FA97FA97FA9FD1CFF
%A97EA9A8A9A9A97EA97EA35ACBFFA97E7F85FD09FFA8A37E7F7E7F7E7F2F
%2F292F29530606545429537E7F7E7F7E7F7E7F7E7F7E7F7E7F7E7F7E7F7E
%7F7E7F7E7F7E7F7E7F547F7EFD09FF84FFFFFFA8A9A9A985A97FA984AFA9
%FD1AFFA9A97EA9A9FFA9A9A3A97FAFFFFF85A97FA9FD09FF7F5455547954
%79547F797F547F792F0679797F547954795479547954795479547F547954
%79547954795479547954795479545554FD07FF85FFCBFFA9FFA9FFFFFFA9
%A9FFFFFFAFA9FD16FFA9FFFFA97EA97EA9A9A97EA9A285AFFFFFA97F857F
%FD08FFA94EA9A8A97EA984A984A984A984A928067EA984A984A984A984A9
%84A984A984A984A984A984A984A984A984A984A984A9A8FFA8547EFD05FF
%A9FFA97F7FA97EA97FA9FFFFA9FFCFFFFFAFA9FD14FFA9FFA9FFA2A9A3A9
%7ECBA9A9A2A985AFA9AF7FA97FA9FD08FF7F55A8FF5A5B365B3637305B36
%37362F0637365B3637305B3637365B363730373637305B365B365B365B36
%5B365B365B365BAEFF547FFD05FFAFFFA97FFFFFFFA8A9A9FD05FFC8C8C8
%C9C9CFCEFD10FFFD06A97EA97EA3A8A9A2A95AA9AFFF7E7FA9A97EFD08FF
%A94EFF8437CF850E5B84857E857E852F060E857E857E857E857E360E8584
%857E857E857E3730360E3730360E3730360E370E85A8557EFD05FFA8FF7F
%7F7EA9A8A97EA9FD06FFC9C7C0C1C0C8FD0FFFA9FFA9FFA9FFFD04A9A3CB
%A9CB85CBA9AFA9A97FA97FA9A9FD07FFA355A9FF36853637365B365B365B
%36362837365B365B365B365B3037365B365B365B365B30370E3730373037
%30370E373037A8FF54A3FD04FFAFFFFFFF7FA97FA97FA9A9FD07FFCFCEC7
%C7CAFD0EFFFD05A9CBA9A97EFD04A9CBA985A2A9A9855B85A9A97FA9FD07
%FFA94EA9CFAF848584A9848584857E85532E7E857EA984857EA9848584A9
%84858485848584A984A984A9848584A984A984A9A8FFA8557EFD04FFAFA9
%FFFFFF7FFD0EFFAEA7FD10FFA9FFA9CBA9FFA9A97EA9A3CBA9A97FA97EFF
%AF857FA97F857FFD07FF7E55A9FFAEFFFFFFCFFFFFAF365B5A36062F5A5B
%FFFF5A60A8FFFFFFCFFFFFA93685FFFFCFFFFFFFCF8536A9CFFFFFFFCFFF
%FFFF54A9FD04FFAFFD09FFA9FD09FFA9FD11FFFD07A97EA97EA9A8A97E85
%7EA3A8FF7F7FA9A97FFD08FFA34EFFAEFD06A8FF5A300E3784850E360E85
%A8140D84FD05A8CF5A0E0EAFFD06A80E0F5ACFFD05A8FFA8547EFD05FFA9
%FD06FFA97FA984A97FFD06FFAFAFFD10FFA9FFA9FFA9FFA9A9A2A9A3A9A9
%A97F85A9FFFFA97FA97FFD09FF7F55A9FFA8FFA8FFA8FFFF853037A9FFFF
%85303784FF8484CFFD07FF5AA9FD07FFA95AFD09FF54A9FD05FFAFFD06FF
%A9A9FFFFA9A9A9AFA9FFFFFFA9FD11FFCBA9FFA9FFA9FF7EA37EA9A9A97E
%A97EA9AFFFFD05A9FD08FFA94EFFCFA9A8AFA8A8A8FF5A3030AFCFFF8437
%0E85CFAF84857E8584857E8584857EA97E857E857E857E8584857E858485
%84FFA8547EFD05FFA9FD06FFA97FA97E857FA9A9FF85FF85FD12FFA9FFA9
%FFA9A9FFFFA3A97EA9A9A9A8FFAFAFA9857FA97FA9FD08FF7F55A8FFA8FF
%A8FFA8FFCF8530375AFFFF5B303785FF303730373037305B84A9845B0E5B
%5A5B365B5A5B3637303730373037A8FF54A3FD0EFFA9FF7FFFFFAFFFFF85
%AFFD11FFA9A9A9FFA9A9A9FFFFFFA8A9A8A9A9FD05FF7E85857F282853FD
%06FFA94ECBA8A9A8A8A8AFA8FF5A370E37A8AF0E300E85A8300E3730360E
%375AFFCFFF7E307E8584857E8584850E3730360E370E85A8557EFD13FFA9
%AF84AFFD13FFA9FFA9FFA9FD0EFFA97FCB7E524C52A8FD05FFA355A9FFA8
%FFA8FFA8FFFF850E5BA9FFFFAF363785FF5A5B3637365B36375A615A5B30
%5B3637305B3637305B3637365B365BAFFF54A3FD16FFAFFD12FFA9CBA9CB
%A9A9A9FD05FFCBFD07FFA9A9A97E76C9CAFD06FFA94ECBA8A9A8AEA8FFA8
%FF5A37A8FFA8FFCFA90E85CFAF84A9A8A884A984A884A884A884A984A884
%A984A884A9A8A884A9A8FFA8557EFD16FFAFFD13FFA9FFCBFFA9FD0FFFA9
%AFA2C3C9FD07FF7E55A9FFA8FFFFFFA8FFFF8530855A855A857E377EFFFD
%0BA8AFA8A8A8AFA8A8A8AFA8A8A8AFFD04A8CFFF54A9FD16FFA9FD13FFA9
%A9FFA9A9A9FD0FFFA0C1C1C2C9FD06FFA34EFFCFFFA8FFCFFFA8FF5A367E
%A984857E850E85A8A8A8FFA8FFA8FFFD05A8FFA8AEA8FFA8AEA8FFA8AEA8
%FFA8A87DFFA8547EFD15FFAFAFFD13FFA9FFA9FFA9FD0FFFFD05C1C2CAFD
%05FF7F55A9FD08FF850E3785A9A885303784FFA8FD07FF84AFA8FFA9FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8A8AEFF54A9FD06FF7EFD07FFA87DA8FD05FF
%A9FFFFFFCAFD10FFA9FFA9A9FD0EFFC9FD04C17C7EA884A8FFFFFFA94EFF
%CFFFA8FFFFFFA8FFA85B365B5A5B365B5AFFA8A8A8FFA8FFCFFFA7C9A0C9
%A0C9A0A8A8FFA8AEA8FFA8AEA8FFA8A87EFFA8547EFD05FFA82805A8FD05
%FF7D4B59FD04FF85FFFFFFC9C0C1FD10FFCBFD10FFC8FD04C159A984A8A8
%FFFFFF7F55A8FFFFFFA884A8FFCFFFFFA87EFFA8AFA8FFFFFF84FFFFFFCF
%FFCAC1C0C1C0C1C0C1C2FFA8FFA8FFA8FFA8FFA8FFA8A8A8FF54A3FD06FF
%C35252FD05FF7D76A8FFFFFFAFAFFFFFFFCAC19FA8FD10FFCBFD07FFA9FD
%07FF9FC2C1C1997E84A87EFD04FFA94EA9A8FFCFFF5384CFFFA8A852067D
%A884A884FFA8A8A8FFA8FFA9C9C0C2FD04C9C1C1A8AFA8FFA8AFA8FFA8AE
%A8A87EAFA8557EFD05FFCFC9767DFD04FFCA7D76CFFFFFFFAFA9FFFFFFA8
%C9A0C9FD20FFC9C3C2C1C984A884A8CFFFFFFFA355A9FFFFFFCFC9A8FFFF
%AFA8C90659FD05A8FF84FD05FFC9C1CAFD04FFC9C1FFA8FFA8AFA8AFA8AF
%A8A9A3A9A3CB54A3FD06FFCA7628FFFFFFC8CDC8C8C7CECFFD07FFCAC2C8
%FD18FFCBFFFFFFCBFFFFFFA0C9C2C2C2CA84A8A1FD04FFA94EA9CFFFCFFF
%A7CAFFFFA8A8C25259A884A87EFFA8A8A8FFA8FFA8C9C0C9FD04FFC2C1A8
%A8A8A9A8A87EA87EA37EA97EA97E557EFD05FF7F7F53007DFFC8C7C7C8C7
%C7C7C8CFFD05FFA82F27C1CAFD18FFCBFD06FFC9C3C9C2A884A984CFFD04
%FF7E55A9FFCFFFFFFFC3FFFFFFA8A87DA8A8A9A8A8CFFFA8A884A8A8A9A1
%C1C1FFFFFFC9C1C1A8A8A884A8A8A87EA9A3A97EA9A3A954A3FD04FFFD04
%7F54A9CFC8C7C8C7CDC7C8C7CDFD05FF5300067CCFFD17FFCBFFCBFFCBFF
%A9FFCBC9C0C1A0C2A0CFFD05FFA34EFFCFFFA8FFA8C9A1FFA8611561A8FF
%A8FFA8FFA8FFA8AFA8FFA8C9C0C1C1FFC9C1C1C1A8FFA8AFA8FFA8A37EA9
%7EA97EA97E797EFFFFFFA8555B7F5B7F7FCA9AC8C7C7A5C7C7C8A0FFFFCA
%CAFF280605A9FD21FFC9FD04C1C7CFFD05FF7F55A9FD05FFCAC9C9C95A3D
%3785FD06FFA8A8A8AFA8AFA1FD04C1C7C1C1C1AEA8A8A8AFA8A97FA9A3A9
%7EA9A3A978A3FFFFFFCAA1A87EA97FA9C3CACEC7C7CDC7CDCAC9CAFFCAA8
%847E052EFD17FFA9FFCBFFA9FFCBFFA9FFFFC9C0FD04C1CFFD05FFA94EFD
%07FFA8A87D60373D5AFFA8FFCFFFA8A884A884A884849FC1C1C19FC1C1A1
%7EA884A884A87EA97EA97EA97EA97E7F7EFFFFFFA0C9C3C9C2A2A9C9A1CE
%FD04C7C8FFA0C9FFFFA87E280600A8FD17FFCBFFFFFFCBFFFFFFCBFF7D2E
%27522752CFFD05FF592F2F5A598484FFA861373D373D7DC9FFFFCFFFFFFF
%84A8A8A884A8847EFD077DA884A8A8A884A9A3A9A9CBFD04A97E7FFD04FF
%A9A9A2C9C3FFCAC3C7CDC7C8C7CDC9C9CAFD05FF282728FD10FFA9FFFFFF
%A9FFA9FFA9FFA9FFA9FFA9FFFF5A0006050628FFA9FFFFFF7E0CFD05060C
%062F373D363D60C3A0FFAEFFA8FFA8A87DA884A87EA87D7D597D597D5984
%84A87DA884A87EA97EA37EFFA9A97E7F7EFD04FFA9557F5BA9FFFFC9C7A5
%C8C7C7A0C9CAFD05FF8429072F5AFD12FFA9FFFFFFA9FFFFFFCBFFFFFFA9
%FF5906062E0553FD05FF840628062F0C2F062F0C3D373D84C9C2CFFD06FF
%A8FFA8FFA8FFA8FFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8A97FA9A9A97EA9
%7FA3FD04FFFD042F06FFFFC9C7CDC7CDC8C9FD07FF853037375BFD0FFFA9
%FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFFF7E0506052853FFA9FFA9FF2F0600
%280528060C060C36617DC3A1CAA8FFA8FFA8FFA8FFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFA8A97EA97EA97E7F7EFFFFFFA806050605
%067DFFA77575A07BA0A5FD07FF3637303630FD10FFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFF7E060628007EFFFFA9FFAF2F052829544D542F542F5B78
%78547F557F547F547F547F547F547F547F547F547F547F547F547F547F54
%7F547954A9A9CBA9CBA9A97EA9FFFFFFA80606062806A8FFA80006062E06
%59FD06FFAF3730373085FD0DFFA9FFA9AFA9FFA9AFA9FFA9FFA9FFA9AFA9
%FFA9A80506050553FFA9AFA9AF062800545455547954554E5554554E5554
%544E5554544E5554544E5554544E5554544E5554544E5554544E554E557E
%A97EA9A2A97E7F7EFFFFFF530605060528A8FF53050006050628FD06FFA9
%3036303784FD0EFFAFFFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF842E0628
%007EFFFFAF7E2E2E05535579547F5479547F5479547F5479547F5479547F
%5479547F5479547F5479547F5479547F5479547F547954A9A3A9A9A9A3A9
%7EA9FFFFFF590628062E06FFFF7D0028062E062FFD06FF8537303730AFFD
%0CFFAFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA92F002F280053FFA9
%FF847E532829795455545554555455545554555455545554555455545554
%5554555455545554555455545554555455545554A97EA97EA97E557EFFFF
%FF2E0605060006FFFF2E28275905062EFD06FFA90E373037A9FD0CFFA9AF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9A906067E53007EAFFFA9FFFF84
%2E7954795455547954555479545554795455547954795479547954795479
%54795479547954555479545554795455547FA3A97E7954FD04FFC9768476
%5253FFFF2E0053FF2F0059FD06FF8537303730FD0BFFAFA9AFA9A9A9AFA9
%A9A9AFA9A9A9AFA9A9A9AFA9FF2F052EAF28287EAFA9AFA95A06537E7F54
%7F547F547F547F547F547F547F547F545554555455545554555455545554
%79547F547F547F547F547F547F54A37E7F78FD05FFC3C3FFC9C3FFFFFF05
%057DFF7D0528FD06FFA8537E5A7EA8FD0AFFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA92F0584FF5900A8AFFFA9FF84AFFFFFAFFFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFAFA9547F547F5A7F547F5A7F547F5A7F85FFA9FF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FD06FFCAC2FFC9C9FFFFA82828FFFFFF2E
%067DFD05FFCFC9CACFC2FD1FFFAF052FFFFF7D0684FD19FFA87F547F547F
%547F547F547F547F54A9A9FFA9FFA9FD0FFFA9FFA8C2A1CAC2CBA9A90053
%FFFFFFA8002EAFFD05FFA0CAC9C9CAFD1EFF840684FFFFA800A8FD19FFA9
%557F7F7F5B7F7F7F5B7F7F7F5B7FA9FFA9FFA9FFA9FD0BFFAFFFA9FFA9FF
%C3C3A7C9A9FF7E2853FFA9FFFF5900A8FD05FFC9CACFC9FD1FFFA852FFFF
%FFA8287EFD19FFA97F547F5B7F547F5B7F547F5B7F54A9A9AFA9AFA9AFA9
%AFA9AFA9FFA9FFA9AFA9A9A9AFA9AFA9CAA0CAA1AFA97E0084A9A9A9FF84
%062EFD05FFC9CACACAFD1FFF28A8FD04FF76A8FD19FFAF5BFD0D7FA9FFA9
%FFA9FFA9FFA9FFA9FFA9AFA9FFA9FFA9FFA9FFA9FFA9CAC9CAA9FF7E28A9
%FFA9FFA9FF532EA9FFA9FFFFCBA8FFA8FD1EFFAF5A7EFFFFFFA828277DA9
%FD13FF7E7F547F5455547954555479545554795455547F547F547FA9A9A9
%AFA9A9A9AFA9AFA9AFA9A9A9AFA9A9A9AFA8A2A2AFA97E4CAFA9A9A9AFA9
%A928A8FD04A9365B305BA9A9A9FFA9FD20FFA8A87EFD14FF794E554E5554
%554E5554554E5554554E5554554E55545554FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9855585A9CFC8C9A9FFAFFFA9FFAFC9C8FFAFFF85855B
%8585FFAFFFA9FD38FFA8A97EA97EA37E7F7EA37E7F7EA37E7F7EA37EA37E
%A97EA9FD14FF7EA9A9FFC9CEC9FD07FFCACFFDFCFFFDFCFFFD17FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Interface_1</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-11-21T14:29:02+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-11-21T14:29:02+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-11-21T14:29:02+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>148</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAlAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq4EHoa4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqoC7XmVYcQOhyzg2TSm943L4AO&#xA;PauEY00qR3iHZhxPj1GA4yilcEEVBqPHK0OxV2KuxV2KuxV2KrJZljFTuT0GSjG0gLYrlHNPst2B&#xA;wygQpCrkEOJIBoKnsMVQbw3LmrCvtXLhKIZWGltrhTUCh9jh4wtq6NdDZlDe9QDlZEUbNM12fsqF&#xA;HzBxAiuyrGXK/GKN3pkTXRC7ArsVdiqhJdopoByI6+GTECU00l4hNGHH364TjK0rh0IqCKeOQpDS&#xA;yxs3FWBOJiVpdgV2KuxV2KuxV2KuxV2KuxV2KrVkViwHVTQ4SKVdgV2KqFzMYwFX7R75OEbSAh1u&#xA;JlNeVfY5aYBlSIW8jI+KoP35WcZY0hp5fUevYbAZZGNBkAp5JUZDdqRSQ0I7+OUyh3MSFQ3EI/ay&#xA;PAVpYbyL3+7D4ZWlSOVJPsn5jImJCKX4FdirsVdirTOiAFmCgmgqab5GUxHmaSATyb2I9jkkLPQh&#xA;/kGS4im2mit1FWUAeOIkVtYgtHNFAJ8MJ4gu6oIolPIKBTvg4iVtCtdyl6qaL2GWiATSJhmEi16M&#xA;OoyqUaQQoaxI8ek3siEq6W8rKw6ghCQcxNZIjDMjmIy+5u0oByxB/nD73lWn28d1exxTSFEcnm9V&#xA;B2BPVyo/HOB02MZMgjI0D7v009nqMhhAmIsj8dE9/wAN6P8A8tjf8Hb/APVTNv8AyZg/n/bD/inW&#xA;fyhm/m/ZL9SV6zptpZGL6vMZg/LlVozSlP5Gbx75r9dpYYq4Td+79BLm6PUTyXxCq9/6QGZfl/I7&#xA;6JIGYsEuGVAew4IaD6TnSez8icBvpI/cHRdtRAzCv5v6SyRnVRVjQZvQLdQsjnV3ZajY0X3wmNJp&#xA;Ra7cMw4jatPoyYxppSinaMsaci3XJSjakI5W5KGpSorTKSxbwKtaKNjVlBOESIVr0If5Bh4im0Fq&#xA;GoaTp4H1p1Vm3WMAsxHyGWY4TnyW1Ow1fRb5/TgkX1e0bgqx+Vev0ZLJiyR5raY+hD/IMp4itu9C&#xA;H+QY8RW3ehD/ACDHiK270If5BjxFbbWKNTVVAPjgMii12BWnNEY140B+I9B74q8k/JjzT5+17Vb2&#xA;bW9ZtNV09InWW1to4oms7hZaRq3GNJD6iBiA+4p45OconYRI8+9nLHwi7BeuZBggNds7m80ua3ti&#xA;ouH4+mzGgBDAk1oe1cwu0dMc+EwFWa5+9ydJljjyCUuSS6f5X1RCDJfSQgdkYE/gB+vOd0nYeoBs&#xA;y8MeRN/qdhm7QxnlAFkNnZ/VkK+tLOW6tM3I7eHhnT6fT+EK4pS/rG3V5cnGeQHuWzMk8pijkRnj&#xA;FXjDDkK+IGZkDXNqEgs+pze335LxAyteYborxLAj54OKK2Fn1OX2+/D4gW21tp1NVIB+eJmCtqeq&#xA;QX02mXcKUZ5IZEVR1JZCAMxNXESwziOZifubdPIRyRJ5CQ+95zp9tq1jeJcCxnZo6/DwkXqCOqgH&#xA;OE0+PNiyCXBLbyI+563PPFlgY8cd/cmt1revPAwjsZ7duvrAzNxA3OzbZscuv1BiahKJ7/V+lwce&#xA;iwCW84y8vSkctzq2psquZbpowSqgFiAaVNAM1M8ubPsbnTsoY8WHlUbZ55Gs7q10d1uImiaSZnVX&#xA;BU8SqitD/q51nYeGePAeIVcr+wPOdr5YzyjhN1H9JT6aISKFJpQ1zdxlTqwVOO1CScuVadBTCZ2F&#xA;ta9sgepf7RoBTuckJmk20LI8hVtsfEW0VlTF2KuxVpmCqWY0UCpPsMVeXX95JeXkty5NZGJAPYdh&#xA;9Aze44cMQFUFZlYMpIYGoI2IIyas58r+YDep9UuW/wBKjFVc/tqP+Nhmr1Wn4dxyVPZ5lhieV68E&#xA;FWoKmg65r82UY4GR5BlCJkaCEj1zSZOlyg/1qr+umYOPtfTT5THx2+9vlpMo/hKodV0wf8fURPgr&#xA;qx7DoCT3zYYZxyfQRL3ONk9H1bOGqWPeQqP5mVlG5p1IA65f4Mu5q8eHeqwXdrcAm3mSYLTkY2DU&#xA;ruK0JyEoSjzFMoZIy5EFg35raxe2tvY2VtI0SXBd5ypoWCcQq1Hb4jUZtey9PGfEZC+nzY5JmJFM&#xA;T8qXmsaVfNqEP7q1uKS3a8VCzBfhHPbY7/ayjtHPp8OPw8YBlE17r3/ZXRztNpsmefFM0CL970Cz&#xA;/MXSbvkYLO8eMcfTmEaBJCevp8nDMAe9AD2rmqOaIqzX6GI08iTQsDr0PuTK21bWb0P6GmG1VTTn&#xA;euYz9CIrk/eMvjw9/wBn66ceYkOg+Y/RaIFpq8m89+Ih/LbRKv8Aw0pm/UMNx7mPDLqVGW305ZTC&#xA;yzahcCheF3aQCpG7KzCJOte1e1csjGVX9I/HxapSiDW8j+PgFS3tbz1GQNHZR8FpDbqGI+1+2w4/&#xA;8JgMojpxe/8AH6UiMz14fd+s/qV/0bEQecs7k9W9aRD27IyAdOwweKegHyH6U+COpl8z+hs2FDyh&#xA;uJom7/H6gO9aES8/wpj4neAfs+6knF3Ej7fvtal5LDKIL0KrNX0rhQRG9AKg1rwb2JNex8CcYIuP&#xA;y6/tQMhBqXz6fsRKzRvEZInWRKEhlIINPcZTO4g22xIlyY1b6trF1KypOE25U4LQCvToTnE6btLW&#xA;Z5kRmI9eQ/U7jJp8UBZFq0lzriRs5u1ooJPwL2/2OZeTJroRMjlGw/mj/iWqMcJNcP4+aM8v6jdX&#xA;izi4YOYyvFqAH4q7bUHbMzsLX5dQJjIb4a+2+73NWswRhXD1X2eg2tlq01/bfu1njKyQgbBuQPJf&#xA;CtOmbDDoIYsxyR24hyRl1ksmIQlvwnmmeZ7huxV2KqElqHctypX2yYnSbVwAAAOgyCHYq7FXYqhN&#xA;YkMelXjjqIXp8ypAyzCLmPerzHN4rsVVLe4mtp0nibjLGeSn3GRlEEUVegRXsur2AFovCKePjLcO&#xA;DxUsKMqDYuRXr9n59M02fTgCUZHnYa8eY8QMRsDz6fDv+5B2fknSoaer+/40pUAVoOp/spnM4vZ3&#xA;EJXKUpDu5fP8B2+TtXLLlsnVrYWVqKW8CRbUqqgEj3PU5usGlxYvoiIuBkzTn9RJV8va1N7a3klS&#xA;V4keWPeORlBZT02J3GSEyBQOzEwiTZG4eb/nRc20H6H9aVIq/WAObBa/3Xjm57GNcd+X6WnOeTzX&#xA;zD+adzoGkRPDbR30kxMUUvqcUXiKguFB5/IEZh67sLGZ8cZECXMfq/BcodsyhCiBI9CgtNk87+Wf&#xA;zK8j+YPNM7tHrygen9mKBbljCYeGwUxpLFI3v13GRhhxjHKMBycDJnyyyRlM831HmE5qBeWe8laG&#xA;BjFbRtxmuBszMOqR7fQzdjsN9xcAICzue79J/U0GRmaG0RzP6B+k/gCoLeGCMRQoEQdh4+JPcnxO&#xA;VykZGy2xgIig5f8Aeh/9RP1tg6J6qmBLsVSa+iS5tL26mo7QGRbRG6RvEaKaGo5mRag06ED55mMm&#xA;MoxHWr87/RThZYiUZSPS68q/TaJv7OOKKS7tUEdzEpYhBT1VUGqMBQNUV416HfKYyMvRI7Hb3ef4&#xA;5t2SAj64j1D7fL9XckhsNQsJYzCyyNc1WPjWpGx3BApnAnQ6nRZBwESlOwKt3wzY80d9gN0ZNo+t&#xA;zV5XCAEUKB3Ap8qZn5+zNfl55IgEchKVfc1Q1GGPKJ+QRmiaXNYLN6rqzSFaBakALXuQPHM/sfsy&#xA;elEuMgmVcvK/1tGq1AyVXRJtc8y6pb601hacFVSiAspYlnANf+G7Z12n0kDj45ebr5TN0u+u+bv5&#xA;4f8AkVJ/zRkK0/n8x+tPqUtM8y6u2tR2N36bqzmN6KVIPiK0P4ZZl0mPwuONoEzdMvzVNrsVdirs&#xA;VdirsVS3zI3HQ7s/5AH3sBl2n/vArBbRbSS1li58Ll6cPUoENGrs3bbxzbSJBvolEXUcFhN6nFTO&#xA;UjMMXVUPAcnb35VoPpyESZDyVLrezvNSvUtYAXklJaVz2UHcsfcnLjOMI8R6NGQ2RHv5+79v3Wyn&#xA;UfML6E0Gl2sKSLbRIJHaoqadgOmYmHSeMDOR5lJlw7Bkem30d9Yw3aDisq149aEGhH0EZr8uMwkY&#xA;no2A2ETlaUq8xeaNF8vWq3Gpz+mJDxijUFpHI68VHh3PTMjTaXJmNQCCWL/8rp8n/wAl3/yKX/mv&#xA;M/8AkTP/AEfn+xHEHkH58X9l55utIutEeRWskminiuR6Yo5VlZOJfwIb6MytP2ZmgCDTiarEZ1Ty&#xA;tfJOuKwZXiVlNQQ5BBHQ9MyPyOTucX8rNmVj541rzd5Q1PRfMs8up6hp01rc6DdkpHLFKHZZec4U&#xA;sVMdaVBNe/hhY9DKUrx/FsxyOQES3p7R5W/PGKXTwvmawNtqEYAaSyPqwynerBXKMnyqfnkJdiZb&#xA;2r4udCZr1BN4/wA5fJcaLHHDdIiiiosKAADsAHwHsXOTZI+f7GQIAoLv+V0+T/5Lv/kUv/NeD+RM&#xA;/wDR+f7E8QWj85vKAkZ+F3xYBR+6XqpJP7f+Vj/Iub+j8/2Lxbrv+V0+T/5Lv/kUv/NeP8iZ/wCj&#xA;8/2LxB3/ACunyf8AyXf/ACKX/mvH+RM/9H5/sXiCGb82vIzT+sY70MWDsoWiMyigZk9TiSPl4eAy&#xA;wdk6iquP4+DWYRu119+cnlOa0kgjS7BmHpljGg4q2zMPjO4HQeOOPsbMJAnh2XL6okDqyzy35n0H&#xA;zBbGfS5Q5goskTLxkj5dAVPY06jbNZqtHPFIcY36FuB2oJxmOqFnvWEpgt1V5VoZWc8Y4wafaIB+&#xA;Ig1C/qy2OPazy+9qlkN8Mdz9zFdY0HVptXN7E8NwWKOSGEY5IAKcS5P7P82bPBqcYx8Jsc/P9DHg&#xA;l13W3sHmhbVpRbxxpH8TPC5dqDrsXf8AVgx+BxVZPv8A7AyPEoaDpeqS3dtq7RmW35l2ZSpc0JU/&#xA;DUd8t1ObGInGDRYbjerZzBcQ3EYkhYMvQ9iCOqsDupHcHcZpZRMTRboTEhYVMiydirsVdiqU6nqk&#xA;scpggPEr9t+pqewrmVhwgiyglKdV1C7n0q5gc8wwBr0I4sGPT2GZOPFESBCgsUMUojWQowjb7LkG&#xA;hptsczLCUXcwiSZmNeMVtC5CipJ9JFVQPFmIGQifvP3onIRFlOfKUVzB9Y5yJa3DqCVkj5GkdSwN&#xA;WQ0AkU9so1ZiQKBI/X/YXF9fHuQCR7+V+7vCR392+q3t9dvRTCqEcRswqsYIBNRWtfwzYYoDFGMe&#xA;/wDtRGZkTfMM48pzQyaFbrGd4uSSDwbkSfvrXNLrokZTfVyYck3zEZvM/OMcdx+bOg21wqzW5tKm&#xA;GQBkJJnr8J2/ZGbzSkx0WQjY8X/EsTzSfXr8jUdfS2fS9Mj0cL6FpLawtJPUCpqynrXaniPnl2mx&#xA;+jHfiT4+ZEjs6rNqZ8U6kI8HTvY/p/mHULuD1ZL7RrNuRX0bizXnt3/d28i0+nM7JpoxNCOSXul+&#xA;uQcWGtyyF8cR7x+xE/pW7/6vPl//AKQz/wBkmV+DH+Zl/wBN/wAfZ/m8n+qQ+R/4l51+X93c6P5j&#xA;1+xgmsvTkuURrueBZYOKtLxdecbOqkN2T6Mjh04lxWJenoDR+/8AS1nUTgRwkb9en3PRf0rd/wDV&#xA;58v/APSGf+yTJeDH+Zl/03/H2z83k/1SHyP/ABKjd67fW9s8yalodyyCoghsxzbenw87ZF+85OGn&#xA;jI1w5R75f8eYy1mUC+OJ+H/HVlh5gv7q3Esl/otoxJHoz2a89u/7u2kXf54cmmjE0I5Ze6X65BEN&#xA;blkL44j3j9iJ/Sl31/TGgfP6maf9QmV+DH+Zl/03/H2f5rJ/qkPkf+JSu9836rbXLwodNulSlJ4b&#xA;KH02qAducSNtWm65k49FCQs8Y8jI/raJ9oZga4gfh+xQ/wAcax/vmx/6Qrb/AJoyf8n4++X+ml+t&#xA;j/KWbv8AsDv8cax/vmx/6Qrb/mjH+T8ffL/TS/Wv8pZu/wCwJz5Q82Xl95jsbK8sbG5t7qQRSILS&#xA;FSA37QKKPs9cxNdoowxSlGUgQP5xcjS9oZZZBE7g+TLPKipbfm7rFtbKsNubcj0YwFTYREfCNuuY&#xA;GpPFoYE7m/1u9HN6g7BFLN0UEn5DNEBaSaYd5pSUaHZO1eUzma4O9PUkXlTfsK0WvQCmbbREeLId&#xA;2w+H43caI9AJ5nc/FCQ3XlR4/jhMbgU+JHNTTr8LtkpY9SDsb+X6mwGKa+Qg/wBRuSa8DIOPhXjv&#xA;TKe0/qHuZY+TIWtjHbGKzK25BLJ8PJasxZqrUbEntmpz8cx6TUu87t2MxB3Fhjd7qeu6beetNaRt&#xA;zHF3hLcZKdCVJpyH30znNV2xrNP6MkYV0O9fO/sdjh0GnyHihIg9Qfx9qc6Fqs2p2zXDRCKMMUUb&#xA;8qr12ObPszWZNRAzkAB0cfWacYZcN2UyzZuI7FXYqxzVEI1CRR+0QR9IGbDCfQEIC62tpj4I34A5&#xA;fHmhjsF3cwV9KRlB6rX4T8wdjl5iDzZIjV7+5KoqNwQxwO4RVSpUK1fhA6U2wYYC/m15/p9xB+RT&#xA;fyjaLfQ3sU1WgcIRIpIYOQwqrD/JO/47ZjaqZgQRzTOAmEggt/Qg1BWcu44oWPekg8KeGbOUuIx/&#xA;HRxsePhB3ss08m6XcWdk80zCl2EeOMGtFoSCfc8s0+vzCcqH8LkYxQZBmA2PNPNP/k4dA/5hB+u4&#xA;zd6f/Ecn9b/iWPVkGpW+i3V7ObzTbG7lhKRiSdVeSjIGo3KJqddtzmqhlyQiOGUgD3H9rTKEJSPF&#xA;GJr8dyla6L5XnnWM6Jpo5V3WKNjsK9DEv68J1eb+fP5n9ajT4v5sfkP1PK7/AFi9uvNE+l6VpOmp&#xA;W5e2tYBZWzfZcoCWdD4VJ6Z1OPBGOETnOf02TxS/W6GeWUspjGMedD0hC6z5R84eTr6XVrlrC7sN&#xA;TkpLA0EdxFBJRmCwpLGoir4KtNvYZjaOeHPM8BmD13IJ+IO/xbtTHLiiOIRI6bWB8CNvgyfT7uK+&#xA;/L251a30DT5dVtZ/q7ulnCw4gIxl9ML1Cv8ALvmPqoyx6kQ8SfARf1H5MhPi0xnGEeMGvpHzT7yX&#xA;p1vqXl+K71Hy3YtctI6hvq0EPOMU4vxKdySNvDMDV6icJ1HJKv6xcrQQGTFxThG/cE8/w5o3/Us2&#xA;P/Iu3/5ozG/OZv8AVJfMub+Wx/zI/IMJ0dbmfz3caXc+XLL9HLJMpj+pRKI40BMUnqcf26Dfoa5u&#xA;s5EdMJxyS46H8R3PUOsxAnOYmEeHf+EfBm3+HNG/6lmx/wCRdv8A80Zpfzmb/VJfMuz/AC2P+ZH5&#xA;BiX5iW7aTY2cul+XbGL1ZHW4lFpBPxoF4D7BA5Vbt2za9lT8WUhkyS25eoj39XX6+PhgcEI/6UFk&#xA;ek6Hp0+lWU915YsVupoUedPQgTi5G44stR8u2YGo1OSOSQjkkYg7eouXhwQMAZQjddwTPT9JsLS5&#xA;WW20S1s5PsmeFYVYA9d0UHMbJqMkxUpyI8yW+GGETYiB8mJ+XP8Aycur/wDMO3/EYc3Ob/EIe/8A&#xA;Wz6vTLmL1baWKlfURlp8xTNJA0QVnG4kLLUrNYwkbLJEpHjRlGGe0j70YzcQfJDutroukyNBFWK3&#xA;QtwBoWPiT4nxywGWbJudynkEHFr2pS2guk05PRZOYPr70pXp6eWSwYxLhMt/6v7Vs1dIjTdftLuw&#xA;S7nZLTmzKEkkH7HWhPGuRzaWUZcI9XwYnLECyQFbVzG2lXO4POMrEetXccY6ddyxFMojhjkkIzHF&#xA;G9wVy5DGBMTRrb9CKgt4LeP04I1ijBJCIAoqxqdh4k5VDHGAqIoN0pmRsmyvybF2KuxVIb51OpuG&#xA;FRVAD3BAGZ2MehHVStQk15HEVBi5GqHvtvX55Ke0SeqoHUvJNwJmewdWiY1ETkhl9ge4w49aK9SW&#xA;4/J11czRtcSrFEiIjBfiYlFANO2J1gA2CU/tNEisIwmnyvbpWrRmjox7khtwT/kkZizzmf1C2jwq&#xA;PpNfd+Pc84WScWV5NLIgXmhlJUig+JjuW26Z0J4RIfFoiJ9SPl+1Z+Wf5x3etX9poF95a1GyDmWG&#xA;21BkaSL9yWAWWiL6ZHEqetD18c0Op4JSMoke63MEZAbgvW8xUvNPNP8A5OHQP+YQfruM3en/AMRy&#xA;f1v+JY9WS3EjfXLxQ7gq8fRrqgrGOnFeH/AfTvmmI9I/Y1g+qXw7+75fJUsGc3SVdyN9ibgjp/xY&#xA;Av35Atg5vFdOTVz+YcsulW5ubuC/lk9MbLwEpDc2/ZWhoTnaZTj/ACoEzUTAfc8zjE/zFwFkSP3s&#xA;7/OVdZl0W1SC2L6ej+teToeRRlHFARTZfiPxfq76bsI4xkJJ9XIOz7W4zAUPT1Y/5YvdXsvys1O4&#xA;0oulyuoENJEKusZjh5MPD59sztXjxz1sRPlwfpLiaec46WRhz4v1MU/xr5u/6vF3/wAjW/rmy/IY&#xA;P5kfk4X5zL/OPzTjyt5svLjVVj1/zDf2tjwY+pHI5q4+yCfiKj6DmLrNFGMLxY4GXub9NqiZfvJy&#xA;EU083eY7C2tI5fL/AJn1C4ui4Vo2kdgVoaksVjpx2p165jaLSylIjLigB7v7W/VaiIjePJIlB/4o&#xA;tP8Aqa9Z/wCRI/6r5b+Tl/qWP5/8da/zI/1Sfy/atk80wCNjH5q1hpADwUxAAmmwJ9bCNGb3xY/n&#xA;/wAdQdSP9Un8v2pD/jXzd/1eLv8A5Gt/XM38hg/mR+TjfnMv84/NkHkTzV5wu/NNjAb24vIHkAuY&#xA;pGMiCI/aY16UG9cwu0dHgjhkeERPT3uVotTmllAskMs8uf8Ak5dX/wCYdv8AiMOa/N/iEPf+t6Hq&#xA;9QzRMlO3gSCCOFPsRqFStOg2A2AGSlLiNljCIiAB0auraG6t5LeYVilHFgDTY4wmYkEcwki0lvPJ&#xA;9lLa+jDLKpWhjDuWQU7cTmZj10hKyB8mJgjbfSFsBGdPC0RWVo5Sx5Anls4rxNf8k5TPPx/X9jA4&#xA;yDcfx+pZp9nN9amS4KrDby+pbW0dOC+oteROzGhLUFAPwpLLkHCK5kbn8fD8W1YcZ4iDyB2A8/wf&#xA;xVGuYrluxV2KuxVItQX09SJZaiQqVP4frzOxG4I6rdIjLX4YdEDEn5in8cOc1BU/zASsj/a/1jhK&#xA;r8CvPPN40WGW7sIVaVrlg13FsI1+FgVr1357j8cwtb7TeAeADimBV91/eXaaLsg5RxyNR+9f5G1X&#xA;SbKZLFohA7IIrdloI1Rei8QBxHTf9Wavs3tAZJm4y3/i5/Ny+09KREURQ/hZ8kkbglGDAdeJB/Vn&#xA;Qugebeaf/Jw6B/zCD9dxm70/+I5P63/EserNjp9sZZZSH5zEF/3klKqOIovKg28M0XEapIgLJ718&#xA;dpDG4deXIeLsR9xJwWmnjnl/V3sfM2s2tvfSWV5d3sqqEt4JAwR3PxSTvGEpvtnWanAJ4YSMeKMY&#xA;jqR3dAC89gy8OSQBomR6D9JZDrGv6nY2TSajrMv1WT906i10+blzB2KRzuaEe2YODTQnKoQF8/qm&#xA;Pvi5eXPKMfVLb3RP6VD8s5J4PIl28ZMZe/ajDY09OIGh+jB25Rzj+r+kr2XYwn+t+gM0g0W4khjk&#xA;+vyjmoam+1RX+bNKZeTsxDzUNT065s7Uzi9lcggcSSOv04Ym+iJRoc0LbxySAO11MGZVJo8fif5p&#xA;VOSLEK31dv8Alrn/AORkP/VbBaad9Xb/AJa5/wDkZD/1Wxtad9Xb/lrn/wCRkP8A1WxtaWWtxcw6&#xA;tFEs8jozKrB2DVDdfss6/jiRsoO6SeXP/Jy6v/zDt/xGHN3m/wAQh7/1s+r1DNEyQcOs6RPqU+lw&#xA;3sEmpWqiS4skkQzRo1KM8YPIA1HUYeE1a2jMCpTe+bvLFjrFtot5qltb6rd7W1nJIqyOT0FD3b9m&#xA;vXtkhAkXSLTbIpQtmedzeSdQJFjU+yIpPb+ZiMtybCI8v0tWPeUj5/oVkubZ5XhSVGlj/vI1YFl+&#xA;YG4zHjkiSYgix0cg45AAkGiqZNg7FXYqo3UEUsdXWpT4kPcEZOEiDsrdtbQwJSJact2PUnGczLmq&#xA;rkFWIQOVT+0cJS4ypQ0NT2x4StPHrlpJJpJpG5vIxZm8STUnPPtZppQ9UjZkXusRFAAbBU0a1lSa&#xA;7uZUKtIyxx1/33GtQfpd2ztOyMYx6aERz3J95/ZTxfaspS1EpHlyHuH7bei+UoVTTnl/alkNfkoo&#xA;B+vMzjEuTjiBjzYf5p/8nDoH/MIP13GbvT/4jk/rf8Sjqz5gSpANDTY5oWaS+UbzWbnTZP0uUe7i&#xA;neMSxrwV0ADKePY/FQ/LE5IT3hsP0qcU8Z4ZkE947nnn5s6ibC0l1bTdBsr66huF+t+tG7O8Chg7&#xA;fu2Uk7DfsMztPrpwkMfHIWNnEz6MTicgiDRR9hZ+WL2xt7yLRLRY7mJJkVkfkFkUMAaOd98tOuzg&#xA;1xlpGmxEXwhlBa1PlkR21vHaxQyBBDEOKA9dh71zDlKUp3I2XKAAhQFBkNn/ALxwf8Y0/wCIjKDz&#xA;bhyY35ta9utSstKgfis4BpWgLFioLU7Cmc92vPLLLDFA1xO97LhjjjlkkL4Vv+A9WDELqChAvwn4&#xA;wSfAjsPeuV/yJnv+82+LZ/K2Gvo+5D+Xri8Bura4kdjbsFG8jUNWBFVV9vhzJ7Cy5Dxwmb4CP0/q&#xA;cbtnFAcE4iuIH9H602kuUjHKSQovSresBX6Ys6CnSWpnUrQCpuVA+cv/AFTwxgSaAUFKhqtv+lY7&#xA;g8vSR1JbqaL37Zl/k5cK8O9pf5Yljl/OHVZIzyR7YsrDuCkJGbHUAjQwB7/1p6vU80LJ4H+cdj5b&#xA;0bzbpnmYTtY3g1O1F3f2ThXWNmX1jMoBLsscLDjt1ruNjLB4viGJ+kxsX+hyMkIHCJD6gae6vf2a&#xA;Wi3fqqbd1DxyKeQYMKqVp1qMx9RqIYYmUzQDVjgZmg8u1vQV1bz/AA6tdCOTQI5ba7NqIVWdrm3X&#xA;grPLyJZB8J403oB411A9odN9Q4geXw93J2MdFLgIJHu8/e9QS8S4tXlsyszgHgtafF2DV6Zt9Lqc&#xA;WccUJXF1ubHOG1brrO3FvbJFy5MKl36cnYlnan+UxJzJyT4jbVjhwxp59fMmked7ZY7mBLmWZp2t&#xA;XeryQSsyHgAwKsC4Yk1FB75zeTSDBm8ajz79vUa+4l6KOfxsAhY5fH0i9vjT0fOhdA7FXYqtl/un&#xA;/wBU/qwx5qFw6YFWvIqfPwwgWkBDcqliT3y2mYdUYFefeYoE0u8W1hIkUxh6sOlSRT8M47tbKcGT&#xA;gFHa9/i9RoD40OI7bqOhNLfXdtYysPUlqrzgbVAJrw+jxzN0HbMZ5Bjjj4RL+lf6HWa7sqYgckp8&#xA;RH9Gv0vS7Kzhs7ZLeIUVBue5Pcn55vYxA5OolIy5vO/NP/k4dA/5hB+u4ze6f/Ecn9b/AIlr6s/z&#xA;QM0lnvG0vUZTIjNaXJDgr2elGzDlk8KZv6S7CGLxsYo+qLz7ztqFtd3U1m1mr6fOOUscx5CUE1Ow&#xA;px3HvnR9maDDqsYy2RKJrbp+t5ntTtLPo8hw8MTCQvezfu5V+xm2k6DpV3pdpc2rultLEjRRjiAq&#xA;8RRaAU+HpmBl4oTMTzBc3AY5ICQ5EI+8sLC10hoHZliDBuY3YufbKgSS3EABJxNagAC+uQBsAF/5&#xA;vyyj3NdjvSTWLnhqMM1vcSSSRorLI+zKwYkU3bOS9oDKGaEhttt7wXp+wxGWKcTvv+hP5/zALaUF&#xA;iiKakw4s3+61/wAsfwGSn7QXh2H7z7PesOxay7n939vuSLQmt2a4M80iMeJBQcia8q1qRlns2D+8&#xA;P9X9LV2+R6B7/wBCaldNOxuZiPeMf81Z0+7zuyU3Lo0rCIkxA/AWFCfcgVzbYMXAN+bZGNKWXsm/&#xA;JEIj/MmRx/u7T2c/MMqf8a4dbK9L7pMerN/Ous3thphg02h1G5+CNqgemh2aTfuP2ff5ZosGXDCY&#xA;8U1Fvx4JzB4RdPI9X8tW+rWZtdTtWuYFYSMHZweS9GLKQx+/OkGv0uSo8cd+QtxpaXKLJiWfW893&#xA;Pa6bpsKKsFlYRuy/ZARYwRxH+pxAzz72l0wyzmAaGPiLutBGMMImecjTWcA56N065nsL+1dhSC4o&#xA;C3YqTx/4U51HY2nOKUcpO0+n2ONqIjJCQHOKea35m0/QaT6u31XTWIUX5DNGjnoJSqkRj/KbbOvj&#xA;xGXCA6WXCIcRPV8p+TV1bWvz4hg1DUxdXNxf3C3N8kgkjmghR2KxsKrweOPilOgpSmZ2s0+PLpzC&#xA;Y9JcLTZ5w1HHA8n2BbwiCFIVZmWMBQzmrUHie+a/HDhiI9zmzlxEnvX5Ni7FVsv90/8Aqn9WGPNQ&#xA;p3Fysfwjd/1ZKMLW0GZSTUmpy7hW2vUxpbb9TGlt85/85GeaNf0vztY2+nXklrC+mxSOqUALmeZS&#xA;TX2UYjs3Bm9WSAlJx83aGfEeGEjEJd+QfmfzJq35kWsN9fS3NrbwTzvExHEkJwUmlOhfK5dlabH6&#xA;oQAkOrdi1uecfXMkHo+pxexU3BBweGU2+UPzN/NPXX/Mi+u7G9+q/o2V7PTyqJ8McLMhNWU15MWb&#xA;4vHNvhHDi4DyluXVZM2WUiY8gXWP5+/mVbkGS/hvF7Ca3iA++JYz+OVnRYz0ahrco5llOk/m35n8&#xA;3W1xb33oWi25Q8LNZI+Yav2y7yE049tszuz9BiBJI4j57uv7R7QzEAA8I8tk503SzcKbq7YlekMR&#xA;3aQnx8FHv1zH7X7Vx4IHFiI4z3fw/tc/sHsTLqcozZgfCG/q/i+fR6zoFq9po9rA68GRalKUpyJa&#xA;lPauc3jMuEcW5ej1HBxngAEelcna3bzXFgY4V5vyU8RToPnlsTRceYsMd/Qmqf8ALOfvX+uW8Qau&#xA;Apbq3lLXLl0lt4ysijiwLAVFa9jleWGPIKmBIebPHLJA3AmJ8kB/gvzZ/IP+DGY/5DS/zI/Ju/Oa&#xA;n+fL5plpPlTWrRZGniLyykVowIAWtNyffMnHGEBwxAA8miZnM3IklH/oTVP+Wc/ev9cnxBjwFB3O&#xA;m6jYMkzRtGC3FDsdyOm1eozZ4M4yCjzbY2v9azS1jn9D96zzI0YoFqURTv8AaoOVQPHLKJNX3MlD&#xA;ygP+d+ielOVhMKDoKSIf45PV/wCLH+sPuY9WW+fdY0fQfK2oa7qcCzRWMVUqiu3ORhHGFqDSruua&#xA;THijOYBFpOeWOJIJHueCRfnb5Xh4rN9ZuoCQJEWMc+PehdgK08c2mo7O00jxwuE/6Owv8d1NcO2J&#xA;AUfUPN7frUNi0Wm6hYFhDLAEidQeDQlKxgn/AFTsP6ZxftHIjEZdZGi7js7JcTHpzCWE0Fevyzic&#xA;cOI1YHvdknei6S94sN3eNygiqLaD5Md2+nO67L0wOKJJ4ojl8/1ut1WoECYx5nmWSOiSIyOodHBV&#xA;lYVBB2IIObp1b5A82aEB+Y1/rXl6WLRILa856clmmyGGi+oo+FV5spfjSm9M6jB2ZKUBxnmHR5O0&#xA;IQkRGPV9S+Sdbn1zytp+p3AAuJ4yJ+IoDJG7RswG9AzJWmaHWYPCymA6f2u102bxMYl3p3mK3uxV&#xA;C3d2iful3dtj7A5bjx3uji3S0ykmpNSe+ZPC18TXqY0ttmXpjwrxO9TGlt84/wDOTptZPM2jiKVX&#xA;vBaMk0C7sq+oTGT/AKxZqfLMnANnX6s2Qg/+caLcR/mDqXqEGSDTplFN9/rEKkg5HLuHMgK2fQPm&#xA;jzbaeXLKO9vLW7uLZ34O9pCZ/TqKhpADUL2r45TGFpnk4XyHp9g+q+apDdBZUQme44sHRi3xUqCw&#xA;NWbxza6TGMmQfzQ06eBEd+bLf8OaIDVbRF7/AAll/URm4/K4+5uljjLmEZp9pBpzs9kvos4AYqTv&#xA;TcdSckNPAchzaxpsd3wjZM4tb1qF+cWoXMbjoyTSKfvByodn6ccscP8ASj9TmSz5CKMifiiP8V+a&#xA;f+rxff8ASTN/zVkvyeH+ZH/Shrsu/wAV+af+rxff9JM3/NWP5PD/ADI/6ULZd/ivzT/1eL7/AKSZ&#xA;v+asfyeH+ZH/AEoWy7/Ffmn/AKvF9/0kzf8ANWP5PD/Mj/pQtl3+K/NP/V4vv+kmb/mrH8nh/mR/&#xA;0oWy7/Ffmn/q8X3/AEkzf81Y/k8P8yP+lC2Xf4r80/8AV4vv+kmb/mrH8nh/mR/0oWyyTybrup3T&#xA;3Ivr6a8dOJjhuZXlAG9WUMTQ+4zB1unhGuGIj7hTKJZfNdxvbrKbdObyyE/a4gkISQK/rzWiO9Wz&#xA;WeUJVk89xIu7pYzvIANgHkjp06dMOrFacn+kPuLHqkv/ADlRqr23kSxsEahv79PUHjHDG7kf8GUO&#xA;a7RxuduLrZVCu98qZs3VPqL/AJyemTTPyz0jR4W2e8giHasVvA/av83HNXpt5ku8nsKfNcGpa9aR&#xA;RSx3V1bpLVoXWSRA3E8SVIIrQimZh0+Kf1RifgHW5pzjLYkPs/8AJa9ub38r9AubqRpZ3gcPI5LM&#xA;3CZ1BJJJJoM1mTHGEjGIAHcHY4JmUASbLK9WuWtdKvLpftQQSyr80Qt/DDhjxTA7yGWSXDEnuD5T&#xA;JJNTuT1OegvGPqDynYrY+WNLtVFPTtYuf+uyhnP0sTnBavJx5ZHzL2Gmhw44jyTbMduULuWdI6Qo&#xA;Xc9x0GTxxBO7GRPRKfqt9y5emxatanxzL4497VRa+p3n++mw+JHvRwl31O8/302PiR714S76nef7&#xA;6bHxI968JcbS7AJMZAG5Jx8SPevCXzt+W2hXP5hfmrqnmu6iafTNPuDPGDupepW0j368ETkf9UeO&#xA;ZGSYgKcLFEzmZIv8gNGuLP8AMXzbaPETd2IktnPcUuSG+8oMhOYoFzaL3e/tdcWzlOn26SXtP3KX&#xA;DMkRNf2mRXalPAZUMke9TGXR51Zfkvrs8uoX+uajFNqd/IJfUtbRIgjVJYMwZWlX4qDluKdeuZel&#xA;10cJNbg+f4pEBPrv8G/+VKap/wAtw/5En/mvNh/LcO77Wzfud/ypTVP+W4f8iT/zXj/LcO77V37n&#xA;f8qU1T/luH/Ik/8ANeD+W4d32rv3O/5Upqn/AC3D/kSf+a8f5bh3fau/cwzU/L81hqFxZPJya3ka&#xA;Nm40qVNOlc2eLUCcRKubWZ0hv0Y/8/4ZZ4i+I79GP/P+GPiL4iI07QJL2/t7QS8DO6xhypNORpWl&#xA;chkz8MSa5KMjL/8AlT13/wBXJP8AkUf+a8138rx/m/aztUX8ltSYVW/UjxERP/G+RPbUB0+1d1SH&#xA;8mtZhkWWHUfTkXdWWIgj/h8jLtnGRRj9qd07PkfzX9QjthqS+qjuzSm3BPF1QLtyptwOYn53DxXw&#xA;7e9lZpP/ACX5OtfLzT3EjzXepXW095IoX4Qa8VUFqDx3zE1usOagKER0UKP5m6LpmqaZarqFpFdw&#xA;wzV4yosnHktOShunTNLqZzgAYkj3Oy7Px48kjGYEturD5vyg/Ku+1uJBpKLYzIGUxSzxkfuv8hxv&#xA;yGGGty+KAJek+7uasnZ+IYSTH1g+fexT/nLK7kurnyrp1tV+Zun4j9p3MKIKeI3+/NrpY1duBMp5&#xA;+af5LwL+U+mWukRCTU/K0JkLIPinjYc7ugA3LP8AvF+kDrkcGf1m+RadTh4o7cwyH/nHfzZp+tfl&#xA;7a6dAvpXmh0tbuImtQxZ45B7OK/SDkNVAid97LSTBhXc9H1S1+t6Zd2tafWIZIqjqOaFf45RCZgR&#xA;IdN3IlASHCerxH/lV8P1IXf6Rbj6vpGL0RX7PKvLn+FM2P8AorPBfh73/O/Y4/8AoYHicPibVfL9&#xA;r3WEKIkCCihRxHgKbdc1l3u5NVsuxV2KuxV2KuxV2Kse/MLUn07yVrFzHDc3En1Z4kSyjMs4Mw9I&#xA;Oif5HPma9hkoAk7faxmQBvdeXNLfyh8p6Z5a8h6bbWBaT67Gt/cTyIEkkkuEV/iUFgOKcUpXtk80&#xA;zKW7DDjjGNR5MN8tXnlbQPz183G41mygbVo4fQtWkZZBMERpldmRYgxepC86/jkiZSgBR2bOEDex&#xA;u9lBBFR0yhLsVdirsVdiqTS+dPKUUjRyavaK6Eq6mVNiNiOuZQ0WYixCXyRbx3zHqmmz69qE0NzH&#xA;JFJO7I6sCCC2xBzrdJAxxRBG9BxJxNlLfr1n/v5PvGZNFjwl316z/wB/J94xorwlG6Lqenw6taSy&#xA;XEaIkqszFgAAD1OU6iBOOQHckRNvR083eXXdUXUrcsxAUeou5O3jnPHSZB/CW3dNo7qSM1Rip9sx&#xA;zAHmjiKIXV7oDcq3uR/TKzgiy8QttqlzxDAhS22w8Pn88RgikzNKL39w/wBqQ/KtB+GTGIDox4yh&#xA;btEureSCQ/DIKV8D1B+g5HLhE4mJ6tmDOccxIdEm0hl+sxRFlMtrzjlUGpBBJFfobNRp9PIZYcQ5&#xA;A/YT+t3OszROORifq4ftA/Uwbz/pq63+cnk2xkJaGzhkv5VPSkTl1/4J4lU5vQKDobeuRX00eyt8&#xA;PdTuPuyqWIFImQ8h8p6bL5B/Oya2tYCPL3mi3ma2SMHhFJGfVKbdPTYFV/yXGTyx4oAE7hx8QMMh&#xA;obF7cNatu6OPu/rmL+Xk5niBhh8w+WvRe0NyP+OqIacWPUceOw+e/T3zF/kbPw1w7cXF0+nv/G7m&#xA;fyth4r4t+Hh6/V3fjZnUeo2bmgkAPg1R+vLjhkOjiiYRIIIqNxlbJ2KuxV2KuxV2KuxV2KpTc+Uf&#xA;Kl1PJcXOi2E9xKS0s0ltC7sx6lmZSSckJnvRSaoiIioihUUAKoFAANgABkUt4q7FXYq7FXnU/wCS&#xA;HluSZ3S8u40diyxgxkKCa0BKV2zdR7cygco/ax4VE/kZoldtRuQO1RH/AEyf8u5P5oXhd/yovRf+&#xA;rlc/8DH/AEx/l6f80Lwu/wCVF6L/ANXK5/4GP+mP8vT/AJoXhcPyM0Su+o3JHegj/pj/AC7k/mhe&#xA;FWi/I/y2kqNJeXciKQWjJjAYDtULXfInt3LWwivCz39HWX++VzUeLLvXgDv0fZf75XHxZd68Ad+j&#xA;7OlPSFMfFl3rwh36Psv98rj4su9eAO/R9l/vlcfFl3rwBItL8h6ZYag9/wCvNcXMpZ5Gl4UZnFCx&#xA;Cqo+QG2ZmbtGc4cAAiPJAgLTKLy/aJdC4dmlcArRgoFD8gM0WHSzhl8U5JyPnVfKnKlmBhwAABF/&#xA;o+y/3yubHxZd7jcAUp9GsJjGTHx9NuQ498xdTh8bh4iRwyvZtxT4LrqKXT6Tp08LwywK0UilHXcV&#xA;UihGxzLjnmDYLSccSKISuHyD5Ogljmi0qFZIjWNviND1rueuXy7QzkUZFpGjxA2IhN/0fZf75XMf&#xA;xZd7fwBVihjiXjGvFfAZCUieaQKX4EuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:9367cdc3-820e-654f-ae95-d59aa958544c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9367cdc3-820e-654f-ae95-d59aa958544c</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:dec78a2f-5ec5-3f46-92ca-a5fb49eac5bf</stRef:instanceID>
            <stRef:documentID>xmp.did:dec78a2f-5ec5-3f46-92ca-a5fb49eac5bf</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:085f7e5f-40f4-644e-a20c-71d055a884eb</stEvt:instanceID>
                  <stEvt:when>2018-07-03T12:46:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:79120dc0-1e89-4549-9b0a-85d7b923f785</stEvt:instanceID>
                  <stEvt:when>2018-07-15T00:18:45+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:13d07eb3-3e91-3540-83fa-e172f164af29</stEvt:instanceID>
                  <stEvt:when>2018-11-04T17:00:22+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:077a2904-e327-704c-866f-bc7877be2792</stEvt:instanceID>
                  <stEvt:when>2018-11-04T17:12:25+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f4552a76-f91f-9a48-9009-6a0c06e135d8</stEvt:instanceID>
                  <stEvt:when>2018-11-15T16:39:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:85908caf-f755-9046-9ac3-1f0dc5cb66ba</stEvt:instanceID>
                  <stEvt:when>2018-11-15T16:51:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:dec78a2f-5ec5-3f46-92ca-a5fb49eac5bf</stEvt:instanceID>
                  <stEvt:when>2018-11-21T14:29:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9367cdc3-820e-654f-ae95-d59aa958544c</stEvt:instanceID>
                  <stEvt:when>2018-11-21T14:29:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>700.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=126 G=168 B=196</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>126</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>195</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=209 G=211 B=212</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
700 400 li
700 0 li
cp
clp
700 400 mo
0 400 li
0 0 li
700 0 li
700 400 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
415.46 91.9912 mo
414.003 91.9595 412.504 91.9717 411.003 92.0269 cv
410.693 92.0381 410.434 91.7964 410.422 91.4863 cv
410.41 91.1772 410.651 90.9175 410.96 90.9048 cv
410.962 90.9048 li
412.483 90.8486 414.006 90.8364 415.485 90.8687 cv
415.795 90.8755 416.041 91.1323 416.034 91.4424 cv
416.027 91.7402 415.79 91.979 415.496 91.9912 cv
415.46 91.9912 li
cp
403.708 92.0474 mo
403.673 91.7393 403.894 91.4609 404.201 91.4253 cv
405.717 91.2505 407.231 91.1138 408.704 91.0195 cv
409.014 90.9878 409.28 91.2339 409.3 91.5435 cv
409.32 91.853 409.085 92.1196 408.775 92.1396 cv
407.322 92.2329 405.827 92.3677 404.33 92.5405 cv
404.288 92.5439 li
403.997 92.5562 403.742 92.3413 403.708 92.0474 cv
cp
422.122 92.4604 mo
420.683 92.2852 419.189 92.1553 417.687 92.0752 cv
417.377 92.0586 417.14 91.7939 417.156 91.4844 cv
417.173 91.1743 417.439 90.9375 417.747 90.9536 cv
419.274 91.0356 420.793 91.1675 422.258 91.3462 cv
422.566 91.3838 422.785 91.6636 422.748 91.9712 cv
422.714 92.248 422.484 92.4531 422.214 92.4644 cv
422.122 92.4604 li
cp
397.054 93.0991 mo
396.996 92.7944 397.197 92.5015 397.502 92.4438 cv
398.992 92.1646 400.492 91.9189 401.96 91.7129 cv
402.267 91.6694 402.551 91.8838 402.595 92.1909 cv
402.638 92.4976 402.424 92.7817 402.116 92.8247 cv
400.666 93.0283 399.183 93.2715 397.709 93.5479 cv
397.628 93.5571 li
397.354 93.5684 397.105 93.377 397.054 93.0991 cv
cp
390.48 94.584 mo
390.404 94.2837 390.586 93.978 390.887 93.9023 cv
392.356 93.5303 393.836 93.1875 395.286 92.8833 cv
395.592 92.8213 395.888 93.0146 395.951 93.3174 cv
396.015 93.6211 395.82 93.9189 395.517 93.9824 cv
394.082 94.2832 392.616 94.6226 391.162 94.9907 cv
391.047 95.0073 li
390.787 95.0181 390.547 94.8462 390.48 94.584 cv
cp
428.686 93.6387 mo
427.276 93.2988 425.81 93.0063 424.325 92.77 cv
424.02 92.7212 423.811 92.4331 423.859 92.127 cv
423.908 91.8208 424.195 91.6128 424.502 91.6606 cv
426.016 91.9023 427.512 92.2002 428.949 92.5474 cv
429.251 92.6201 429.436 92.9233 429.363 93.2251 cv
429.303 93.4741 429.085 93.6445 428.841 93.6543 cv
428.686 93.6387 li
cp
384.021 96.4585 mo
383.927 96.1626 384.091 95.8472 384.387 95.7539 cv
385.822 95.2998 387.277 94.8701 388.711 94.4761 cv
389.01 94.397 389.318 94.5703 389.401 94.8691 cv
389.483 95.1685 389.308 95.4771 389.009 95.5596 cv
387.589 95.9492 386.147 96.3745 384.726 96.8242 cv
384.579 96.8501 li
384.332 96.8604 384.099 96.7051 384.021 96.4585 cv
cp
435.039 95.6211 mo
433.688 95.0952 432.272 94.6191 430.833 94.2056 cv
430.535 94.1201 430.363 93.8091 430.448 93.5112 cv
430.534 93.2134 430.844 93.042 431.144 93.1265 cv
432.615 93.5488 434.063 94.0366 435.446 94.5752 cv
435.735 94.6875 435.879 95.0127 435.766 95.3018 cv
435.683 95.5161 435.481 95.6504 435.266 95.6592 cv
435.039 95.6211 li
cp
377.67 98.6929 mo
377.56 98.4028 377.706 98.0791 377.996 97.9692 cv
379.402 97.4385 380.831 96.9282 382.245 96.4526 cv
382.537 96.353 382.856 96.5117 382.956 96.8052 cv
383.055 97.0991 382.896 97.418 382.603 97.5166 cv
381.203 97.9878 379.786 98.4937 378.393 99.02 cv
378.218 99.0557 li
377.982 99.0654 377.757 98.9253 377.67 98.6929 cv
cp
441.029 98.4839 mo
439.769 97.7568 438.44 97.0806 437.083 96.4746 cv
436.8 96.3481 436.674 96.0161 436.8 95.7329 cv
436.926 95.4497 437.257 95.3223 437.541 95.4492 cv
438.934 96.0713 440.296 96.7646 441.59 97.5112 cv
441.858 97.666 441.951 98.0093 441.796 98.2778 cv
441.696 98.4512 441.519 98.5508 441.332 98.5586 cv
441.229 98.5625 441.125 98.5391 441.029 98.4839 cv
cp
371.441 101.268 mo
371.316 100.984 371.445 100.653 371.729 100.528 cv
373.104 99.9248 374.504 99.3384 375.893 98.7852 cv
376.182 98.6709 376.508 98.8115 376.622 99.0991 cv
376.736 99.3872 376.597 99.7139 376.309 99.8286 cv
374.932 100.377 373.543 100.958 372.181 101.556 cv
371.979 101.604 li
371.754 101.613 371.537 101.486 371.441 101.268 cv
cp
365.351 104.169 mo
365.211 103.892 365.322 103.555 365.6 103.415 cv
366.939 102.741 368.308 102.082 369.669 101.455 cv
369.951 101.325 370.283 101.449 370.413 101.73 cv
370.543 102.012 370.42 102.345 370.138 102.475 cv
368.789 103.096 367.433 103.75 366.104 104.418 cv
365.875 104.478 li
365.662 104.487 365.453 104.373 365.351 104.169 cv
cp
446.486 102.258 mo
445.357 101.329 444.156 100.449 442.917 99.6411 cv
442.657 99.4722 442.584 99.124 442.753 98.8643 cv
442.922 98.6045 443.27 98.5313 443.529 98.7002 cv
444.804 99.5303 446.039 100.435 447.199 101.391 cv
447.439 101.587 447.474 101.941 447.276 102.181 cv
447.171 102.309 447.02 102.379 446.865 102.385 cv
446.732 102.391 446.598 102.349 446.486 102.258 cv
cp
359.421 107.387 mo
359.267 107.117 359.36 106.774 359.629 106.621 cv
360.929 105.878 362.26 105.148 363.586 104.451 cv
363.861 104.306 364.2 104.412 364.345 104.687 cv
364.489 104.961 364.384 105.3 364.109 105.445 cv
362.794 106.136 361.474 106.859 360.187 107.595 cv
359.932 107.669 li
359.729 107.677 359.528 107.575 359.421 107.387 cv
cp
451.237 106.889 mo
450.271 105.775 449.235 104.707 448.157 103.712 cv
447.93 103.502 447.915 103.147 448.125 102.919 cv
448.335 102.692 448.69 102.677 448.918 102.887 cv
450.027 103.91 451.093 105.009 452.085 106.154 cv
452.288 106.388 452.263 106.743 452.029 106.946 cv
451.929 107.032 451.807 107.078 451.685 107.083 cv
451.52 107.089 451.354 107.023 451.237 106.889 cv
cp
353.679 110.916 mo
353.511 110.655 353.585 110.308 353.846 110.139 cv
355.096 109.331 356.386 108.529 357.681 107.758 cv
357.947 107.6 358.291 107.687 358.45 107.953 cv
358.608 108.219 358.521 108.564 358.255 108.723 cv
356.973 109.487 355.694 110.281 354.455 111.082 cv
354.368 111.139 354.271 111.167 354.174 111.171 cv
353.982 111.18 353.791 111.088 353.679 110.916 cv
cp
463.734 109.705 mo
462.326 109.492 460.854 109.46 459.396 109.608 cv
459.084 109.642 458.813 109.415 458.781 109.106 cv
458.749 108.798 458.974 108.522 459.282 108.491 cv
460.836 108.332 462.401 108.367 463.902 108.594 cv
464.208 108.641 464.42 108.927 464.373 109.233 cv
464.332 109.503 464.105 109.7 463.842 109.71 cv
463.734 109.705 li
cp
348.147 114.765 mo
347.964 114.515 348.019 114.164 348.269 113.98 cv
349.47 113.099 350.712 112.226 351.962 111.383 cv
352.219 111.21 352.568 111.278 352.741 111.535 cv
352.915 111.792 352.847 112.141 352.59 112.314 cv
351.353 113.148 350.122 114.014 348.932 114.886 cv
348.839 114.954 348.731 114.989 348.624 114.994 cv
348.443 115.001 348.262 114.922 348.147 114.765 cv
cp
455.125 112.236 mo
454.901 111.837 454.661 111.444 454.41 111.067 cv
454.274 110.864 li
453.886 111.017 453.5 111.183 453.12 111.361 cv
452.838 111.492 452.505 111.372 452.373 111.091 cv
452.241 110.811 452.362 110.476 452.644 110.345 cv
452.965 110.194 453.29 110.051 453.618 109.917 cv
453.3 109.47 452.973 109.03 452.641 108.601 cv
452.45 108.356 452.495 108.004 452.74 107.813 cv
452.985 107.624 453.338 107.668 453.528 107.914 cv
453.929 108.431 454.323 108.965 454.704 109.508 cv
455.461 109.246 456.229 109.029 457.003 108.858 cv
457.307 108.789 457.605 108.982 457.672 109.285 cv
457.739 109.588 457.548 109.888 457.245 109.954 cv
456.612 110.094 455.983 110.267 455.362 110.471 cv
455.622 110.863 455.872 111.272 456.104 111.687 cv
456.256 111.958 456.16 112.3 455.889 112.451 cv
455.639 112.522 li
455.434 112.531 455.231 112.427 455.125 112.236 cv
cp
469.856 111.863 mo
468.576 111.134 467.229 110.564 465.855 110.17 cv
465.558 110.084 465.385 109.773 465.471 109.475 cv
465.556 109.178 465.865 109.005 466.165 109.09 cv
467.626 109.509 469.055 110.114 470.412 110.888 cv
470.682 111.042 470.775 111.384 470.622 111.653 cv
470.522 111.828 470.344 111.929 470.156 111.937 cv
470.055 111.941 469.951 111.917 469.856 111.863 cv
cp
342.866 118.95 mo
342.667 118.712 342.698 118.358 342.936 118.159 cv
344.069 117.208 345.255 116.258 346.461 115.335 cv
346.708 115.146 347.06 115.193 347.249 115.439 cv
347.437 115.685 347.391 116.038 347.145 116.226 cv
345.951 117.14 344.778 118.08 343.657 119.019 cv
343.558 119.102 343.439 119.145 343.319 119.15 cv
343.151 119.157 342.982 119.088 342.866 118.95 cv
cp
446.95 115.042 mo
446.734 114.819 446.74 114.463 446.963 114.248 cv
448.057 113.188 449.284 112.242 450.611 111.435 cv
450.876 111.274 451.222 111.358 451.383 111.623 cv
451.544 111.887 451.46 112.233 451.195 112.394 cv
449.939 113.158 448.778 114.053 447.743 115.055 cv
447.641 115.155 447.509 115.207 447.376 115.212 cv
447.222 115.219 447.065 115.162 446.95 115.042 cv
cp
474.929 115.976 mo
473.94 114.879 472.85 113.894 471.688 113.048 cv
471.438 112.866 471.383 112.515 471.564 112.264 cv
471.747 112.013 472.1 111.958 472.349 112.141 cv
473.574 113.032 474.723 114.07 475.763 115.225 cv
475.971 115.455 475.952 115.81 475.722 116.018 cv
475.62 116.109 475.495 116.156 475.369 116.161 cv
475.208 116.168 475.045 116.105 474.929 115.976 cv
cp
337.888 123.49 mo
337.671 123.268 337.677 122.912 337.899 122.696 cv
338.958 121.667 340.075 120.636 341.221 119.63 cv
341.454 119.426 341.808 119.448 342.013 119.681 cv
342.218 119.914 342.195 120.269 341.962 120.474 cv
340.83 121.467 339.727 122.486 338.682 123.501 cv
338.578 123.602 338.447 123.654 338.313 123.66 cv
338.159 123.666 338.003 123.609 337.888 123.49 cv
cp
457.313 118.38 mo
457.049 116.932 456.634 115.524 456.079 114.197 cv
455.959 113.91 456.095 113.582 456.38 113.462 cv
456.666 113.343 456.995 113.477 457.115 113.763 cv
457.701 115.165 458.14 116.65 458.419 118.178 cv
458.474 118.483 458.272 118.776 457.967 118.832 cv
457.889 118.84 li
457.613 118.852 457.365 118.659 457.313 118.38 cv
cp
443.24 120.62 mo
442.958 120.493 442.832 120.16 442.96 119.877 cv
443.586 118.494 444.406 117.173 445.399 115.951 cv
445.596 115.71 445.949 115.674 446.189 115.87 cv
446.431 116.065 446.467 116.419 446.271 116.66 cv
445.339 117.807 444.568 119.045 443.983 120.34 cv
443.893 120.541 443.699 120.661 443.494 120.67 cv
443.24 120.62 li
cp
478.547 121.435 mo
477.927 120.114 477.175 118.849 476.311 117.674 cv
476.127 117.424 476.181 117.073 476.431 116.889 cv
476.68 116.705 477.031 116.758 477.215 117.009 cv
478.122 118.242 478.912 119.571 479.563 120.958 cv
479.695 121.239 479.574 121.573 479.294 121.705 cv
479.078 121.757 li
478.859 121.766 478.646 121.646 478.547 121.435 cv
cp
333.292 128.416 mo
333.058 128.213 333.032 127.858 333.235 127.624 cv
334.197 126.511 335.228 125.391 336.298 124.293 cv
336.514 124.072 336.87 124.067 337.092 124.283 cv
337.314 124.5 337.318 124.855 337.102 125.077 cv
336.048 126.159 335.032 127.263 334.084 128.358 cv
333.979 128.48 333.832 128.546 333.683 128.552 cv
333.544 128.558 333.404 128.513 333.292 128.416 cv
cp
457.952 125.543 mo
457.645 125.501 457.43 125.219 457.471 124.912 cv
457.632 123.726 457.688 122.509 457.639 121.295 cv
457.628 121.046 457.613 120.797 457.594 120.548 cv
457.57 120.239 457.802 119.969 458.111 119.946 cv
458.414 119.911 458.69 120.153 458.714 120.462 cv
458.734 120.725 458.749 120.987 458.76 121.249 cv
458.813 122.529 458.753 123.812 458.584 125.063 cv
458.547 125.336 458.318 125.537 458.051 125.548 cv
457.952 125.543 li
cp
442.066 127.202 mo
441.757 127.205 441.503 126.956 441.501 126.646 cv
441.493 125.555 441.605 124.438 441.836 123.324 cv
441.924 122.899 442.03 122.471 442.153 122.053 cv
442.24 121.754 442.553 121.583 442.85 121.671 cv
443.147 121.758 443.318 122.07 443.231 122.367 cv
443.117 122.758 443.018 123.156 442.936 123.551 cv
442.722 124.587 442.616 125.625 442.624 126.637 cv
442.626 126.94 442.387 127.189 442.086 127.202 cv
442.066 127.202 li
cp
329.198 133.764 mo
328.944 133.587 328.881 133.237 329.058 132.982 cv
329.895 131.777 330.812 130.558 331.781 129.36 cv
331.976 129.121 332.329 129.083 332.57 129.277 cv
332.812 129.472 332.849 129.826 332.654 130.066 cv
331.701 131.244 330.802 132.44 329.98 133.623 cv
329.875 133.773 329.711 133.857 329.542 133.864 cv
329.424 133.869 329.303 133.836 329.198 133.764 cv
cp
480.408 127.704 mo
480.217 126.278 479.87 124.851 479.379 123.46 cv
479.275 123.167 479.429 122.847 479.721 122.743 cv
480.014 122.64 480.334 122.793 480.438 123.085 cv
480.955 124.548 481.319 126.052 481.521 127.555 cv
481.562 127.863 481.346 128.146 481.039 128.187 cv
480.986 128.191 li
480.7 128.203 480.446 127.994 480.408 127.704 cv
cp
455.734 131.868 mo
455.461 131.722 455.358 131.382 455.505 131.108 cv
456.174 129.858 456.696 128.494 457.059 127.054 cv
457.134 126.753 457.439 126.57 457.74 126.646 cv
458.041 126.722 458.224 127.027 458.147 127.327 cv
457.764 128.857 457.207 130.308 456.495 131.639 cv
456.397 131.82 456.215 131.927 456.022 131.935 cv
455.926 131.938 455.826 131.917 455.734 131.868 cv
cp
443.47 133.331 mo
443.369 133.187 443.273 133.042 443.181 132.894 cv
442.466 131.739 441.972 130.42 441.712 128.975 cv
441.657 128.669 441.86 128.378 442.165 128.323 cv
442.471 128.264 442.763 128.471 442.817 128.776 cv
443.052 130.082 443.495 131.269 444.136 132.302 cv
444.216 132.432 444.302 132.561 444.39 132.687 cv
444.567 132.941 444.506 133.291 444.252 133.468 cv
444.16 133.533 444.057 133.565 443.953 133.57 cv
443.769 133.577 443.584 133.493 443.47 133.331 cv
cp
480.666 134.888 mo
480.361 134.832 480.16 134.539 480.216 134.234 cv
480.394 133.265 480.51 132.287 480.56 131.326 cv
480.584 130.847 480.591 130.361 480.579 129.88 cv
480.572 129.571 480.828 129.313 481.127 129.306 cv
481.438 129.299 481.694 129.544 481.702 129.854 cv
481.714 130.362 481.707 130.877 481.681 131.384 cv
481.628 132.394 481.507 133.421 481.32 134.437 cv
481.271 134.7 481.048 134.886 480.791 134.896 cv
480.666 134.888 li
cp
449.381 137.089 mo
447.846 136.857 446.359 136.165 445.083 135.088 cv
444.846 134.887 444.815 134.534 445.016 134.296 cv
445.216 134.06 445.569 134.029 445.807 134.229 cv
446.908 135.16 448.237 135.781 449.548 135.979 cv
449.854 136.025 450.065 136.311 450.02 136.617 cv
449.979 136.888 449.751 137.084 449.487 137.095 cv
449.381 137.089 li
cp
451.247 136.827 mo
451.06 136.581 451.106 136.228 451.353 136.041 cv
452.488 135.172 453.499 134.131 454.356 132.947 cv
454.538 132.697 454.889 132.641 455.141 132.822 cv
455.392 133.003 455.448 133.354 455.266 133.605 cv
454.345 134.879 453.257 135.998 452.034 136.932 cv
451.939 137.005 451.828 137.042 451.717 137.047 cv
451.54 137.054 451.362 136.978 451.247 136.827 cv
cp
478.459 141.235 mo
478.178 141.104 478.056 140.77 478.187 140.489 cv
478.82 139.127 479.336 137.742 479.72 136.37 cv
479.804 136.071 480.112 135.896 480.412 135.98 cv
480.711 136.063 480.885 136.373 480.802 136.672 cv
480.401 138.103 479.864 139.546 479.204 140.962 cv
479.113 141.16 478.921 141.278 478.718 141.287 cv
478.459 141.235 li
cp
474.898 146.944 mo
474.649 146.759 474.598 146.408 474.782 146.159 cv
475.679 144.95 476.486 143.703 477.183 142.452 cv
477.334 142.182 477.677 142.084 477.947 142.235 cv
478.218 142.386 478.314 142.728 478.164 142.999 cv
477.443 144.292 476.609 145.58 475.684 146.827 cv
475.579 146.969 475.419 147.047 475.256 147.054 cv
475.132 147.059 475.006 147.023 474.898 146.944 cv
cp
470.37 151.923 mo
470.155 151.701 470.162 151.345 470.385 151.13 cv
470.741 150.786 471.093 150.435 471.438 150.08 cv
472.125 149.374 472.789 148.639 473.412 147.896 cv
473.61 147.658 473.965 147.626 474.202 147.826 cv
474.44 148.024 474.472 148.379 474.272 148.616 cv
473.632 149.381 472.949 150.136 472.244 150.862 cv
471.89 151.227 471.53 151.585 471.165 151.938 cv
471.062 152.037 470.931 152.089 470.798 152.095 cv
470.644 152.101 470.486 152.044 470.37 151.923 cv
cp
465.203 156.241 mo
465.016 155.995 465.063 155.643 465.31 155.455 cv
466.561 154.499 467.688 153.577 468.753 152.636 cv
468.984 152.43 469.339 152.452 469.545 152.685 cv
469.75 152.917 469.729 153.271 469.496 153.477 cv
468.41 154.437 467.264 155.375 465.99 156.347 cv
465.896 156.42 465.785 156.457 465.674 156.462 cv
465.496 156.469 465.319 156.393 465.203 156.241 cv
cp
459.674 160.088 mo
459.503 159.83 459.575 159.481 459.834 159.311 cv
461.195 158.412 462.4 157.585 463.518 156.781 cv
463.77 156.6 464.12 156.657 464.301 156.909 cv
464.482 157.161 464.425 157.512 464.173 157.692 cv
463.044 158.505 461.827 159.341 460.451 160.248 cv
460.363 160.306 460.265 160.336 460.166 160.34 cv
459.976 160.348 459.786 160.259 459.674 160.088 cv
cp
454.18 162.917 mo
455.439 162.126 456.702 161.335 457.956 160.53 cv
458.219 160.362 458.564 160.438 458.732 160.7 cv
458.899 160.96 458.824 161.308 458.563 161.476 cv
457.305 162.283 456.039 163.076 454.776 163.868 cv
454.462 163.402 li
454.761 163.877 li
454.18 162.917 li
cp
.658137 .198489 0 0 cmyk
f
688.202 375.344 mo
390.058 375.344 li
390.058 348.668 li
390.058 345.585 li
413.679 345.585 li
420.349 348.443 427.357 352.122 436.171 354.958 cv
443.122 357.194 450.342 358.079 457.746 358.079 cv
471.773 358.078 486.448 354.901 501.136 351.725 cv
515.825 348.547 530.528 345.371 544.617 345.371 cv
551.661 345.371 558.552 346.165 565.21 348.15 cv
574.857 351.027 583.222 355.949 592.78 358.989 cv
616.886 366.656 645.267 361.499 670.007 367.919 cv
676.564 369.62 682.712 372.158 688.202 375.344 cv
level3{
gsave
clp
[-.666651 76.6667 -76.6667 -.666651 506.979 323.527 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8
"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8
"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8
"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8"q^h8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"q^h8#8$q9#8$q9#S@%:#n[.;$5*==$5*==$PEF>$k`O?$k`O?%2&X@%2&X@%MAaA%h\jB%h\jB&/"sC
&/,$D&JG-E&eb6F&eb6F',(?G'GCHH'GCHH'b^QI'b^QI()$ZJ(D?cK(DHiL(_crM)&*&N)&*&N)AE/O
)AE/O)\`8P*#&AQ*#&AQ*>AJR*YeYT*YeYT*u+bU+;FkV+;FkV+VatW+r((X+r((X,8C1Y,S^:Z,S^:Z
,o$C[-5?L\-5?L\-PZU]-l)d_-l)d_.2Dm`.2Dm`.M`!a.i&*b.i&*b//A3c//A3c/J\<d/f+Kf/f+Kf
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/f+Kf0,FTg0,FTg0,FTg0Gjci0Gjci0Gjci0c0lj0c9rk1)U&l1)U&l1)U&l1E$5n1E$5n1`?>o1`?>o
1`HDp2&cMq2&cMq2B)Vr2B)Vr2]Met2]Met2]Met3#hnu3#qu!3?8)"3?8)"3?8)"3Z\8$3Z\8$3Z\8$
4!"A%4!+G&4<FP'4<FP'4<FP'4Wj_)4Wj_)4Wj_)4s9n+4s9n+4s9n+59U",59^(-5U$1.5U$1.5U$1.
5pH@05pH@066cI166cI166lO26R2X36R2X36mMa46mVg56mVg573qp673qp67OA*87OA*87j\397j\39
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.005618 .449438 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.666651 76.6667 -76.6667 -.666651 506.979 323.527 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~"U,)7"pP;<#RLeD#mq"I$O[@O$k*RS%LrsZ%hB0^&.oKd&eYik',)&o'GV>u()@Z%(`4),)&X;0)B0V7
)]Th<*??1B+!2RH+<VgN+X/*T,9nEY,UF`_-71)f-RU;j-n-Sp.Olnu.k</%/M/P+/hSb//hSe10/"t3
0/,(60JP::0ekC;1,:U?1,C^B1G^gD1c.$G2)R6K2E!HO2E!HP2`EZT3&ilW3&ioY3B9)[3BB2^3]fDb
4$,Mc4?P_g4?P_h4Ztqk4Zttm5!D1q5<h@s5<qJ!5X@\%5s[e&6:+"*6UO4.6UO4/6psF277BX67Rfj:
~>
<~&.fBa&.fBa&.oKd&J5Te&J5Te&J5Te&J5Te&J>]h&eYfi&eYfi&eYfi&eYfi&ebol',)#m',)#m',)#m
',)#n'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM8s'bqGu'bqGu'bqGu'bqGu()@Z$()@Z$()@]&(Ddl(
(Ddl)(`4),(`4),)&X;0)&X;0)&aD3)B'M4)B'M4)]K_8)]K_8)]Th;*#oq<*#ot>*??.@*??.A*Zc@D
*Zc@D+!2RH+!2RI+<VdL+<VdL+X&!P+X&!P+X/*S+sJ3T+sJ6V,9nEX,9nEY,U=W\,U=W\,pai`,pai`
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
503.496 345.585 mo
413.679 345.585 li
390.058 345.585 li
390.058 339.137 li
472.443 339.137 li
482.237 340.442 492.544 342.377 503.496 345.585 cv
310.286 345.585 mo
9.7476 345.585 li
10.4175 344.99 84.1206 265.668 109.832 258.648 cv
114.553 257.36 118.745 256.783 122.513 256.783 cv
138.699 256.783 147.06 267.434 155.856 278.085 cv
164.651 288.736 173.882 299.387 191.813 299.387 cv
195.835 299.387 200.295 298.851 205.286 297.659 cv
205.286 323.775 li
205.286 332.259 212.163 339.137 220.646 339.137 cv
310.286 339.137 li
310.286 345.585 li
level3{
gsave
clp
[-1.33327 132 -132 -1.33327 257.329 275.576 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.33327 132 -132 -1.33327 257.329 275.576 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
116.708 160.017 mo
119.073 151.999 127.934 148.649 132.22 141.62 cv
137.158 133.521 134.687 122.191 128.913 115.124 cv
128.542 114.67 100.127 63.7314 73.3477 87.4473 cv
65.5942 94.3135 62.7778 118.604 62.1992 129.424 cv
61.3135 145.988 60.4282 162.552 59.5425 179.116 cv
58.3813 200.835 76.7012 216.492 96.4409 210.68 cv
104.625 208.271 117.527 201.005 120.37 191.646 cv
123.737 180.563 113.478 170.975 116.708 160.017 cv
cp
.3299 .324437 0 0 cmyk
f
93.0293 316.221 mo
95.2744 316.184 li
92.292 135.969 li
90.0464 136.006 li
93.0293 316.221 li
cp
.0674754 .099031 0 0 cmyk
f
91.645 153.232 mo
111.601 132.327 li
109.976 130.776 li
91.2173 150.428 li
72.9668 140.313 li
71.8779 142.278 li
91.645 153.232 li
cp
f
91.8862 181.384 mo
114.73 174.243 li
114.06 172.1 li
91.915 179.022 li
72.1631 172.326 li
71.4419 174.453 li
91.8862 181.384 li
cp
f
102.025 177.735 mo
106.748 164.024 li
104.625 163.293 li
99.9019 177.004 li
102.025 177.735 li
cp
f
78.772 145.492 mo
81.0146 145.38 li
80.3848 132.711 li
78.1421 132.823 li
78.772 145.492 li
cp
f
62.7134 188.981 mo
63.4487 180.89 63.9893 172.023 59.2959 165.392 cv
55.252 159.677 47.5566 156.88 40.7476 158.506 cv
33.9385 160.132 28.3818 166.001 26.9668 172.857 cv
25.6948 179.019 27.5264 185.339 28.0854 191.606 cv
29.3784 206.099 23.9102 221.34 29.1221 234.925 cv
31.9761 242.364 39.7544 248.998 47.3687 246.65 cv
55.5288 244.135 58.6978 233.675 59.4551 226.123 cv
60.6948 213.767 61.5889 201.353 62.7134 188.981 cv
cp
.189853 .172976 0 0 cmyk
f
41.0752 333.627 mo
43.3213 333.643 li
44.2861 192.401 li
42.0405 192.386 li
41.0752 333.627 li
cp
.0674754 .099031 0 0 cmyk
f
43.1035 211.351 mo
55.98 197.982 li
54.3633 196.424 li
42.9849 208.235 li
33.8315 200.074 li
32.3374 201.75 li
43.1035 211.351 li
cp
f
42.4653 229.357 mo
43.3701 227.302 li
33.9839 223.173 li
33.0791 225.229 li
42.4653 229.357 li
cp
f
158.412 204.776 mo
157.558 202.719 156.233 200.886 155.345 198.842 cv
154.458 196.799 154.047 194.364 155.072 192.386 cv
156.529 189.571 160.241 188.723 162.199 186.23 cv
164.52 183.274 163.714 178.924 162.053 175.553 cv
160.392 172.181 157.975 169.095 157.23 165.41 cv
156.218 160.405 158.483 155.228 157.8 150.167 cv
157.254 146.126 154.612 142.319 150.822 140.817 cv
147.032 139.315 142.233 140.455 139.86 143.771 cv
136.487 148.484 138.719 155.15 137.066 160.706 cv
135.422 166.232 130.005 170.374 129.586 176.124 cv
129.299 180.063 131.464 183.715 132.446 187.541 cv
133.563 191.886 133.141 196.467 132.53 200.912 cv
131.919 205.355 131.125 209.831 131.517 214.3 cv
132.263 222.798 140.689 232.575 149.806 226.83 cv
156.234 222.78 161.403 211.986 158.412 204.776 cv
cp
.399542 .323766 0 0 cmyk
f
141.905 295.042 mo
147.393 164.297 li
145.149 164.203 li
139.661 294.947 li
141.905 295.042 li
cp
.0674754 .099031 0 0 cmyk
f
528.572 347.728 mo
529.81 350.987 530.007 360.657 532.92 370.06 cv
533.035 370.673 530.081 371.627 529.719 371.183 cv
525.049 360.913 517.983 349.381 516.586 342.705 cv
516.12 340.478 518.398 335.569 521.138 337.414 cv
523.632 339.093 527.546 345.021 528.572 347.728 cv
cp
.000274662 .466194 .447669 0 cmyk
f
535.906 373.615 mo
535.62 372.707 535.326 371.782 534.772 371.007 cv
534.231 370.248 533.591 369.513 532.711 369.205 cv
532.706 369.695 532.495 370.441 532.046 370.639 cv
531.691 370.795 529.608 370.74 529.319 370.998 cv
529.124 371.17 529.956 374.339 529.427 375.7 cv
529.427 375.7 527.529 377.137 526.55 377.827 cv
526.151 378.108 525.755 378.418 525.502 378.835 cv
525.248 379.252 525.162 379.803 525.402 380.229 cv
525.481 380.332 li
532.713 379.007 li
533.698 378.619 li
533.777 378.279 533.82 377.928 533.86 377.583 cv
534.005 376.343 534.149 375.103 534.294 373.862 cv
535.108 375.018 535.748 376.296 536.191 377.638 cv
537.065 377.294 li
536.68 376.067 536.293 374.842 535.906 373.615 cv
cp
.678584 .659937 0 0 cmyk
ef
533.177 303.547 mo
533.578 306.308 533.051 309.114 532.425 311.833 cv
530.45 320.411 526.68 332.856 522.782 340.749 cv
522.309 341.709 516.681 343.308 516.525 342.314 cv
514.943 332.194 517.192 314.269 520.272 304.499 cv
520.934 302.4 521.739 300.269 523.268 298.687 cv
527.715 294.082 532.446 298.524 533.177 303.547 cv
cp
.000274662 .466194 .447669 0 cmyk
f
542.025 349.997 mo
542.175 353.48 539.324 362.723 539.135 372.564 cv
539.052 373.183 535.948 373.16 535.744 372.624 cv
534.536 361.407 531.452 348.239 532.224 341.463 cv
532.48 339.201 536.187 335.259 538.207 337.87 cv
540.048 340.247 541.901 347.105 542.025 349.997 cv
cp
.00332647 .360296 .443305 0 cmyk
f
540.713 376.472 mo
540.779 375.522 540.844 374.554 540.613 373.63 cv
540.387 372.726 540.06 371.807 539.354 371.198 cv
539.169 371.652 538.7 372.27 538.21 372.289 cv
537.823 372.305 535.905 371.491 535.541 371.625 cv
535.279 371.721 534.855 375.445 533.699 376.235 cv
532.544 377.025 531.189 377.462 529.918 378.049 cv
529.475 378.254 529.029 378.486 528.705 378.852 cv
528.381 379.216 528.197 379.742 528.356 380.204 cv
528.415 380.32 li
536.826 380.32 li
537.023 380.033 537.192 379.722 537.356 379.415 cv
537.944 378.313 538.533 377.213 539.121 376.111 cv
539.457 377.485 539.585 378.908 539.506 380.32 cv
540.445 380.32 li
540.534 379.037 540.624 377.755 540.713 376.472 cv
cp
.493294 .415869 0 0 cmyk
ef
524.543 309.13 mo
526.753 311.868 533.415 314.104 535.3 312.932 cv
545.61 306.513 545.487 307.728 546.272 304.607 cv
546.881 302.188 545.576 299.743 544.318 297.589 cv
543.196 295.667 531.662 293.871 526.475 295.221 cv
525.423 295.494 523.8 295.122 523.36 296.15 cv
522.522 298.113 521.976 299.993 520.694 303.236 cv
519.973 305.062 522.454 306.539 524.543 309.13 cv
cp
.901671 .773953 .191257 .476265 cmyk
ef
544.856 298.534 mo
541.188 293.516 532.506 294.341 529.847 300.87 cv
526.905 308.093 530.515 336.571 532.166 342.073 cv
532.918 343.504 539.382 346.145 540.547 343.449 cv
541.414 335.028 543.983 319.371 545.238 315.106 cv
546.182 311.901 548.661 303.739 544.856 298.534 cv
cp
.00332647 .360296 .443305 0 cmyk
f
513.712 283.861 mo
513.496 284.535 517.791 285.188 518.382 284.66 cv
523.861 279.78 530.814 273.037 534.327 266.595 cv
534.932 265.486 532.256 261.647 532.416 260.396 cv
526.516 262.104 515.637 277.848 513.712 283.861 cv
cp
.678584 .659937 0 0 cmyk
ef
516.005 329.65 mo
518.778 331.632 543.163 332.999 546.427 333.983 cv
546.157 328.469 546.299 319.502 547.223 314.06 cv
547.75 310.948 548.474 307.813 548.161 304.674 cv
547.85 301.534 546.261 298.301 543.383 297.009 cv
540.373 295.657 536.896 296.718 533.596 296.756 cv
531.931 296.774 530.265 296.516 528.681 296.006 cv
527.498 295.625 525.964 294.438 524.685 294.951 cv
523.483 295.433 522.92 297.145 522.397 298.191 cv
521.538 299.917 515.311 317.565 516.005 329.65 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
524.691 287.416 mo
524.123 283.584 522.681 279.825 522.964 275.962 cv
523.188 272.912 525.696 270.36 527.294 267.521 cv
528.052 266.174 527.621 263.922 528.532 262.793 cv
530.412 260.464 533.137 260.084 535.985 259.164 cv
543.782 256.646 545.803 268.309 545.48 270.877 cv
545.158 273.444 543.548 277.052 543.085 279.599 cv
541.899 286.119 541.938 291.403 544.318 297.589 cv
544.427 297.871 529.017 299.886 526.134 299.306 cv
523.211 298.717 522.837 297.628 523.839 295.044 cv
524.805 292.555 525.085 290.073 524.691 287.416 cv
cp
.493294 .415869 0 0 cmyk
ef
517.829 280.874 mo
523.926 280.254 535.001 281.791 539.015 282.044 cv
538.849 286.696 515.769 287.661 514.28 286.107 cv
510.902 282.581 515.888 281.071 517.829 280.874 cv
cp
.000274662 .466194 .447669 0 cmyk
f
541.945 268.636 mo
542.136 275.936 542.327 283.236 542.518 290.536 cv
542.533 291.13 542.565 291.771 542.941 292.231 cv
543.716 293.179 545.429 292.852 546.228 291.926 cv
549.673 287.929 551.104 272.086 550.035 269.211 cv
549.157 266.849 547.45 264.506 545.099 263.442 cv
541.823 261.96 541.879 266.082 541.945 268.636 cv
cp
.493294 .415869 0 0 cmyk
ef
520.818 279.966 mo
521.998 279.18 543.291 285.488 546.906 288.953 cv
547.89 289.896 546.569 292.495 544.731 292.771 cv
543.498 292.956 541.688 292.634 540.653 292.333 cv
532.379 289.93 517.281 282.796 520.818 279.966 cv
cp
.00332647 .360296 .443305 0 cmyk
f
530.002 240.29 mo
530.584 238.843 531.991 237.762 533.539 237.573 cv
535.087 237.383 536.713 238.093 537.627 239.356 cv
538.092 239.999 538.398 240.785 539.035 241.26 cv
539.872 241.883 541.023 241.79 542.035 242.047 cv
543.571 242.436 544.837 243.743 545.175 245.292 cv
545.858 248.429 542.978 251.503 543.576 254.657 cv
543.849 256.094 544.81 257.295 545.807 258.363 cv
546.805 259.433 547.892 260.465 548.522 261.784 cv
549.153 263.103 549.22 264.818 548.249 265.911 cv
547.555 266.692 546.485 267.008 545.466 267.232 cv
544.328 267.484 543.166 267.521 542.002 267.521 cv
539.308 267.521 539.308 261.974 539.17 257.684 cv
539.091 255.201 533.345 254.932 532.643 252.55 cv
532.258 251.243 532.695 249.839 532.563 248.483 cv
532.435 247.161 531.756 246.228 530.914 245.263 cv
530.285 244.54 529.862 243.436 529.737 242.501 cv
529.639 241.757 529.722 240.987 530.002 240.29 cv
cp
.901671 .773953 .191257 .476265 cmyk
ef
533.607 254.106 mo
533.893 255.846 533.782 257.649 533.288 259.341 cv
533.135 259.864 532.957 260.473 533.272 260.919 cv
533.572 261.345 534.171 261.4 534.691 261.417 cv
535.563 261.445 536.454 261.472 537.29 261.223 cv
538.127 260.975 538.916 260.399 539.191 259.571 cv
539.418 258.888 539.27 258.143 539.12 257.438 cv
538.833 256.085 538.545 254.732 538.258 253.381 cv
538.174 252.984 538.08 252.568 537.809 252.268 cv
537.354 251.762 536.527 251.758 535.925 252.072 cv
535.322 252.386 534.891 252.944 534.479 253.484 cv
533.607 254.106 li
cp
.000274662 .466194 .447669 0 cmyk
f
531.04 253.521 mo
530.604 252.647 530.495 251.652 530.396 250.682 cv
530.261 249.346 530.133 247.989 530.362 246.666 cv
530.592 245.344 531.226 244.035 532.333 243.276 cv
533.671 242.359 535.473 242.393 537.009 242.911 cv
538.343 243.362 539.625 244.229 540.149 245.535 cv
540.435 246.245 540.476 247.025 540.513 247.79 cv
540.561 248.782 540.605 249.801 540.302 250.747 cv
539.967 251.795 539.222 252.677 538.344 253.34 cv
537.466 254.004 536.455 254.468 535.438 254.889 cv
534.852 255.132 534.246 255.365 533.612 255.404 cv
532.349 255.483 531.564 254.573 531.04 253.521 cv
cp
.00332647 .360296 .443305 0 cmyk
f
536.49 245.287 mo
537.056 246.562 536.837 248.168 537.725 249.242 cv
538.446 250.116 539.84 250.337 540.797 249.73 cv
541.525 249.268 541.955 248.41 542.003 247.548 cv
542.052 246.686 541.751 245.828 541.272 245.109 cv
540.793 244.391 540.145 243.8 539.454 243.282 cv
538.391 242.483 537.193 241.833 535.894 241.557 cv
535.068 241.382 534.204 241.367 533.379 241.55 cv
532.757 241.688 531.552 242.027 531.386 242.764 cv
531.221 243.49 531.861 243.624 532.378 243.481 cv
533.165 243.263 533.869 243.201 534.653 243.516 cv
535.463 243.84 536.136 244.49 536.49 245.287 cv
cp
.901671 .773953 .191257 .476265 cmyk
ef
539.59 248.961 mo
539.836 248.872 540.094 248.803 540.355 248.813 cv
540.617 248.823 540.885 248.923 541.052 249.124 cv
541.277 249.396 541.279 249.791 541.189 250.132 cv
540.964 250.992 540.206 251.613 539.296 251.433 cv
538.606 251.296 538.34 250.674 538.467 250.012 cv
538.576 249.445 539.086 249.141 539.59 248.961 cv
cp
.00332647 .360296 .443305 0 cmyk
f
540.653 279.286 mo
541.441 280.43 538.766 281.102 538.944 281.801 cv
539.099 282.407 542.89 282.499 543.79 282.73 cv
544.228 282.843 544.736 283.029 544.883 283.56 cv
545.022 284.062 544.747 284.597 544.429 284.946 cv
543.646 285.808 542.555 286.114 541.516 286.057 cv
540.477 285.998 539.47 285.609 538.476 285.225 cv
537.951 285.021 537.417 284.812 536.968 284.416 cv
536.05 283.606 535.847 281.875 536.791 280.956 cv
537.757 280.017 539.514 279.749 540.653 279.286 cv
cp
f
513.967 282.319 mo
514.906 281.759 516.248 281.192 516.857 281.122 cv
516.278 281.695 515.066 283.147 515.399 283.678 cv
515.723 284.192 517.24 282.073 517.847 281.985 cv
519.04 281.813 520.358 282.44 521.479 281.892 cv
522.322 281.479 522.902 280.289 522.218 279.55 cv
519.153 276.239 514.354 279.524 513.967 282.319 cv
cp
f
565.638 340.744 mo
564.74 342.38 563.547 344.226 561.979 344.683 cv
560.892 345.001 558.052 342.988 557.514 342.181 cv
556.975 341.373 561.706 302.432 563.22 300.062 cv
565.251 296.881 579.101 301.273 578.205 306.79 cv
577.06 313.844 574.497 321.348 571.596 328.341 cv
569.854 332.538 567.863 336.688 565.638 340.744 cv
cp
.893431 .762142 .201266 .494148 cmyk
ef
566.714 344.938 mo
567.241 344.49 567.555 343.848 567.852 343.223 cv
571.886 334.743 575.573 326.098 578.901 317.316 cv
579.831 314.865 580.748 312.28 580.397 309.682 cv
580.048 307.083 577.991 304.518 575.369 304.533 cv
573.05 304.547 571.219 306.45 569.826 308.306 cv
566.064 313.316 563.34 319.09 561.789 325.156 cv
560.989 328.282 560.5 331.488 560.342 334.711 cv
560.241 336.767 559.688 339.615 560.258 341.63 cv
560.918 343.961 564.354 346.94 566.714 344.938 cv
cp
ef
560.595 376.894 mo
559.031 377.123 557.435 376.994 555.966 376.52 cv
556.171 374.691 556.377 372.864 556.582 371.036 cv
556.607 370.806 556.638 370.563 556.772 370.368 cv
556.97 370.081 557.336 369.97 557.674 369.911 cv
558.953 369.688 560.884 369.618 560.839 371.204 cv
560.785 373.099 560.675 374.998 560.595 376.894 cv
cp
.000274662 .466194 .447669 0 cmyk
f
558.151 336.262 mo
559.938 333.025 564.655 330.808 567.113 336.421 cv
570.863 344.981 562.115 360.994 561.394 371.332 cv
556.084 371.332 li
555.864 370.331 557.159 338.057 558.151 336.262 cv
cp
.893431 .762142 .201266 .494148 cmyk
ef
591.396 309.543 mo
590.104 310.562 588.396 310.717 586.792 310.717 cv
573.596 310.717 565.959 306.426 567.784 300.363 cv
569.659 294.137 581.469 295.143 587.638 297.148 cv
588.967 297.581 590.904 298 591.813 299.241 cv
593.13 301.041 594.537 307.069 591.396 309.543 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
569.443 266.901 mo
566.897 272.424 563.589 277.816 558.617 281.319 cv
557.546 282.074 556.148 282.749 554.978 282.16 cv
554.293 281.816 553.859 281.092 553.703 280.342 cv
553.547 279.592 553.635 278.813 553.77 278.059 cv
554.83 272.123 558.657 267.112 562.376 262.367 cv
563.908 260.412 566.313 256.837 569.022 256.494 cv
571.844 256.138 571.573 260.431 571.196 262.08 cv
570.814 263.751 570.159 265.349 569.443 266.901 cv
cp
.000274662 .466194 .447669 0 cmyk
f
576.496 254.873 mo
575.74 254.094 570.476 255.501 569.519 255.872 cv
563.716 258.123 559.999 262.99 556.988 268.583 cv
567.139 273.151 li
569.604 268.724 577.213 255.611 576.496 254.873 cv
cp
.0108949 .172457 .784787 0 cmyk
ef
593.451 305.147 mo
592.296 299.717 587.21 298.86 582.97 299.965 cv
582.09 300.194 581.232 300.568 580.438 301.066 cv
578.826 300.871 577.186 301.631 576.075 302.821 cv
574.944 304.034 574.307 305.636 573.968 307.259 cv
573.027 311.758 574.219 316.419 575.733 320.759 cv
576.976 324.318 578.442 327.801 580.121 331.178 cv
581.628 334.211 583.39 338.186 585.228 341.031 cv
585.432 341.347 593.253 340.925 593.539 339.253 cv
594.249 335.108 594.691 330.896 594.868 326.662 cv
595.161 319.606 594.928 312.091 593.451 305.147 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
565.055 296.653 mo
565.188 297.551 565.271 298.607 564.604 299.222 cv
564.042 299.741 563.129 299.706 562.457 299.339 cv
561.785 298.972 552.616 283.912 553.002 279.737 cv
553.196 277.636 554.864 276.767 556.753 276.846 cv
559.381 276.956 564.566 293.387 565.055 296.653 cv
cp
.000274662 .466194 .447669 0 cmyk
f
558.573 300.224 mo
558.171 300.351 557.699 300.438 557.481 300.8 cv
557.251 301.185 557.435 301.686 557.692 302.053 cv
558.419 303.087 559.725 303.666 560.985 303.568 cv
562.245 303.472 563.425 302.725 564.104 301.658 cv
564.802 300.562 564.959 299.093 564.349 297.944 cv
563.815 296.943 562.039 295.706 561.115 296.8 cv
560.737 297.248 560.777 298.254 560.405 298.81 cv
559.967 299.462 559.329 299.985 558.573 300.224 cv
cp
f
595.271 276.332 mo
596.684 271.445 597.865 266.059 597.086 261.338 cv
594.641 258.353 589.64 254.147 579.724 254.147 cv
572.769 254.147 567.562 258.444 566.354 260.229 cv
565.082 262.111 565.451 264.752 565.778 266.979 cv
565.568 271.129 567.941 281.899 564.374 288.064 cv
561.575 292.901 561.254 304.053 562.041 305.597 cv
595.492 308.382 li
595.54 307.77 595.496 299.912 595.49 299.321 cv
595.418 291.658 595.345 283.995 595.271 276.332 cv
cp
.0108949 .172457 .784787 0 cmyk
ef
605.96 270.673 mo
602.815 266.178 598.338 262.629 593.245 260.593 cv
592.328 260.227 591.166 259.949 590.448 260.627 cv
590.057 260.997 589.916 261.574 589.959 262.111 cv
590.002 262.648 590.205 263.157 590.412 263.655 cv
592.822 269.456 596.043 274.88 599.252 280.28 cv
600.237 281.939 601.239 283.619 602.614 284.974 cv
603.988 286.329 605.802 287.345 607.732 287.36 cv
608.742 287.369 610.266 287.031 610.847 286.091 cv
611.313 285.335 610.939 283.988 610.831 283.184 cv
610.446 280.328 609.624 277.532 608.407 274.92 cv
607.717 273.437 606.898 272.014 605.96 270.673 cv
cp
.00332647 .360296 .443305 0 cmyk
f
608.131 271.996 mo
608.185 272.102 li
608.131 271.996 li
cp
.762966 .152529 .372473 .202121 cmyk
ef
589.186 260.848 mo
588.887 259.889 588.658 258.712 589.354 257.988 cv
590.09 257.224 592.054 257.427 593.049 257.79 cv
599.081 259.991 603.601 264.365 606.943 269.843 cv
595.606 274.764 li
592.877 270.428 590.709 265.739 589.186 260.848 cv
cp
.0108949 .172457 .784787 0 cmyk
ef
590.722 300.308 mo
590.678 301.29 591.594 302.111 592.563 302.281 cv
593.53 302.451 608.138 290.366 610.098 287.523 cv
610.694 286.659 611.314 285.619 610.983 284.622 cv
610.687 283.731 609.736 283.245 608.84 282.969 cv
607.333 282.503 605.457 282.229 603.902 282.623 cv
602.831 282.895 602.545 283.896 601.965 284.719 cv
599.836 287.746 590.75 299.679 590.722 300.308 cv
cp
.00332647 .360296 .443305 0 cmyk
f
578.615 247.667 mo
580.573 244.669 584.061 243.967 585.718 244.687 cv
585.09 250.298 585.508 252.791 587.661 255.853 cv
583.16 257.605 576.565 257.279 575.585 255.853 cv
575.675 255.402 577.603 249.217 578.615 247.667 cv
cp
.000274662 .466194 .447669 0 cmyk
f
576.16 239.566 mo
575.586 240.001 575.008 240.535 574.888 241.245 cv
574.796 241.789 574.992 242.336 575.186 242.854 cv
575.437 243.522 575.687 244.191 575.937 244.861 cv
576.495 244.144 576.742 243.241 577.038 242.381 cv
577.333 241.521 577.722 240.639 578.457 240.103 cv
578.912 239.771 579.529 239.524 579.656 238.976 cv
579.839 238.188 579.003 237.822 578.409 238.144 cv
577.628 238.568 576.87 239.029 576.16 239.566 cv
cp
.901671 .773953 .191257 .476265 cmyk
ef
584.934 240.791 mo
583.43 237.853 579.217 237.439 577.077 240.231 cv
575.118 242.787 575.354 249.104 576.271 250.601 cv
577.874 253.219 582.771 251.633 583.725 250.122 cv
585.121 247.909 586.197 243.262 584.934 240.791 cv
cp
.00332647 .360296 .443305 0 cmyk
f
576.963 246.854 mo
577.634 246.392 578.65 246.322 579.199 246.923 cv
579.491 247.243 579.6 247.684 579.743 248.093 cv
579.886 248.501 580.104 248.928 580.501 249.101 cv
581.053 249.341 581.669 248.994 582.169 248.661 cv
582.736 248.283 583.305 247.905 583.873 247.526 cv
584.146 247.345 584.519 247.164 584.775 247.368 cv
585.009 247.553 584.961 247.915 584.872 248.198 cv
584.152 250.485 582.093 252.295 579.731 252.713 cv
578.824 252.874 577.841 252.83 577.05 252.356 cv
576.068 251.77 575.583 250.644 575.426 249.553 cv
575.285 248.576 576.179 247.394 576.963 246.854 cv
cp
.901671 .773953 .191257 .476265 cmyk
ef
583.693 241.388 mo
583.471 241.819 583.276 248.123 583.459 248.089 cv
584.106 247.968 585.224 246.421 586.337 246.721 cv
586.692 246.817 587.14 247.155 587.305 246.437 cv
588.351 241.889 588.481 242.159 587.756 241.57 cv
586.156 240.271 584.089 240.619 583.693 241.388 cv
cp
ef
587.475 246.231 mo
587.39 246.982 586.999 247.695 586.411 248.172 cv
584.73 249.533 583.854 247.031 584.453 245.714 cv
585.169 244.143 587.705 244.187 587.475 246.231 cv
cp
.00332647 .360296 .443305 0 cmyk
f
578.01 240.847 mo
578.028 241.269 578.161 241.759 578.556 241.909 cv
578.968 242.067 583.594 239.712 583.847 239.739 cv
584.101 239.766 583.43 241.389 583.662 241.633 cv
583.861 241.842 584.198 241.796 584.483 241.748 cv
585.736 241.539 586.984 241.871 588.209 242.209 cv
588.369 241.866 588.407 241.195 588.293 240.835 cv
588.179 240.474 587.971 240.15 587.75 239.844 cv
586.77 238.485 585.391 237.326 583.746 237.008 cv
582.766 236.818 581.748 236.878 580.766 237.053 cv
576.98 237.725 577.98 240.204 578.01 240.847 cv
cp
.901671 .773953 .191257 .476265 cmyk
ef
545.873 379.579 mo
545.806 378.819 546.526 378.19 547.268 378.014 cv
548.01 377.836 548.785 377.971 549.548 377.962 cv
551.723 377.937 553.836 376.633 554.833 374.699 cv
554.971 374.434 555.104 374.141 555.364 373.994 cv
555.712 373.799 556.161 373.944 556.47 374.197 cv
556.777 374.449 556.994 374.794 557.275 375.076 cv
557.779 375.582 558.499 375.861 559.211 375.852 cv
559.808 375.843 560.476 375.387 561.049 375.688 cv
561.555 375.953 561.691 376.654 561.819 377.153 cv
562.04 378.015 562.24 378.881 562.451 379.744 cv
562.498 379.936 562.543 380.135 562.558 380.332 cv
558.413 380.332 li
558.221 380.061 558.063 379.27 557.98 378.944 cv
557.967 379.279 557.834 380.074 557.621 380.332 cv
546.23 380.332 li
546.035 380.121 545.898 379.864 545.873 379.579 cv
cp
.0108949 .172457 .784787 0 cmyk
ef
609.219 374.667 mo
607.869 375.467 606.336 375.954 604.772 376.08 cv
604.179 374.349 603.584 372.617 602.989 370.886 cv
602.914 370.667 602.838 370.437 602.878 370.209 cv
602.938 369.874 603.229 369.635 603.517 369.454 cv
604.605 368.768 606.362 367.975 607.002 369.426 cv
607.766 371.161 608.479 372.922 609.219 374.667 cv
cp
.000274662 .466194 .447669 0 cmyk
f
585.124 340.62 mo
585.063 337.156 588.687 332.918 593.506 337.366 cv
601.265 344.53 604.147 358.797 607.563 369.335 cv
602.649 371.344 li
601.915 370.563 585.159 342.545 585.124 340.62 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
604.017 379.694 mo
603.701 379.003 603.756 378.3 603.991 378.013 cv
604.227 377.727 604.216 376.354 604.136 374.374 cv
604.099 373.469 605.602 372.597 606.952 373.63 cv
607.391 373.966 607.747 374.153 608.032 374.025 cv
608.272 373.918 608.371 373.385 608.719 373.568 cv
609.025 373.73 609.346 374.356 609.587 374.798 cv
610.002 375.558 610.411 376.326 610.824 377.09 cv
610.915 377.26 611.009 377.437 611.09 377.617 cv
604.446 380.332 li
604.287 380.169 604.135 379.954 604.017 379.694 cv
cp
.0108949 .172457 .784787 0 cmyk
ef
587.62 298.429 mo
587.076 299.077 588.918 299.517 589.566 300.061 cv
587.828 300.153 586.09 300.246 584.352 300.339 cv
584.046 300.354 583.712 300.383 583.489 300.593 cv
583.228 300.84 583.217 301.271 583.377 301.595 cv
583.537 301.917 583.83 302.15 584.128 302.354 cv
585.793 303.484 587.89 303.961 589.88 303.66 cv
590.653 303.543 591.429 303.302 592.035 302.809 cv
592.642 302.314 593.051 301.532 592.947 300.757 cv
592.787 299.563 591.885 299.542 590.983 299.311 cv
590.408 299.163 587.806 298.208 587.62 298.429 cv
cp
.00332647 .360296 .443305 0 cmyk
f
201.81 59.9712 mo
193.05 56.7358 183.328 58.0815 174.152 59.8193 cv
163.965 61.749 152.838 63.9849 143.7 59.0874 cv
136.484 55.2202 132.13 47.7056 126.442 41.8184 cv
120.754 35.9312 111.573 31.4888 104.572 35.7319 cv
96.5249 40.6084 96.7222 53.6626 88.5908 58.3984 cv
83.022 61.6421 75.8647 59.5137 70.2695 56.3164 cv
62.0493 51.6191 54.2637 45.0625 44.2505 48.4375 cv
35.6602 51.333 31.0396 59.2534 30.5737 67.9336 cv
30.541 68.5435 30.5342 69.1289 30.5391 69.7026 cv
213.469 69.7026 li
210.916 65.333 206.599 61.7397 201.81 59.9712 cv
cp
.0674754 .099031 0 0 cmyk
f
170.887 37.4282 mo
177.889 27.7173 182.869 21 201.385 21 cv
212.376 21 230.015 34.7935 240.932 33.5166 cv
248.643 32.6143 256.031 26.5112 263.373 29.0337 cv
266.944 30.2603 269.218 33.73 269.774 37.4282 cv
170.887 37.4282 li
cp
f
527.374 71.1245 mo
519.915 68.3696 511.636 69.5151 503.823 70.9951 cv
495.149 72.6382 485.674 74.542 477.893 70.3716 cv
471.749 67.0786 468.041 60.6802 463.198 55.667 cv
458.354 50.6543 450.537 46.8716 444.575 50.4844 cv
437.723 54.6372 437.891 65.7529 430.968 69.7852 cv
426.226 72.5474 420.131 70.7349 415.366 68.0122 cv
408.367 64.0122 401.737 58.4292 393.211 61.3032 cv
385.896 63.769 381.962 70.5127 381.565 77.9043 cv
381.537 78.4238 381.531 78.9219 381.536 79.4106 cv
537.302 79.4106 li
535.128 75.6899 531.451 72.6304 527.374 71.1245 cv
cp
f
348.62 47.1743 mo
354.582 38.9053 358.823 33.1855 374.59 33.1855 cv
383.948 33.1855 398.968 44.9307 408.264 43.8433 cv
414.829 43.0752 421.121 37.8784 427.373 40.0264 cv
430.413 41.0708 432.35 44.0249 432.823 47.1743 cv
348.62 47.1743 li
cp
f
637.559 19.7046 mo
630.312 16.7319 623.064 13.7593 615.817 10.7866 cv
609.748 8.29688 602.159 6.01074 597.177 10.2778 cv
594.081 12.9292 592.058 17.9761 587.997 17.6245 cv
582.276 17.1284 578.456 4.20801 571.966 12.7793 cv
569.737 15.7231 570.474 19.0703 572.338 21.8623 cv
641.351 21.8623 li
640.313 20.9131 638.885 20.2485 637.559 19.7046 cv
cp
f
609.625 255.793 mo
609.513 255.793 609.398 255.759 609.3 255.688 cv
609.048 255.509 608.988 255.158 609.169 254.905 cv
609.602 254.298 610.023 253.68 610.423 253.068 cv
610.593 252.81 610.941 252.736 611.2 252.906 cv
611.46 253.076 611.532 253.424 611.362 253.684 cv
610.955 254.307 610.524 254.938 610.083 255.557 cv
609.974 255.71 609.801 255.793 609.625 255.793 cv
cp
.658137 .198489 0 0 cmyk
f
565.778 138.627 mo
565.477 138.627 565.228 138.388 565.218 138.084 cv
565.208 137.774 565.45 137.515 565.761 137.504 cv
566.729 137.473 567.707 137.459 568.717 137.458 cv
569.219 137.458 569.725 137.462 570.235 137.471 cv
570.546 137.476 570.792 137.731 570.787 138.042 cv
570.782 138.349 570.532 138.593 570.226 138.593 cv
570.217 138.593 li
569.697 138.584 569.177 138.581 568.671 138.581 cv
567.704 138.581 566.737 138.596 565.797 138.627 cv
565.778 138.627 li
cp
576.891 138.875 mo
576.851 138.874 li
575.409 138.773 573.923 138.698 572.431 138.648 cv
572.121 138.638 571.878 138.378 571.889 138.068 cv
571.898 137.758 572.159 137.514 572.468 137.526 cv
573.973 137.576 575.474 137.653 576.929 137.753 cv
577.237 137.774 577.472 138.042 577.45 138.352 cv
577.429 138.648 577.183 138.875 576.891 138.875 cv
cp
559.13 139.135 mo
558.851 139.135 558.608 138.927 558.573 138.643 cv
558.535 138.334 558.754 138.055 559.062 138.017 cv
560.497 137.838 561.999 137.701 563.523 137.609 cv
563.826 137.593 564.1 137.826 564.118 138.135 cv
564.137 138.445 563.901 138.711 563.592 138.729 cv
562.09 138.821 560.612 138.956 559.2 139.13 cv
559.13 139.135 li
cp
583.526 139.53 mo
583.453 139.525 li
582.02 139.339 580.541 139.178 579.058 139.047 cv
578.748 139.02 578.521 138.747 578.548 138.438 cv
578.575 138.13 578.839 137.905 579.156 137.929 cv
580.655 138.061 582.149 138.224 583.598 138.412 cv
583.905 138.452 584.122 138.733 584.082 139.041 cv
584.045 139.324 583.804 139.53 583.526 139.53 cv
cp
552.57 140.318 mo
552.317 140.318 552.088 140.146 552.025 139.889 cv
551.952 139.588 552.137 139.284 552.438 139.211 cv
553.848 138.868 555.329 138.571 556.841 138.33 cv
557.149 138.281 557.435 138.49 557.483 138.796 cv
557.532 139.103 557.324 139.39 557.019 139.439 cv
555.535 139.676 554.084 139.966 552.704 140.302 cv
552.57 140.318 li
cp
590.104 140.61 mo
589.993 140.6 li
588.579 140.315 587.115 140.058 585.643 139.833 cv
585.336 139.787 585.125 139.5 585.172 139.194 cv
585.218 138.888 585.505 138.677 585.812 138.724 cv
587.302 138.95 588.783 139.211 590.215 139.499 cv
590.519 139.56 590.716 139.855 590.654 140.16 cv
590.601 140.426 590.366 140.61 590.104 140.61 cv
cp
596.583 142.177 mo
596.429 142.155 li
595.042 141.759 593.604 141.392 592.153 141.062 cv
591.851 140.993 591.661 140.692 591.729 140.39 cv
591.798 140.087 592.101 139.896 592.402 139.967 cv
593.872 140.301 595.331 140.674 596.737 141.075 cv
597.035 141.16 597.208 141.471 597.123 141.769 cv
597.053 142.016 596.827 142.177 596.583 142.177 cv
cp
546.227 142.35 mo
546.006 142.35 545.796 142.218 545.707 142 cv
545.59 141.713 545.728 141.386 546.015 141.269 cv
547.361 140.719 548.792 140.222 550.267 139.792 cv
550.564 139.704 550.875 139.875 550.963 140.173 cv
551.049 140.471 550.879 140.782 550.581 140.869 cv
549.144 141.289 547.75 141.773 546.438 142.308 cv
546.227 142.35 li
cp
602.903 144.291 mo
602.7 144.253 li
601.36 143.733 599.961 143.241 598.541 142.791 cv
598.246 142.697 598.082 142.381 598.177 142.085 cv
598.27 141.791 598.584 141.626 598.881 141.72 cv
600.322 142.178 601.744 142.678 603.106 143.206 cv
603.396 143.318 603.539 143.643 603.427 143.933 cv
603.341 144.155 603.128 144.291 602.903 144.291 cv
cp
540.313 145.405 mo
540.128 145.405 539.947 145.314 539.84 145.147 cv
539.673 144.887 539.748 144.539 540.009 144.371 cv
541.247 143.574 542.573 142.836 543.952 142.179 cv
544.232 142.045 544.568 142.165 544.701 142.444 cv
544.835 142.724 544.716 143.059 544.436 143.192 cv
543.1 143.83 541.814 144.544 540.616 145.315 cv
540.522 145.376 540.417 145.405 540.313 145.405 cv
cp
608.982 147.02 mo
608.727 146.957 li
607.445 146.297 606.105 145.667 604.742 145.084 cv
604.457 144.962 604.324 144.633 604.445 144.348 cv
604.568 144.062 604.899 143.93 605.183 144.052 cv
606.571 144.645 607.937 145.287 609.24 145.959 cv
609.516 146.101 609.624 146.44 609.482 146.715 cv
609.382 146.909 609.186 147.02 608.982 147.02 cv
cp
535.13 149.573 mo
534.986 149.573 534.842 149.518 534.732 149.408 cv
534.514 149.189 534.514 148.833 534.732 148.614 cv
535.788 147.559 536.938 146.564 538.151 145.659 cv
538.398 145.473 538.752 145.524 538.938 145.773 cv
539.123 146.021 539.071 146.374 538.822 146.559 cv
537.652 147.432 536.544 148.391 535.526 149.408 cv
535.417 149.518 535.273 149.573 535.13 149.573 cv
cp
614.713 150.42 mo
614.604 150.42 614.494 150.388 614.397 150.323 cv
613.206 149.512 611.95 148.732 610.662 148.003 cv
610.393 147.851 610.298 147.508 610.45 147.238 cv
610.603 146.968 610.945 146.873 611.215 147.026 cv
612.53 147.77 613.813 148.567 615.029 149.395 cv
615.285 149.569 615.352 149.918 615.177 150.174 cv
615.068 150.334 614.893 150.42 614.713 150.42 cv
cp
619.956 154.529 mo
619.822 154.529 619.688 154.482 619.58 154.385 cv
618.51 153.418 617.367 152.481 616.186 151.599 cv
615.938 151.414 615.887 151.062 616.072 150.813 cv
616.258 150.565 616.609 150.514 616.858 150.699 cv
618.066 151.602 619.235 152.562 620.332 153.551 cv
620.563 153.759 620.581 154.114 620.373 154.344 cv
620.262 154.467 620.109 154.529 619.956 154.529 cv
cp
530.972 154.76 mo
530.868 154.76 530.764 154.731 530.67 154.672 cv
530.408 154.505 530.332 154.158 530.499 153.896 cv
531.314 152.619 532.221 151.399 533.195 150.27 cv
533.397 150.034 533.752 150.008 533.987 150.211 cv
534.223 150.414 534.248 150.768 534.046 151.003 cv
533.106 152.092 532.231 153.269 531.445 154.5 cv
531.338 154.668 531.157 154.76 530.972 154.76 cv
cp
624.559 159.347 mo
624.396 159.347 624.234 159.276 624.124 159.141 cv
623.209 158.024 622.217 156.932 621.174 155.895 cv
620.954 155.676 620.953 155.32 621.172 155.101 cv
621.391 154.881 621.746 154.88 621.966 155.099 cv
623.035 156.163 624.054 157.283 624.992 158.429 cv
625.188 158.669 625.153 159.023 624.914 159.219 cv
624.81 159.305 624.684 159.347 624.559 159.347 cv
cp
527.968 160.698 mo
527.763 160.659 li
527.474 160.546 527.332 160.22 527.445 159.931 cv
528.006 158.507 528.646 157.131 529.35 155.841 cv
529.498 155.569 529.839 155.469 530.111 155.618 cv
530.384 155.767 530.484 156.107 530.336 156.38 cv
529.654 157.628 529.033 158.961 528.49 160.342 cv
528.404 160.563 528.191 160.698 527.968 160.698 cv
cp
628.356 164.819 mo
628.163 164.819 627.975 164.719 627.87 164.54 cv
627.144 163.287 626.335 162.053 625.468 160.873 cv
625.284 160.624 625.338 160.272 625.588 160.088 cv
625.838 159.904 626.188 159.958 626.373 160.208 cv
627.265 161.421 628.095 162.688 628.842 163.977 cv
628.997 164.245 628.905 164.588 628.638 164.744 cv
628.549 164.795 628.452 164.819 628.356 164.819 cv
cp
526.051 167.076 mo
525.93 167.063 li
525.627 166.996 525.435 166.697 525.502 166.394 cv
525.831 164.896 526.229 163.435 526.683 162.052 cv
526.779 161.758 527.096 161.598 527.391 161.694 cv
527.686 161.791 527.846 162.107 527.749 162.402 cv
527.307 163.75 526.92 165.174 526.599 166.635 cv
526.541 166.897 526.309 167.076 526.051 167.076 cv
cp
631.203 170.843 mo
630.976 170.843 630.762 170.704 630.677 170.478 cv
630.172 169.121 629.579 167.771 628.917 166.466 cv
628.776 166.189 628.887 165.851 629.163 165.711 cv
629.439 165.57 629.777 165.681 629.918 165.957 cv
630.6 167.3 631.21 168.689 631.729 170.086 cv
631.838 170.376 631.689 170.7 631.399 170.808 cv
631.203 170.843 li
cp
525.041 173.663 mo
524.989 173.66 li
524.68 173.631 524.453 173.358 524.481 173.049 cv
524.624 171.527 524.821 170.03 525.068 168.599 cv
525.121 168.294 525.414 168.091 525.718 168.142 cv
526.023 168.195 526.229 168.485 526.175 168.791 cv
525.933 170.192 525.739 171.66 525.6 173.153 cv
525.572 173.444 525.328 173.663 525.041 173.663 cv
cp
632.974 177.267 mo
632.707 177.267 632.471 177.077 632.421 176.806 cv
632.163 175.385 631.813 173.953 631.382 172.552 cv
631.291 172.256 631.457 171.942 631.753 171.851 cv
632.051 171.757 632.363 171.926 632.455 172.222 cv
632.899 173.665 633.26 175.14 633.526 176.605 cv
633.582 176.91 633.379 177.203 633.074 177.258 cv
632.974 177.267 li
cp
524.755 180.324 mo
524.446 180.324 524.196 180.075 524.193 179.767 cv
524.193 179.514 li
524.192 178.072 524.232 176.65 524.313 175.285 cv
524.331 174.976 524.59 174.744 524.906 174.757 cv
525.215 174.776 525.451 175.041 525.434 175.351 cv
525.355 176.693 525.315 178.094 525.316 179.514 cv
525.316 179.759 li
525.318 180.069 525.068 180.322 524.759 180.324 cv
524.755 180.324 li
cp
633.548 183.905 mo
633.542 183.905 li
633.232 183.902 632.983 183.648 632.986 183.338 cv
632.988 182.989 li
632.988 181.667 632.907 180.315 632.747 178.971 cv
632.711 178.663 632.931 178.384 633.238 178.347 cv
633.548 178.313 633.826 178.53 633.862 178.838 cv
634.027 180.226 634.111 181.624 634.111 182.991 cv
634.109 183.349 li
634.106 183.657 633.855 183.905 633.548 183.905 cv
cp
525.037 186.989 mo
524.747 186.989 524.501 186.766 524.478 186.472 cv
524.358 184.953 524.275 183.449 524.231 182.003 cv
524.222 181.694 524.466 181.435 524.775 181.425 cv
525.068 181.416 525.345 181.659 525.354 181.97 cv
525.397 183.397 525.479 184.882 525.598 186.383 cv
525.621 186.692 525.391 186.963 525.081 186.987 cv
525.037 186.989 li
cp
632.765 190.518 mo
632.637 190.503 li
632.335 190.433 632.147 190.131 632.218 189.829 cv
632.313 189.423 632.398 189.017 632.477 188.608 cv
632.666 187.61 632.805 186.571 632.889 185.521 cv
632.913 185.212 633.174 184.977 633.493 185.006 cv
633.802 185.03 634.032 185.301 634.008 185.61 cv
633.921 186.7 633.776 187.78 633.58 188.818 cv
633.498 189.242 633.409 189.664 633.311 190.084 cv
633.251 190.343 633.02 190.518 632.765 190.518 cv
cp
525.771 193.62 mo
525.495 193.62 525.255 193.417 525.216 193.136 cv
525.005 191.628 524.824 190.135 524.679 188.699 cv
524.647 188.39 524.873 188.115 525.182 188.084 cv
525.496 188.053 525.765 188.278 525.796 188.586 cv
525.94 190.008 526.119 191.486 526.328 192.98 cv
526.371 193.288 526.156 193.571 525.85 193.614 cv
525.771 193.62 li
cp
612.392 196.132 mo
612.128 196.065 li
610.97 195.447 609.563 195.144 608.116 195.195 cv
607.813 195.216 607.546 194.966 607.534 194.656 cv
607.522 194.346 607.764 194.085 608.073 194.074 cv
609.717 194.008 611.324 194.363 612.657 195.075 cv
612.931 195.222 613.034 195.562 612.888 195.835 cv
612.786 196.024 612.593 196.132 612.392 196.132 cv
cp
630.511 196.783 mo
630.26 196.724 li
629.982 196.584 629.87 196.247 630.009 195.97 cv
630.65 194.69 631.199 193.331 631.641 191.932 cv
631.734 191.636 632.052 191.473 632.345 191.565 cv
632.641 191.659 632.805 191.974 632.712 192.27 cv
632.252 193.726 631.681 195.14 631.014 196.473 cv
630.915 196.669 630.717 196.783 630.511 196.783 cv
cp
602.169 197.832 mo
602.043 197.832 601.915 197.789 601.811 197.702 cv
601.571 197.504 601.539 197.15 601.737 196.912 cv
602.698 195.757 604.086 194.901 605.751 194.435 cv
606.047 194.351 606.358 194.524 606.442 194.824 cv
606.526 195.122 606.353 195.432 606.054 195.516 cv
604.629 195.915 603.403 196.666 602.601 197.63 cv
602.49 197.763 602.33 197.832 602.169 197.832 cv
cp
526.867 200.201 mo
526.603 200.201 526.368 200.014 526.316 199.745 cv
526.033 198.264 525.773 196.784 525.546 195.346 cv
525.498 195.04 525.706 194.752 526.013 194.704 cv
526.316 194.652 526.606 194.864 526.655 195.17 cv
526.882 196.597 527.138 198.065 527.419 199.534 cv
527.478 199.838 527.277 200.133 526.973 200.191 cv
526.867 200.201 li
cp
616.997 200.843 mo
616.804 200.843 616.615 200.743 616.511 200.563 cv
615.749 199.247 614.852 198.138 613.844 197.266 cv
613.609 197.063 613.584 196.709 613.786 196.475 cv
613.989 196.24 614.344 196.214 614.578 196.417 cv
615.681 197.371 616.657 198.576 617.482 200 cv
617.638 200.269 617.547 200.612 617.278 200.768 cv
617.189 200.819 617.093 200.843 616.997 200.843 cv
cp
626.782 202.292 mo
626.647 202.292 626.514 202.244 626.406 202.147 cv
626.177 201.94 626.157 201.585 626.365 201.354 cv
627.314 200.3 628.186 199.129 628.954 197.873 cv
629.115 197.608 629.462 197.523 629.726 197.687 cv
629.99 197.849 630.074 198.194 629.912 198.458 cv
629.107 199.773 628.195 201.001 627.199 202.105 cv
627.089 202.229 626.936 202.292 626.782 202.292 cv
cp
601.642 204.084 mo
601.441 204.084 601.247 203.977 601.146 203.787 cv
600.625 202.812 600.361 201.784 600.361 200.732 cv
600.361 200.532 600.371 200.329 600.391 200.123 cv
600.425 199.763 600.492 199.406 600.591 199.063 cv
600.676 198.764 600.99 198.593 601.285 198.678 cv
601.583 198.764 601.756 199.075 601.67 199.372 cv
601.59 199.649 601.536 199.938 601.508 200.229 cv
601.491 200.399 601.484 200.567 601.484 200.732 cv
601.484 201.598 601.703 202.447 602.137 203.258 cv
602.283 203.532 602.179 203.872 601.905 204.018 cv
601.642 204.084 li
cp
621.634 206.492 mo
621.439 206.492 621.251 206.392 621.147 206.212 cv
620.991 205.944 621.083 205.601 621.352 205.444 cv
622.561 204.743 623.697 203.916 624.732 202.986 cv
624.831 202.897 li
625.057 202.686 625.412 202.697 625.624 202.923 cv
625.837 203.148 625.825 203.504 625.599 203.716 cv
625.481 203.822 li
624.392 204.803 623.19 205.675 621.915 206.416 cv
621.826 206.468 621.729 206.492 621.634 206.492 cv
cp
606.67 208.273 mo
606.458 208.232 li
604.946 207.618 603.601 206.74 602.568 205.692 cv
602.351 205.471 602.353 205.116 602.573 204.898 cv
602.794 204.681 603.149 204.684 603.367 204.903 cv
604.294 205.844 605.51 206.635 606.881 207.192 cv
607.168 207.309 607.307 207.637 607.189 207.924 cv
607.101 208.142 606.891 208.273 606.67 208.273 cv
cp
615.425 208.855 mo
615.162 208.855 614.928 208.671 614.875 208.403 cv
614.814 208.1 615.012 207.804 615.316 207.744 cv
616.51 207.507 617.694 207.148 618.846 206.679 cv
618.832 206.629 li
618.456 205.104 618 203.712 617.476 202.493 cv
617.354 202.208 617.484 201.878 617.77 201.755 cv
618.052 201.635 618.385 201.764 618.507 202.049 cv
619.056 203.324 619.532 204.774 619.922 206.36 cv
619.938 206.459 li
620.035 206.517 620.117 206.604 620.166 206.715 cv
620.293 206.999 620.166 207.33 619.882 207.456 cv
618.474 208.085 617.011 208.552 615.534 208.845 cv
615.425 208.855 li
cp
611.876 209.209 mo
611.037 209.209 610.196 209.149 609.376 209.031 cv
609.145 208.998 608.913 208.958 608.681 208.91 cv
608.378 208.848 608.182 208.55 608.245 208.246 cv
608.308 207.943 608.6 207.748 608.908 207.811 cv
609.118 207.854 609.328 207.89 609.537 207.92 cv
610.722 208.091 611.942 208.13 613.182 208.036 cv
613.48 208.012 613.76 208.244 613.783 208.554 cv
613.807 208.863 613.575 209.133 613.266 209.156 cv
612.801 209.191 612.333 209.209 611.876 209.209 cv
cp
620.501 213.629 mo
620.219 213.629 619.976 213.417 619.943 213.13 cv
619.782 211.67 619.563 210.204 619.293 208.773 cv
619.235 208.469 619.436 208.175 619.74 208.118 cv
620.045 208.061 620.339 208.26 620.396 208.565 cv
620.672 210.024 620.895 211.518 621.06 213.006 cv
621.094 213.313 620.872 213.591 620.563 213.626 cv
620.501 213.629 li
cp
620.866 220.273 mo
620.556 220.273 620.305 220.036 620.305 219.727 cv
620.305 219.697 li
620.305 218.237 620.251 216.766 620.146 215.323 cv
620.123 215.015 620.355 214.745 620.665 214.723 cv
620.983 214.701 621.243 214.933 621.266 215.241 cv
621.373 216.711 621.428 218.211 621.428 219.697 cv
621.428 220.008 621.177 220.273 620.866 220.273 cv
cp
620.501 226.947 mo
620.439 226.943 li
620.132 226.909 619.909 226.633 619.942 226.324 cv
620.102 224.868 620.21 223.39 620.264 221.929 cv
620.274 221.626 620.523 221.388 620.823 221.388 cv
620.845 221.389 li
621.154 221.399 621.396 221.66 621.385 221.97 cv
621.331 223.458 621.221 224.964 621.059 226.446 cv
621.027 226.734 620.784 226.947 620.501 226.947 cv
cp
619.424 233.529 mo
619.304 233.516 li
619 233.449 618.809 233.15 618.875 232.848 cv
619.188 231.418 619.454 229.959 619.665 228.511 cv
619.71 228.205 619.993 227.987 620.302 228.037 cv
620.608 228.081 620.821 228.366 620.776 228.674 cv
620.561 230.147 620.291 231.633 619.972 233.088 cv
619.914 233.351 619.682 233.529 619.424 233.529 cv
cp
617.648 239.957 mo
617.471 239.929 li
617.177 239.83 617.018 239.512 617.116 239.218 cv
617.579 237.833 617.999 236.411 618.364 234.99 cv
618.441 234.69 618.748 234.511 619.048 234.587 cv
619.349 234.664 619.529 234.97 619.452 235.271 cv
619.08 236.716 618.652 238.164 618.181 239.574 cv
618.103 239.809 617.883 239.957 617.648 239.957 cv
cp
615.194 246.159 mo
614.96 246.107 li
614.678 245.979 614.555 245.646 614.685 245.363 cv
615.296 244.033 615.866 242.665 616.379 241.296 cv
616.488 241.005 616.813 240.859 617.102 240.967 cv
617.393 241.076 617.539 241.399 617.431 241.689 cv
616.908 243.084 616.328 244.478 615.704 245.833 cv
615.61 246.038 615.406 246.159 615.194 246.159 cv
cp
612.076 252.055 mo
611.978 252.055 611.878 252.028 611.787 251.974 cv
611.521 251.813 611.436 251.469 611.596 251.203 cv
612.347 249.956 613.064 248.659 613.727 247.348 cv
613.866 247.071 614.204 246.96 614.48 247.1 cv
614.758 247.239 614.868 247.577 614.729 247.854 cv
614.054 249.19 613.323 250.512 612.558 251.782 cv
612.452 251.957 612.267 252.055 612.076 252.055 cv
cp
f
527.808 204.743 mo
527.55 204.743 527.317 204.565 527.26 204.304 cv
527.095 203.563 526.938 202.828 526.786 202.101 cv
526.724 201.797 526.919 201.499 527.223 201.437 cv
527.522 201.374 527.823 201.569 527.887 201.872 cv
528.036 202.596 528.192 203.324 528.356 204.061 cv
528.423 204.363 528.232 204.663 527.93 204.73 cv
527.808 204.743 li
cp
f
141.202 125.111 mo
140.951 125.264 140.621 125.198 140.45 124.955 cv
140.271 124.701 140.332 124.351 140.586 124.172 cv
141.796 123.321 143.067 122.484 144.362 121.683 cv
144.364 121.682 li
144.627 121.52 144.972 121.602 145.135 121.865 cv
145.298 122.128 145.217 122.475 144.953 122.638 cv
143.676 123.427 142.424 124.253 141.232 125.091 cv
141.202 125.111 li
cp
150.818 119.327 mo
150.781 119.347 li
149.442 120.038 148.125 120.758 146.866 121.49 cv
146.598 121.646 146.254 121.556 146.099 121.288 cv
145.942 121.02 146.027 120.666 146.302 120.52 cv
147.577 119.778 148.911 119.048 150.267 118.349 cv
150.542 118.207 150.881 118.315 151.023 118.591 cv
151.159 118.854 151.066 119.174 150.818 119.327 cv
cp
135.887 129.246 mo
135.656 129.387 135.351 129.345 135.168 129.133 cv
134.966 128.899 134.992 128.544 135.227 128.341 cv
136.344 127.377 137.531 126.422 138.755 125.502 cv
139.001 125.317 139.354 125.366 139.541 125.614 cv
139.728 125.862 139.677 126.214 139.429 126.4 cv
138.226 127.305 137.059 128.244 135.96 129.191 cv
135.887 129.246 li
cp
156.914 116.458 mo
156.841 116.495 li
155.464 117.087 154.096 117.711 152.778 118.35 cv
152.499 118.485 152.163 118.369 152.028 118.09 cv
151.893 117.811 152.01 117.474 152.289 117.34 cv
153.622 116.693 155.005 116.062 156.398 115.463 cv
156.684 115.341 157.013 115.473 157.136 115.758 cv
157.247 116.018 157.147 116.314 156.914 116.458 cv
cp
163.187 113.997 mo
163.082 114.047 li
161.669 114.551 160.263 115.086 158.904 115.635 cv
158.617 115.751 158.289 115.613 158.173 115.325 cv
158.057 115.038 158.195 114.713 158.483 114.594 cv
159.857 114.039 161.277 113.499 162.705 112.99 cv
162.997 112.885 163.318 113.038 163.422 113.33 cv
163.513 113.584 163.408 113.861 163.187 113.997 cv
cp
131.046 133.925 mo
130.837 134.053 130.562 134.033 130.373 133.859 cv
130.145 133.65 130.129 133.294 130.339 133.066 cv
131.34 131.978 132.416 130.896 133.539 129.853 cv
133.767 129.642 134.121 129.655 134.332 129.882 cv
134.543 130.109 134.53 130.464 134.303 130.676 cv
133.202 131.699 132.146 132.759 131.166 133.826 cv
131.046 133.925 li
cp
169.585 111.924 mo
169.449 111.984 li
168.018 112.403 166.584 112.853 165.188 113.32 cv
164.893 113.418 164.575 113.259 164.477 112.965 cv
164.379 112.671 164.539 112.354 164.831 112.254 cv
166.241 111.783 167.689 111.329 169.134 110.907 cv
169.432 110.819 169.744 110.99 169.831 111.288 cv
169.903 111.537 169.796 111.795 169.585 111.924 cv
cp
126.827 139.169 mo
126.643 139.282 126.401 139.283 126.212 139.151 cv
125.958 138.974 125.896 138.624 126.073 138.369 cv
126.922 137.151 127.853 135.94 128.839 134.769 cv
129.042 134.532 129.394 134.502 129.631 134.702 cv
129.868 134.901 129.898 135.256 129.699 135.493 cv
128.733 136.638 127.823 137.822 126.994 139.011 cv
126.827 139.169 li
cp
176.097 110.212 mo
175.931 110.28 li
174.481 110.62 173.023 110.988 171.598 111.377 cv
171.298 111.458 170.99 111.282 170.908 110.983 cv
170.827 110.684 171.003 110.374 171.302 110.293 cv
172.741 109.901 174.212 109.529 175.675 109.187 cv
175.977 109.116 176.279 109.304 176.35 109.606 cv
176.406 109.848 176.297 110.09 176.097 110.212 cv
cp
123.403 144.956 mo
123.245 145.053 123.042 145.07 122.862 144.981 cv
122.584 144.845 122.469 144.508 122.606 144.23 cv
123.265 142.89 124.01 141.555 124.82 140.262 cv
124.985 139.999 125.331 139.92 125.594 140.085 cv
125.856 140.25 125.936 140.596 125.771 140.859 cv
124.981 142.118 124.255 143.419 123.613 144.726 cv
123.565 144.824 123.491 144.902 123.403 144.956 cv
cp
182.697 108.853 mo
182.503 108.927 li
181.039 109.188 179.562 109.479 178.113 109.791 cv
177.81 109.856 177.511 109.663 177.446 109.36 cv
177.381 109.057 177.573 108.759 177.877 108.693 cv
179.338 108.378 180.828 108.085 182.305 107.821 cv
182.61 107.767 182.902 107.97 182.957 108.275 cv
182.999 108.509 182.889 108.736 182.697 108.853 cv
cp
189.367 107.841 mo
189.144 107.918 li
187.668 108.103 186.177 108.316 184.711 108.552 cv
184.405 108.601 184.117 108.393 184.068 108.087 cv
184.019 107.781 184.227 107.492 184.533 107.443 cv
186.012 107.206 187.516 106.991 189.004 106.804 cv
189.312 106.766 189.593 106.984 189.631 107.292 cv
189.659 107.518 189.549 107.729 189.367 107.841 cv
cp
120.939 151.216 mo
120.808 151.297 120.644 151.323 120.484 151.275 cv
120.188 151.187 120.019 150.874 120.108 150.576 cv
120.541 149.136 121.062 147.697 121.658 146.298 cv
121.779 146.013 122.109 145.88 122.394 146.001 cv
122.679 146.123 122.812 146.453 122.69 146.738 cv
122.111 148.099 121.604 149.499 121.184 150.899 cv
121.142 151.037 121.053 151.147 120.939 151.216 cv
cp
196.081 107.18 mo
196.007 107.225 195.921 107.254 195.829 107.261 cv
194.349 107.367 192.85 107.501 191.373 107.66 cv
191.064 107.693 190.788 107.47 190.755 107.161 cv
190.722 106.853 190.944 106.576 191.253 106.543 cv
192.743 106.383 194.255 106.248 195.748 106.141 cv
196.058 106.119 196.326 106.351 196.348 106.661 cv
196.364 106.877 196.254 107.074 196.081 107.18 cv
cp
119.554 157.802 mo
119.45 157.866 119.323 157.896 119.192 157.88 cv
118.884 157.842 118.666 157.562 118.704 157.253 cv
118.891 155.75 119.163 154.244 119.515 152.777 cv
119.587 152.475 119.891 152.29 120.191 152.362 cv
120.493 152.434 120.679 152.737 120.606 153.038 cv
120.265 154.464 120 155.929 119.818 157.392 cv
119.796 157.568 119.695 157.716 119.554 157.802 cv
cp
202.813 106.882 mo
202.731 106.933 202.634 106.962 202.53 106.964 cv
201.055 106.989 199.551 107.042 198.06 107.121 cv
197.75 107.138 197.486 106.9 197.47 106.591 cv
197.453 106.281 197.69 106.017 198 106 cv
199.505 105.919 201.022 105.866 202.511 105.841 cv
202.821 105.836 203.077 106.083 203.082 106.394 cv
203.085 106.599 202.978 106.781 202.813 106.882 cv
cp
110.921 166.756 mo
110.697 166.894 110.399 166.857 110.214 166.656 cv
110.005 166.427 110.021 166.072 110.25 165.863 cv
111.369 164.839 112.65 163.937 114.029 163.204 cv
114.302 163.058 114.642 163.162 114.788 163.436 cv
114.934 163.709 114.835 164.049 114.556 164.195 cv
113.264 164.884 112.058 165.73 111.008 166.691 cv
110.921 166.756 li
cp
209.552 106.965 mo
209.46 107.021 209.351 107.051 209.236 107.046 cv
207.762 106.985 206.258 106.952 204.766 106.948 cv
204.456 106.947 204.205 106.695 204.206 106.385 cv
204.206 106.075 204.458 105.825 204.768 105.825 cv
206.275 105.829 207.794 105.862 209.283 105.925 cv
209.592 105.938 209.833 106.199 209.82 106.509 cv
209.812 106.703 209.706 106.87 209.552 106.965 cv
cp
119.301 164.522 mo
119.228 164.566 119.144 164.595 119.053 164.603 cv
118.744 164.627 118.473 164.397 118.448 164.088 cv
118.41 163.614 118.39 163.135 118.387 162.664 cv
117.757 162.841 117.139 163.048 116.536 163.284 cv
116.247 163.397 115.921 163.255 115.808 162.966 cv
115.695 162.678 115.835 162.351 116.126 162.239 cv
116.864 161.95 117.623 161.702 118.397 161.498 cv
118.412 160.834 118.441 160.172 118.486 159.519 cv
118.507 159.209 118.775 158.976 119.084 158.997 cv
119.394 159.018 119.627 159.286 119.606 159.596 cv
119.569 160.137 119.542 160.684 119.527 161.233 cv
119.874 161.162 120.224 161.099 120.575 161.045 cv
120.881 160.998 121.168 161.208 121.215 161.515 cv
121.262 161.821 121.052 162.107 120.746 162.155 cv
120.331 162.219 119.918 162.295 119.509 162.385 cv
119.51 162.629 li
119.512 163.082 119.531 163.542 119.567 163.998 cv
119.585 164.216 119.475 164.415 119.301 164.522 cv
cp
106.917 172.123 mo
106.757 172.22 106.553 172.236 106.373 172.146 cv
106.096 172.008 105.983 171.671 106.121 171.394 cv
106.817 169.995 107.667 168.697 108.646 167.535 cv
108.848 167.298 109.201 167.269 109.438 167.468 cv
109.675 167.668 109.705 168.022 109.505 168.259 cv
108.583 169.353 107.783 170.576 107.126 171.895 cv
107.077 171.992 107.004 172.069 106.917 172.123 cv
cp
216.272 107.461 mo
216.17 107.524 216.048 107.554 215.919 107.541 cv
214.465 107.385 212.967 107.258 211.467 107.164 cv
211.158 107.144 210.923 106.877 210.942 106.568 cv
210.962 106.258 211.228 106.023 211.538 106.043 cv
213.054 106.139 214.568 106.267 216.039 106.424 cv
216.348 106.457 216.571 106.734 216.538 107.042 cv
216.519 107.222 216.416 107.374 216.272 107.461 cv
cp
127.661 162.154 mo
127.547 162.223 127.409 162.253 127.268 162.228 cv
125.851 161.972 124.388 161.875 122.919 161.94 cv
122.609 161.954 122.347 161.714 122.333 161.404 cv
122.32 161.095 122.56 160.833 122.87 160.818 cv
124.421 160.75 125.968 160.852 127.467 161.123 cv
127.772 161.178 127.975 161.47 127.92 161.775 cv
127.891 161.938 127.792 162.073 127.661 162.154 cv
cp
104.941 178.535 mo
104.834 178.601 104.704 178.631 104.569 178.611 cv
104.262 178.567 104.049 178.283 104.093 177.976 cv
104.313 176.438 104.689 174.936 105.21 173.513 cv
105.315 173.223 105.639 173.072 105.93 173.179 cv
106.221 173.285 106.371 173.607 106.264 173.899 cv
105.771 175.249 105.414 176.674 105.204 178.135 cv
105.18 178.308 105.079 178.45 104.941 178.535 cv
cp
222.942 108.418 mo
222.829 108.488 222.689 108.518 222.548 108.492 cv
221.115 108.23 219.63 108 218.137 107.804 cv
217.83 107.764 217.613 107.482 217.653 107.175 cv
217.694 106.867 217.976 106.651 218.283 106.691 cv
219.795 106.888 221.297 107.123 222.75 107.387 cv
223.054 107.442 223.257 107.735 223.201 108.04 cv
223.171 108.204 223.074 108.337 222.942 108.418 cv
cp
120.951 171.022 mo
120.881 171.059 li
120.597 171.183 120.266 171.052 120.143 170.768 cv
119.523 169.343 119.06 167.865 118.766 166.375 cv
118.706 166.07 118.904 165.776 119.208 165.716 cv
119.512 165.656 119.807 165.854 119.867 166.158 cv
120.146 167.569 120.585 168.97 121.172 170.32 cv
121.285 170.58 121.186 170.878 120.951 171.022 cv
cp
133.924 164.524 mo
133.749 164.631 133.521 164.638 133.334 164.522 cv
132.127 163.773 130.798 163.173 129.385 162.74 cv
129.088 162.649 128.921 162.335 129.012 162.039 cv
129.103 161.742 129.417 161.576 129.714 161.667 cv
131.22 162.128 132.637 162.768 133.927 163.568 cv
134.19 163.732 134.271 164.078 134.107 164.341 cv
133.924 164.524 li
cp
104.978 185.249 mo
104.77 185.324 li
104.463 185.372 104.177 185.161 104.129 184.854 cv
103.897 183.34 103.814 181.797 103.88 180.267 cv
103.893 179.957 104.156 179.717 104.465 179.73 cv
104.775 179.744 105.015 180.006 105.002 180.316 cv
104.938 181.772 105.019 183.242 105.24 184.685 cv
105.275 184.915 105.165 185.134 104.978 185.249 cv
cp
229.513 109.902 mo
229.386 109.979 229.228 110.007 229.072 109.964 cv
227.674 109.583 226.216 109.231 224.737 108.92 cv
224.434 108.857 224.24 108.559 224.304 108.256 cv
224.368 107.952 224.666 107.758 224.969 107.822 cv
226.469 108.138 227.949 108.494 229.368 108.882 cv
229.667 108.963 229.843 109.272 229.762 109.571 cv
229.722 109.714 229.631 109.83 229.513 109.902 cv
cp
124.553 176.684 mo
124.325 176.823 124.023 176.784 123.84 176.577 cv
123.002 175.633 122.238 174.601 121.569 173.508 cv
121.432 173.285 121.299 173.058 121.169 172.83 cv
121.017 172.56 121.111 172.204 121.382 172.064 cv
121.652 171.912 121.995 172.007 122.147 172.276 cv
122.27 172.494 122.396 172.709 122.526 172.922 cv
123.161 173.958 123.886 174.937 124.68 175.832 cv
124.885 176.064 124.864 176.418 124.632 176.625 cv
124.553 176.684 li
cp
138.733 169.164 mo
138.476 169.322 138.138 169.248 137.971 168.995 cv
137.414 168.15 136.749 167.347 135.993 166.605 cv
135.705 166.323 135.401 166.047 135.088 165.787 cv
134.851 165.588 134.819 165.234 135.018 164.997 cv
135.215 164.757 135.57 164.726 135.809 164.925 cv
136.144 165.205 136.47 165.5 136.78 165.804 cv
137.592 166.601 138.308 167.466 138.909 168.376 cv
139.079 168.635 139.008 168.983 138.749 169.154 cv
138.733 169.164 li
cp
235.911 112.006 mo
235.766 112.095 235.583 112.117 235.413 112.051 cv
234.071 111.526 232.658 111.034 231.211 110.586 cv
230.915 110.495 230.749 110.181 230.84 109.884 cv
230.933 109.588 231.248 109.423 231.543 109.514 cv
233.015 109.968 234.455 110.47 235.822 111.005 cv
236.111 111.118 236.253 111.443 236.14 111.732 cv
236.094 111.851 236.012 111.945 235.911 112.006 cv
cp
106.977 191.654 mo
106.931 191.68 li
106.653 191.817 106.316 191.702 106.179 191.424 cv
105.509 190.063 104.974 188.612 104.589 187.108 cv
104.512 186.808 104.693 186.502 104.994 186.425 cv
105.294 186.348 105.6 186.529 105.677 186.83 cv
106.043 188.258 106.551 189.637 107.187 190.928 cv
107.316 191.19 107.221 191.504 106.977 191.654 cv
cp
129.795 180.857 mo
129.631 180.958 129.42 180.972 129.237 180.875 cv
127.905 180.167 126.635 179.271 125.463 178.215 cv
125.233 178.008 125.215 177.652 125.422 177.422 cv
125.629 177.191 125.985 177.174 126.215 177.381 cv
127.319 178.376 128.513 179.218 129.765 179.883 cv
130.039 180.029 130.143 180.369 129.997 180.642 cv
129.948 180.734 129.877 180.807 129.795 180.857 cv
cp
140.729 175.493 mo
140.64 175.547 140.536 175.578 140.425 175.575 cv
140.115 175.569 139.868 175.313 139.875 175.003 cv
139.877 174.849 139.877 174.695 139.871 174.541 cv
139.828 173.326 139.535 172.094 139.002 170.878 cv
138.878 170.595 139.005 170.26 139.292 170.139 cv
139.576 170.015 139.906 170.144 140.031 170.428 cv
140.621 171.774 140.944 173.144 140.994 174.501 cv
141 174.675 141 174.85 140.997 175.025 cv
140.993 175.224 140.887 175.396 140.729 175.493 cv
cp
110.874 197.114 mo
110.655 197.248 110.366 197.219 110.179 197.027 cv
109.458 196.288 108.785 195.502 108.179 194.692 cv
107.875 194.287 107.583 193.863 107.309 193.434 cv
107.143 193.172 107.22 192.825 107.481 192.659 cv
107.733 192.498 108.089 192.569 108.256 192.831 cv
108.515 193.236 108.791 193.636 109.078 194.02 cv
109.655 194.79 110.295 195.538 110.983 196.244 cv
111.199 196.465 111.195 196.821 110.973 197.037 cv
110.874 197.114 li
cp
138.096 181.503 mo
137.872 181.641 137.573 181.604 137.389 181.403 cv
137.18 181.174 137.196 180.819 137.425 180.61 cv
138.403 179.715 139.16 178.459 139.557 177.073 cv
139.643 176.775 139.954 176.603 140.251 176.688 cv
140.55 176.773 140.722 177.084 140.637 177.382 cv
140.176 178.988 139.328 180.391 138.182 181.438 cv
138.096 181.503 li
cp
136.218 182.705 mo
136.123 182.764 136.01 182.794 135.891 182.787 cv
134.354 182.692 132.828 182.368 131.354 181.824 cv
131.063 181.717 130.914 181.394 131.021 181.103 cv
131.129 180.813 131.452 180.664 131.743 180.771 cv
133.114 181.276 134.533 181.578 135.96 181.666 cv
136.27 181.685 136.505 181.952 136.486 182.261 cv
136.474 182.451 136.369 182.613 136.218 182.705 cv
cp
116.155 201.267 mo
115.982 201.373 115.757 201.381 115.571 201.269 cv
114.234 200.459 112.984 199.56 111.855 198.595 cv
111.619 198.393 111.591 198.039 111.793 197.803 cv
111.995 197.567 112.349 197.54 112.584 197.741 cv
113.667 198.667 114.868 199.53 116.152 200.308 cv
116.417 200.468 116.502 200.813 116.342 201.079 cv
116.155 201.267 li
cp
122.243 204.128 mo
122.104 204.213 121.928 204.237 121.762 204.178 cv
120.299 203.657 118.888 203.053 117.569 202.38 cv
117.293 202.239 117.184 201.901 117.325 201.625 cv
117.464 201.349 117.803 201.239 118.08 201.38 cv
119.355 202.03 120.721 202.616 122.138 203.12 cv
122.43 203.224 122.583 203.545 122.479 203.837 cv
122.434 203.963 122.349 204.063 122.243 204.128 cv
cp
128.753 205.831 mo
128.641 205.9 128.503 205.93 128.361 205.904 cv
127.862 205.815 127.363 205.719 126.866 205.613 cv
125.876 205.403 124.888 205.155 123.93 204.878 cv
123.633 204.791 123.461 204.479 123.548 204.182 cv
123.634 203.884 123.946 203.713 124.244 203.8 cv
125.175 204.07 126.135 204.311 127.099 204.515 cv
127.584 204.617 128.071 204.712 128.56 204.8 cv
128.864 204.854 129.068 205.146 129.013 205.451 cv
128.984 205.615 128.886 205.75 128.753 205.831 cv
cp
135.442 206.604 mo
135.347 206.661 135.234 206.692 135.115 206.685 cv
133.516 206.587 132.041 206.446 130.604 206.253 cv
130.297 206.213 130.082 205.931 130.123 205.623 cv
130.164 205.315 130.446 205.099 130.754 205.141 cv
132.163 205.329 133.612 205.468 135.184 205.563 cv
135.493 205.583 135.729 205.849 135.709 206.158 cv
135.698 206.349 135.593 206.511 135.442 206.604 cv
cp
142.176 206.757 mo
142.092 206.808 141.993 206.838 141.888 206.839 cv
140.24 206.852 138.764 206.836 137.374 206.79 cv
137.064 206.779 136.821 206.521 136.831 206.21 cv
136.841 205.9 137.1 205.657 137.411 205.668 cv
138.786 205.713 140.247 205.729 141.879 205.716 cv
142.189 205.714 142.442 205.963 142.444 206.273 cv
142.446 206.478 142.338 206.657 142.176 206.757 cv
cp
148.636 206.683 mo
148.619 206.122 li
148.617 206.684 li
147.128 206.729 145.634 206.776 144.14 206.807 cv
143.83 206.813 143.574 206.566 143.567 206.256 cv
143.561 205.946 143.806 205.689 144.117 205.684 cv
145.608 205.653 147.097 205.607 148.583 205.562 cv
148.636 206.683 li
cp
f
605.994 160.736 mo
639.48 178.09 li
639.798 170.972 li
605.994 160.736 li
cp
.0275883 .53283 .880339 .0471809 cmyk
f
605.994 160.736 mo
646.714 163.523 li
632.882 178.42 li
605.994 160.736 li
cp
.0108949 .172457 .784787 0 cmyk
f
605.994 160.736 mo
638.165 172.73 li
639.48 178.09 li
641.745 168.875 li
605.994 160.736 li
cp
0 .464271 .845518 0 cmyk
f
188.462 109.265 mo
151.897 118.515 li
153.214 111.513 li
188.462 109.265 li
cp
.0275883 .53283 .880339 .0471809 cmyk
f
188.462 109.265 mo
148.182 102.682 li
158.247 120.343 li
188.462 109.265 li
cp
.0108949 .172457 .784787 0 cmyk
f
188.462 109.265 mo
154.402 113.597 li
151.897 118.515 li
151.797 109.026 li
188.462 109.265 li
cp
0 .464271 .845518 0 cmyk
f
360.462 70.5986 mo
323.897 79.8486 li
325.214 72.8457 li
360.462 70.5986 li
cp
.0275883 .53283 .880339 .0471809 cmyk
f
360.462 70.5986 mo
320.182 64.0151 li
330.247 81.6768 li
360.462 70.5986 li
cp
.0108949 .172457 .784787 0 cmyk
f
360.462 70.5986 mo
326.402 74.9302 li
323.897 79.8486 li
323.797 70.3589 li
360.462 70.5986 li
cp
0 .464271 .845518 0 cmyk
f
390.058 380.344 mo
310.286 380.344 li
310.286 336.199 li
390.058 336.199 li
390.058 380.344 li
.55642 .47129 0 0 cmyk
f
409.504 380.344 mo
290.839 380.344 li
287.562 380.344 284.904 377.687 284.904 374.408 cv
284.904 371.13 287.562 368.473 290.839 368.473 cv
409.504 368.473 li
412.782 368.473 415.439 371.13 415.439 374.408 cv
415.439 377.687 412.782 380.344 409.504 380.344 cv
cp
.678584 .659937 0 0 cmyk
f
gsave
390.058 348.668 mo
310.286 348.668 li
310.286 339.137 li
390.058 339.137 li
390.058 345.585 li
390.058 348.668 li
clp
310.286 339.137 mo
390.058 339.137 li
390.058 348.668 li
310.286 348.668 li
cp
.604517 .519036 0 0 cmyk
f
grestore
479.697 339.137 mo
220.646 339.137 li
212.163 339.137 205.286 332.259 205.286 323.775 cv
205.286 161.316 li
205.286 152.832 212.163 145.955 220.646 145.955 cv
479.697 145.955 li
488.181 145.955 495.058 152.832 495.058 161.316 cv
495.058 323.775 li
495.058 332.259 488.181 339.137 479.697 339.137 cv
f
214.566 308.768 mo
214.566 155.236 li
485.777 155.236 li
485.777 308.768 li
214.566 308.768 li
.0380255 .0268559 .0680552 0 cmyk
f
470.038 177.319 mo
230.305 177.319 li
226.217 177.319 222.904 174.005 222.904 169.917 cv
222.904 167.146 li
222.904 163.058 226.217 159.744 230.305 159.744 cv
470.038 159.744 li
474.126 159.744 477.44 163.058 477.44 167.146 cv
477.44 169.917 li
477.44 174.005 474.126 177.319 470.038 177.319 cv
cp
.743557 .471382 0 0 cmyk
ef
470.038 218.118 mo
328.76 218.118 li
324.672 218.118 321.359 214.805 321.359 210.717 cv
321.359 207.945 li
321.359 203.857 324.673 200.543 328.761 200.543 cv
470.038 200.543 li
474.126 200.543 477.44 203.857 477.44 207.945 cv
477.44 210.717 li
477.44 214.805 474.126 218.118 470.038 218.118 cv
cp
ef
470.038 272.583 mo
328.76 272.583 li
324.672 272.583 321.359 269.268 321.359 265.181 cv
321.359 228.724 li
321.359 224.636 324.673 221.321 328.761 221.321 cv
470.038 221.321 li
474.126 221.321 477.44 224.636 477.44 228.724 cv
477.44 265.181 li
477.44 269.268 474.126 272.583 470.038 272.583 cv
.291936 .13257 .162387 .0282902 cmyk
f
477.44 281.249 mo
477.44 278.954 475.579 277.094 473.284 277.094 cv
325.514 277.094 li
323.219 277.094 321.359 278.954 321.359 281.249 cv
321.359 301.14 li
477.44 301.14 li
477.44 281.249 li
f
238.253 168.532 mo
238.253 171.22 236.074 173.399 233.386 173.399 cv
230.697 173.399 228.518 171.22 228.518 168.532 cv
228.518 165.843 230.697 163.664 233.386 163.664 cv
236.074 163.664 238.253 165.843 238.253 168.532 cv
cp
.0380255 .0268559 .0680552 0 cmyk
f
290.469 170.204 mo
248.382 170.204 li
248.382 166.86 li
290.469 166.86 li
290.469 170.204 li
cp
f
344.78 170.204 mo
302.694 170.204 li
302.694 166.86 li
344.78 166.86 li
344.78 170.204 li
cp
f
399.092 170.204 mo
357.006 170.204 li
357.006 166.86 li
399.092 166.86 li
399.092 170.204 li
cp
f
255.621 186.184 mo
232.187 186.184 li
231.483 186.184 230.912 186.754 230.912 187.459 cv
230.912 188.163 231.483 188.734 232.187 188.734 cv
255.621 188.734 li
256.325 188.734 256.896 188.163 256.896 187.459 cv
256.896 186.754 256.325 186.184 255.621 186.184 cv
cp
.291936 .13257 .162387 .0282902 cmyk
f
226.61 185.623 mo
225.596 185.623 224.774 186.445 224.774 187.459 cv
224.774 188.473 225.596 189.295 226.61 189.295 cv
227.625 189.295 228.446 188.473 228.446 187.459 cv
228.446 186.445 227.625 185.623 226.61 185.623 cv
cp
.729671 .198764 .0967422 .0972915 cmyk
ef
226.61 192.563 mo
225.596 192.563 224.774 193.385 224.774 194.398 cv
224.774 195.413 225.596 196.235 226.61 196.235 cv
227.625 196.235 228.446 195.413 228.446 194.398 cv
228.446 193.385 227.625 192.563 226.61 192.563 cv
cp
ef
226.61 199.502 mo
225.596 199.502 224.774 200.324 224.774 201.339 cv
224.774 202.353 225.596 203.175 226.61 203.175 cv
227.625 203.175 228.446 202.353 228.446 201.339 cv
228.446 200.324 227.625 199.502 226.61 199.502 cv
cp
ef
226.61 206.442 mo
225.596 206.442 224.774 207.265 224.774 208.278 cv
224.774 209.292 225.596 210.114 226.61 210.114 cv
227.625 210.114 228.446 209.292 228.446 208.278 cv
228.446 207.265 227.625 206.442 226.61 206.442 cv
cp
ef
226.61 213.382 mo
225.596 213.382 224.774 214.204 224.774 215.218 cv
224.774 216.232 225.596 217.054 226.61 217.054 cv
227.625 217.054 228.446 216.232 228.446 215.218 cv
228.446 214.204 227.625 213.382 226.61 213.382 cv
cp
ef
226.61 220.321 mo
225.596 220.321 224.774 221.144 224.774 222.158 cv
224.774 223.172 225.596 223.994 226.61 223.994 cv
227.625 223.994 228.446 223.172 228.446 222.158 cv
228.446 221.144 227.625 220.321 226.61 220.321 cv
cp
ef
255.621 193.124 mo
232.187 193.124 li
231.483 193.124 230.912 193.694 230.912 194.398 cv
230.912 195.103 231.483 195.674 232.187 195.674 cv
255.621 195.674 li
256.325 195.674 256.896 195.103 256.896 194.398 cv
256.896 193.694 256.325 193.124 255.621 193.124 cv
cp
.291936 .13257 .162387 .0282902 cmyk
f
255.621 200.063 mo
232.187 200.063 li
231.483 200.063 230.912 200.634 230.912 201.339 cv
230.912 202.043 231.483 202.613 232.187 202.613 cv
255.621 202.613 li
256.325 202.613 256.896 202.043 256.896 201.339 cv
256.896 200.634 256.325 200.063 255.621 200.063 cv
cp
f
255.621 207.003 mo
232.187 207.003 li
231.483 207.003 230.912 207.574 230.912 208.278 cv
230.912 208.982 231.483 209.554 232.187 209.554 cv
255.621 209.554 li
256.325 209.554 256.896 208.982 256.896 208.278 cv
256.896 207.574 256.325 207.003 255.621 207.003 cv
cp
f
255.621 213.943 mo
232.187 213.943 li
231.483 213.943 230.912 214.514 230.912 215.218 cv
230.912 215.922 231.483 216.493 232.187 216.493 cv
255.621 216.493 li
256.325 216.493 256.896 215.922 256.896 215.218 cv
256.896 214.514 256.325 213.943 255.621 213.943 cv
cp
f
255.621 220.883 mo
232.187 220.883 li
231.483 220.883 230.912 221.453 230.912 222.158 cv
230.912 222.862 231.483 223.433 232.187 223.433 cv
255.621 223.433 li
256.325 223.433 256.896 222.862 256.896 222.158 cv
256.896 221.453 256.325 220.883 255.621 220.883 cv
cp
f
364.976 264.346 mo
330.188 264.346 li
330.188 229.559 li
364.976 229.559 li
364.976 264.346 li
.0380255 .0268559 .0680552 0 cmyk
f
376.425 262.744 mo
428.819 262.744 li
428.819 260.477 li
376.425 260.477 li
376.425 262.744 li
376.425 256.56 mo
465.071 256.56 li
465.071 254.294 li
376.425 254.294 li
376.425 256.56 li
376.425 250.376 mo
465.071 250.376 li
465.071 248.11 li
376.425 248.11 li
376.425 250.376 li
376.425 244.192 mo
465.071 244.192 li
465.071 241.926 li
376.425 241.926 li
376.425 244.192 li
376.425 238.008 mo
465.071 238.008 li
465.071 235.742 li
376.425 235.742 li
376.425 238.008 li
376.425 229.559 mo
376.425 231.824 li
465.071 231.824 li
465.071 229.559 li
376.425 229.559 li
f
394.172 207.635 mo
394.172 211.027 li
435.579 211.027 li
435.579 207.635 li
394.172 207.635 li
cp
382.277 204.809 mo
367.742 204.809 li
365.245 204.809 363.22 206.833 363.22 209.331 cv
363.22 211.828 365.245 213.853 367.742 213.853 cv
382.277 213.853 li
384.775 213.853 386.8 211.828 386.8 209.331 cv
386.8 206.833 384.775 204.809 382.277 204.809 cv
cp
f
339.705 186.747 mo
339.705 190.139 li
371.518 190.139 li
371.518 186.747 li
339.705 186.747 li
cp
.291936 .13257 .162387 .0282902 cmyk
f
335.782 188.443 mo
335.782 192.426 332.553 195.654 328.57 195.654 cv
324.587 195.654 321.359 192.426 321.359 188.443 cv
321.359 184.46 324.587 181.231 328.57 181.231 cv
332.553 181.231 335.782 184.46 335.782 188.443 cv
cp
.729671 .198764 .0967422 .0972915 cmyk
ef
392.394 186.747 mo
392.394 190.139 li
424.205 190.139 li
424.205 186.747 li
392.394 186.747 li
cp
.291936 .13257 .162387 .0282902 cmyk
f
388.47 188.443 mo
388.47 192.426 385.241 195.654 381.259 195.654 cv
377.275 195.654 374.047 192.426 374.047 188.443 cv
374.047 184.46 377.275 181.231 381.259 181.231 cv
385.241 181.231 388.47 184.46 388.47 188.443 cv
cp
.743557 .471382 0 0 cmyk
ef
445.082 186.747 mo
445.082 190.139 li
476.894 190.139 li
476.894 186.747 li
445.082 186.747 li
cp
.291936 .13257 .162387 .0282902 cmyk
f
441.158 188.443 mo
441.158 192.426 437.93 195.654 433.946 195.654 cv
429.964 195.654 426.735 192.426 426.735 188.443 cv
426.735 184.46 429.964 181.231 433.946 181.231 cv
437.93 181.231 441.158 184.46 441.158 188.443 cv
cp
.743557 .471382 0 0 cmyk
ef
305.729 244.048 mo
272.87 244.048 li
268.416 244.048 264.804 240.437 264.804 235.981 cv
264.804 189.297 li
264.804 184.842 268.416 181.231 272.87 181.231 cv
305.729 181.231 li
310.184 181.231 313.795 184.842 313.795 189.297 cv
313.795 235.981 li
313.795 240.437 310.184 244.048 305.729 244.048 cv
cp
ef
272.663 229.559 mo
272.663 232.951 li
305.936 232.951 li
305.936 229.559 li
272.663 229.559 li
cp
.0380255 .0268559 .0680552 0 cmyk
f
280.021 235.391 mo
280.021 238.783 li
298.578 238.783 li
298.578 235.391 li
280.021 235.391 li
cp
f
305.729 271.125 mo
272.87 271.125 li
268.416 271.125 264.804 267.514 264.804 263.059 cv
264.804 257.358 li
264.804 252.903 268.416 249.292 272.87 249.292 cv
305.729 249.292 li
310.184 249.292 313.795 252.903 313.795 257.358 cv
313.795 263.059 li
313.795 267.514 310.184 271.125 305.729 271.125 cv
cp
.291936 .13257 .162387 .0282902 cmyk
f
297.066 214.588 mo
294.975 213.564 293.267 211.932 292.146 209.927 cv
295.758 207.755 298.365 201.893 298.365 197.88 cv
298.365 192.873 294.306 188.814 289.299 188.814 cv
284.292 188.814 280.233 192.873 280.233 197.88 cv
280.233 201.893 282.841 207.755 286.453 209.927 cv
285.333 211.932 283.624 213.564 281.532 214.588 cv
277.438 216.591 274.232 220.128 272.663 224.452 cv
305.936 224.452 li
304.367 220.128 301.161 216.591 297.066 214.588 cv
cp
.0380255 .0268559 .0680552 0 cmyk
f
262.967 305.194 mo
266.731 304.66 272.39 303.413 275.459 301.17 cv
278.529 298.928 280.748 295.24 280.412 291.453 cv
280.256 289.692 279.579 288.048 278.816 286.438 cv
288.583 285.199 li
288.958 286.954 289.204 288.733 289.247 290.535 cv
289.361 295.447 287.834 300.59 284.227 303.926 cv
281.887 306.09 278.833 307.36 275.714 308.016 cv
272.595 308.67 266.705 308.73 263.518 308.768 cv
262.592 308.778 262.117 305.315 262.967 305.194 cv
cp
.000274662 .466194 .447669 0 cmyk
f
254.003 306.187 mo
253.618 306.324 253.228 306.48 252.928 306.758 cv
252.628 307.035 252.434 307.462 252.538 307.856 cv
252.691 308.438 253.368 308.688 253.956 308.815 cv
255.792 309.215 257.678 309.315 259.555 309.414 cv
259.768 309.426 259.982 309.437 260.195 309.448 cv
260.45 309.462 260.705 309.476 260.96 309.481 cv
262.08 309.507 263.385 309.336 264.037 308.302 cv
264.47 307.614 264.555 306.656 264.005 306.014 cv
262.777 304.58 259.847 304.975 258.239 305.176 cv
256.795 305.356 255.372 305.695 254.003 306.187 cv
cp
f
277.896 284.535 mo
276.829 282.31 275.881 279.866 276.28 277.43 cv
277.188 271.882 283.352 272.407 285.861 276.43 cv
286.824 277.973 287.176 280.025 287.692 281.747 cv
288.033 282.887 288.335 284.038 288.583 285.199 cv
278.991 288.044 li
278.688 287.405 278.2 285.167 277.896 284.535 cv
cp
.708949 .183352 0 0 cmyk
ef
206.416 333.895 mo
206.407 334.243 206.39 334.617 206.176 334.892 cv
205.918 335.223 205.461 335.307 205.045 335.366 cv
204.098 335.503 203.15 335.64 202.202 335.775 cv
201.911 335.817 201.566 335.842 201.37 335.622 cv
201.193 335.424 201.224 335.122 201.266 334.859 cv
201.401 334.019 201.536 333.178 201.67 332.337 cv
201.789 331.597 201.922 330.821 202.383 330.229 cv
203.049 329.377 205.261 328.554 206.16 329.479 cv
206.988 330.331 206.441 332.847 206.416 333.895 cv
cp
.00332647 .360296 .443305 0 cmyk
f
192.364 340.917 mo
192.126 340.192 192.687 339.417 193.37 339.078 cv
194.053 338.738 194.839 338.695 195.58 338.515 cv
197.694 338 199.459 336.254 199.996 334.146 cv
200.069 333.856 200.133 333.541 200.354 333.339 cv
200.648 333.071 201.12 333.111 201.476 333.288 cv
201.833 333.465 202.123 333.752 202.46 333.964 cv
203.065 334.343 203.829 334.453 204.52 334.282 cv
205.099 334.14 205.647 333.545 206.274 333.71 cv
206.827 333.854 207.117 334.507 207.354 334.965 cv
207.764 335.753 208.154 336.553 208.553 337.347 cv
208.642 337.521 208.731 337.706 208.789 337.895 cv
204.751 338.828 li
204.502 338.606 204.171 337.872 204.017 337.573 cv
204.08 337.902 204.129 338.707 203.98 339.006 cv
192.881 341.57 li
192.644 341.409 192.453 341.189 192.364 340.917 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
199.383 328.049 mo
198.511 327.763 197.751 327.202 196.893 326.878 cv
195.221 326.245 193.334 326.555 191.604 326.107 cv
189.741 325.625 188.142 324.222 187.421 322.438 cv
187.267 322.056 187.158 321.595 187.384 321.249 cv
187.597 320.926 188.023 320.829 188.409 320.792 cv
191.375 320.512 192.158 321.676 195.133 321.826 cv
195.928 321.866 199.238 321.35 200.927 321.957 cv
202.759 322.615 202.568 323.398 202.635 324.101 cv
202.704 324.807 202.591 327.146 201.982 327.663 cv
201.292 328.248 200.206 328.319 199.383 328.049 cv
cp
ef
202.493 321.416 mo
202.563 321.075 202.631 320.707 202.485 320.391 cv
202.31 320.01 201.883 319.825 201.492 319.673 cv
200.6 319.325 199.707 318.979 198.815 318.631 cv
198.541 318.523 198.21 318.423 197.969 318.592 cv
197.752 318.745 197.714 319.046 197.696 319.312 cv
197.637 320.161 197.578 321.011 197.519 321.86 cv
197.466 322.608 197.421 323.394 197.736 324.074 cv
198.191 325.055 200.16 326.357 201.245 325.66 cv
202.244 325.018 202.281 322.442 202.493 321.416 cv
cp
.000274662 .466194 .447669 0 cmyk
f
201.12 295.901 mo
201.473 294.499 201.906 293.03 202.708 291.859 cv
210.461 301.355 li
208.679 301.944 207.624 303.755 206.812 306.832 cv
203.869 317.986 202.848 322.136 202.085 323.226 cv
201.503 324.057 197.588 323.563 197.232 322.54 cv
196.246 319.701 199.362 302.88 201.12 295.901 cv
cp
.858061 .489601 .183963 .363775 cmyk
f
248.001 309.044 mo
246.058 310.434 235.843 310.719 233.461 310.536 cv
229.963 310.268 226.466 309.999 222.968 309.73 cv
221.301 309.603 217.182 308.208 215.846 309.213 cv
214.029 310.579 208.601 328.927 206.991 331.266 cv
206.458 332.042 202.053 332.467 201.557 331.082 cv
201.062 329.697 203.53 315.103 204.521 309.294 cv
204.901 307.064 205.286 304.818 206.105 302.711 cv
206.925 300.604 208.22 298.618 210.095 297.354 cv
212.729 295.575 238.312 296.664 239.53 297.316 cv
241.248 298.236 250.044 307.582 248.001 309.044 cv
cp
.893431 .762142 .201266 .494148 cmyk
f
255.397 293.089 mo
256.742 294.032 257.655 295.499 258.173 297.058 cv
259.562 301.23 258.048 306.203 254.571 308.896 cv
251.093 311.589 241.892 311.436 236.72 307.266 cv
233.296 304.505 236.587 302.202 237.618 297.926 cv
238.136 295.778 239.574 293.498 241.64 292.716 cv
245.211 292.41 246.755 293.281 249.388 292.968 cv
251.689 292.694 253.048 291.441 255.397 293.089 cv
cp
.858061 .489601 .183963 .363775 cmyk
f
203.934 290.568 mo
217.55 287.955 234.697 291.859 241.988 292.76 cv
243.908 295.116 244.341 302.991 243.355 305.65 cv
241.804 309.833 237.636 309.616 233.984 308.592 cv
228.169 306.961 222.467 304.927 216.934 302.507 cv
214.041 301.242 208.289 298.523 206.921 300.961 cv
202.708 291.859 li
203.044 291.368 203.338 290.683 203.934 290.568 cv
cp
f
282.891 271.769 mo
283.801 272.997 284.106 274.571 284.212 276.098 cv
284.686 282.971 281.541 289.713 277.008 294.902 cv
272.476 300.091 266.639 303.948 260.788 307.586 cv
258.943 308.732 256.287 309.561 253.363 309.618 cv
252.544 307.053 252.037 299.307 251.218 296.741 cv
250.788 295.394 250.354 293.956 250.718 292.589 cv
251.283 290.469 253.493 289.314 255.424 288.272 cv
260.758 285.396 265.548 281.517 269.47 276.896 cv
270.816 275.311 272.071 273.628 273.646 272.268 cv
276.123 270.127 280.504 268.545 282.891 271.769 cv
cp
.658137 .198489 0 0 cmyk
ef
281.946 270.154 mo
282.083 270.575 282.237 271.003 282.227 271.445 cv
282.218 271.888 282.001 272.357 281.593 272.526 cv
281.308 272.644 280.985 272.598 280.681 272.55 cv
278.984 272.283 277.289 272.017 275.592 271.75 cv
276.025 269.772 275.729 267.645 274.773 265.86 cv
274.522 265.393 274.217 264.886 274.335 264.368 cv
274.458 263.824 275 263.494 275.504 263.256 cv
276.63 262.725 277.826 262.341 279.05 262.116 cv
280.435 261.862 281.177 261.447 281.229 262.886 cv
281.32 265.423 281.143 267.669 281.946 270.154 cv
cp
.000274662 .466194 .447669 0 cmyk
f
284.149 257.46 mo
285.04 258.982 285.147 261.114 283.916 262.376 cv
283.193 263.116 282.156 263.438 281.165 263.73 cv
279.391 264.257 277.617 264.782 275.843 265.308 cv
274.775 265.624 272.101 265.178 271.199 264.524 cv
270.281 263.858 271.188 263.177 271.199 262.042 cv
271.218 260.211 272.856 257.677 273.483 255.956 cv
274.11 254.234 274.229 253.431 275.954 252.815 cv
278.988 251.733 282.718 255.014 284.149 257.46 cv
cp
.00332647 .360296 .443305 0 cmyk
f
285.913 263.579 mo
285.433 264.45 284.935 265.343 284.165 265.97 cv
283.394 266.598 282.275 266.904 281.388 266.455 cv
280.257 265.883 279.97 264.429 279.813 263.17 cv
279.624 261.643 278.414 262.484 278.225 260.956 cv
278.144 260.308 279.082 257.28 278.833 256.676 cv
278.234 255.218 276.76 254.262 276.15 252.809 cv
275.406 251.036 276.308 248.751 278.062 247.965 cv
279.815 247.179 282.122 248.026 282.949 249.761 cv
283.553 251.025 283.321 252.594 284.04 253.802 cv
284.644 254.816 285.559 254.739 286.416 255.374 cv
289.104 257.363 287.127 261.375 285.913 263.579 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
282.339 261.675 mo
282.563 260.645 281.734 259.533 280.688 259.391 cv
279.643 259.247 278.209 262.683 278.546 263.111 cv
280.416 263.483 281.885 262.84 282.339 261.675 cv
cp
.00332647 .360296 .443305 0 cmyk
f
247.991 262.042 mo
249.183 265.651 251.413 271 254.164 273.624 cv
256.915 276.248 260.937 277.778 264.604 276.776 cv
266.31 276.312 267.808 275.354 269.257 274.318 cv
272.207 283.711 li
270.546 284.39 268.839 284.948 267.073 285.309 cv
262.259 286.292 256.927 285.7 253.005 282.74 cv
250.461 280.821 248.669 278.04 247.472 275.087 cv
246.275 272.134 245.172 266.347 244.571 263.217 cv
244.396 262.308 247.721 261.227 247.991 262.042 cv
cp
f
270.967 273.075 mo
272.969 271.631 275.206 270.265 277.674 270.226 cv
283.295 270.137 283.87 276.296 280.356 279.478 cv
279.007 280.699 277.05 281.409 275.446 282.222 cv
274.386 282.76 273.306 283.261 272.207 283.711 cv
267.708 274.774 li
268.283 274.363 270.399 273.485 270.967 273.075 cv
cp
.658137 .198489 0 0 cmyk
ef
248.188 258.433 mo
243.582 258.433 li
243.309 258.433 243.026 258.212 242.95 257.939 cv
240.137 248.163 li
240.061 247.891 240.22 247.67 240.492 247.67 cv
245.098 247.67 li
245.371 247.67 245.653 247.891 245.729 248.163 cv
248.542 257.939 li
248.619 258.212 248.46 258.433 248.188 258.433 cv
cp
.745327 .385351 .1178 .138094 cmyk
f
248.637 258.433 mo
244.031 258.433 li
243.758 258.433 243.476 258.212 243.399 257.939 cv
240.586 248.163 li
240.51 247.891 240.669 247.67 240.941 247.67 cv
245.547 247.67 li
245.82 247.67 246.103 247.891 246.179 248.163 cv
248.992 257.939 li
249.068 258.212 248.909 258.433 248.637 258.433 cv
cp
.401068 .0568856 .0441901 0 cmyk
f
248.257 257.902 mo
244.105 257.902 li
243.86 257.902 243.605 257.703 243.536 257.457 cv
241.001 248.646 li
240.932 248.399 241.075 248.201 241.321 248.201 cv
245.472 248.201 li
245.718 248.201 245.973 248.399 246.042 248.646 cv
248.577 257.457 li
248.646 257.703 248.502 257.902 248.257 257.902 cv
cp
.745327 .385351 .1178 .138094 cmyk
f
247.423 257.198 mo
247.234 256.618 246.172 255.054 245.608 253.565 cv
244.571 253.209 245.122 256.185 245.471 256.534 cv
244.26 256.294 241.991 254.938 241.46 252.763 cv
241.25 252.948 240.586 253.901 240.57 254.182 cv
240.513 255.241 241.19 256.225 241.133 257.284 cv
241.089 258.078 240.724 258.495 240.963 259.253 cv
241.347 260.466 242.382 261.346 243.404 262.104 cv
243.936 262.498 244.491 262.885 245.125 263.075 cv
248.643 264.132 248.004 258.992 247.423 257.198 cv
cp
.00332647 .360296 .443305 0 cmyk
f
656.96 345.857 mo
656.868 349.243 653.467 358.227 652.61 367.793 cv
652.488 368.395 649.472 368.373 649.311 367.852 cv
648.902 356.948 646.804 344.148 648.016 337.563 cv
648.42 335.364 652.291 331.531 654.077 334.069 cv
655.704 336.381 657.037 343.046 656.96 345.857 cv
cp
f
654.019 371.592 mo
654.083 370.668 654.146 369.727 653.921 368.829 cv
653.702 367.95 653.384 367.057 652.697 366.465 cv
652.518 366.907 652.063 367.507 651.586 367.525 cv
651.21 367.541 649.345 366.75 648.991 366.88 cv
648.736 366.973 648.325 370.594 647.201 371.361 cv
646.078 372.13 644.761 372.554 643.525 373.125 cv
643.095 373.324 642.662 373.55 642.347 373.904 cv
642.031 374.259 641.853 374.771 642.008 375.219 cv
642.065 375.332 li
650.24 375.332 li
650.433 375.053 650.597 374.75 650.756 374.452 cv
651.328 373.382 651.899 372.312 652.472 371.241 cv
652.798 372.576 652.922 373.96 652.845 375.332 cv
653.758 375.332 li
653.845 374.085 653.932 372.839 654.019 371.592 cv
cp
.743557 .471382 0 0 cmyk
ef
643.186 345.095 mo
643.63 348.455 641.665 357.648 642.328 367.193 cv
642.301 367.799 639.294 368.045 639.05 367.543 cv
636.916 356.786 632.798 344.303 632.962 337.675 cv
633.017 335.464 636.266 331.327 638.447 333.682 cv
640.433 335.825 642.817 342.306 643.186 345.095 cv
cp
.00332647 .360296 .443305 0 cmyk
f
643.599 371.592 mo
643.663 370.668 643.727 369.727 643.502 368.829 cv
643.282 367.95 642.965 367.057 642.278 366.465 cv
642.099 366.907 641.644 367.507 641.167 367.525 cv
640.79 367.541 638.926 366.75 638.572 366.88 cv
638.317 366.973 637.906 370.594 636.782 371.361 cv
635.658 372.13 634.342 372.554 633.106 373.125 cv
632.676 373.324 632.243 373.55 631.928 373.904 cv
631.612 374.259 631.434 374.771 631.588 375.219 cv
631.646 375.332 li
639.821 375.332 li
640.013 375.053 640.178 374.75 640.337 374.452 cv
640.908 373.382 641.48 372.312 642.053 371.241 cv
642.378 372.576 642.502 373.96 642.426 375.332 cv
643.339 375.332 li
643.426 374.085 643.513 372.839 643.599 371.592 cv
cp
.743557 .471382 0 0 cmyk
ef
639.3 295.544 mo
645.536 285.618 657.119 289.842 660.124 295.876 cv
661.912 299.468 662.301 304.096 660.46 307.472 cv
659.433 312.266 658.592 310.691 655.909 336.758 cv
654.937 339.007 639.137 338.707 634.226 337.697 cv
632.797 337.565 632.695 337.344 632.657 336.124 cv
631.103 323.587 635.327 301.869 639.3 295.544 cv
cp
ef
640.041 285.985 mo
639.173 283.914 638.985 280.677 638.006 278.655 cv
636.493 275.533 635.083 274.104 635.083 271.491 cv
635.083 267.305 639.812 266.03 642.322 261.253 cv
643.694 258.641 646.147 258.667 648.318 258.667 cv
650.514 258.667 653.085 264.75 653.01 267.252 cv
652.859 272.253 649.896 276.136 650.524 281.174 cv
651.195 286.556 654.344 289.057 658.446 293.518 cv
638.309 297.448 li
638.813 295.37 642.281 291.323 640.041 285.985 cv
cp
.893431 .762142 .201266 .494148 cmyk
ef
651.498 267.803 mo
651.348 269.651 650.831 271.45 650.233 273.206 cv
648.634 277.91 646.427 282.407 643.686 286.551 cv
643.229 287.242 642.739 287.941 642.049 288.399 cv
641.358 288.858 640.414 289.028 639.699 288.609 cv
638.644 287.99 638.572 286.514 638.668 285.294 cv
639.112 279.618 640.379 274.043 641.642 268.492 cv
642.105 266.453 642.641 264.286 644.163 262.854 cv
645.567 261.533 648.16 260.907 649.935 261.868 cv
651.664 262.805 651.636 266.118 651.498 267.803 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
626.071 278.84 mo
625.332 279.115 625.379 280.186 625.681 280.915 cv
626.506 282.913 638.864 289.897 640.553 288.847 cv
641.573 288.211 643.277 286.287 643.244 285.061 cv
643.203 283.579 626.379 278.726 626.071 278.84 cv
cp
ef
626.83 278.823 mo
625.863 276.661 625.172 274.106 624.19 273.222 cv
623.395 272.505 623.883 274.481 623.858 275.553 cv
622.396 272.998 621.26 273.268 619.231 272.636 cv
617.129 271.982 623.13 281.163 626.491 281.63 cv
626.83 278.823 li
cp
.00332647 .360296 .443305 0 cmyk
f
648.145 250.215 mo
647.792 249.551 643.929 251.542 643.699 252.02 cv
643.47 252.496 643.227 257.893 642.4 261.262 cv
642.222 261.989 649.428 259.763 648.916 258.883 cv
648.086 257.455 647.239 252.013 648.145 250.215 cv
cp
.000274662 .466194 .447669 0 cmyk
f
637.008 245.351 mo
638.343 239.814 645.916 240.981 647.714 241.534 cv
649.513 242.086 649.559 244.63 649.732 246.503 cv
649.839 247.659 649.421 248.81 648.732 249.728 cv
648.071 250.609 645.19 251.938 645.027 251.974 cv
643.959 253.815 642.221 255.923 640.454 255.897 cv
639.658 255.886 638.936 255.375 638.469 254.73 cv
638.001 254.086 637.745 253.316 637.495 252.561 cv
636.722 250.214 636.429 247.753 637.008 245.351 cv
cp
.00332647 .360296 .443305 0 cmyk
f
650.115 248.567 mo
650.774 247.771 651.29 246.824 651.42 245.798 cv
651.573 244.584 651.17 243.344 650.486 242.329 cv
649.267 240.516 646.117 238.177 643.571 238.125 cv
640.853 238.069 636.184 240.777 636.627 244.142 cv
636.759 245.147 637.312 245.155 638.274 245.477 cv
639.544 245.899 641.246 246.192 642.298 247.019 cv
643.557 248.006 642.997 250.388 645.573 251.161 cv
646.405 251.412 647.261 252.882 647.814 254.025 cv
648.472 253.278 649.478 249.338 650.115 248.567 cv
cp
0 .464271 .845518 0 cmyk
f
646.69 248.992 mo
646.826 249.117 646.896 249.298 646.938 249.478 cv
647.069 250.041 646.965 250.656 646.653 251.144 cv
646.343 251.632 645.829 251.985 645.263 252.104 cv
645.038 252.15 644.791 252.157 644.595 252.038 cv
643.921 251.627 644.263 250.196 644.587 249.643 cv
644.923 249.066 646.116 248.458 646.69 248.992 cv
cp
.00332647 .360296 .443305 0 cmyk
f
652.999 250.665 mo
654.079 251.644 654.638 253.166 654.448 254.611 cv
654.269 255.98 653.47 257.239 653.469 258.619 cv
653.468 259.727 653.982 260.766 654.549 261.719 cv
655.98 264.128 657.819 266.296 659.964 268.101 cv
660.198 268.298 660.462 268.556 660.405 268.856 cv
660.335 269.227 659.862 269.331 659.485 269.349 cv
658.065 269.415 656.628 269.392 655.242 269.074 cv
653.856 268.757 652.516 268.128 651.517 267.115 cv
650.406 265.988 649.778 264.433 649.641 262.856 cv
649.504 261.28 649.835 259.685 650.443 258.224 cv
650.799 257.372 651.249 256.556 651.493 255.667 cv
651.738 254.777 651.754 253.772 651.271 252.986 cv
650.848 252.296 650.103 251.865 649.614 251.218 cv
649.385 250.914 648.991 250.284 649.057 249.878 cv
649.136 249.387 649.713 249.481 650.143 249.502 cv
651.189 249.551 652.221 249.96 652.999 250.665 cv
cp
0 .464271 .845518 0 cmyk
f
651.101 250.527 mo
650.936 250.881 650.653 251.164 650.366 251.428 cv
650.119 251.654 649.858 251.877 649.548 252.003 cv
649.237 252.129 648.865 252.145 648.58 251.969 cv
648.224 251.748 648.088 251.278 648.145 250.863 cv
648.243 250.136 648.836 248.882 649.671 248.826 cv
650.646 248.76 651.569 249.525 651.101 250.527 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
280.095 96.1904 mo
275.456 93.2642 269.953 91.7256 264.468 91.8213 cv
263.481 91.8389 262.303 92.0332 261.903 92.9365 cv
261.686 93.4287 261.78 94.0151 262.027 94.4937 cv
262.275 94.9722 262.659 95.3633 263.042 95.7417 cv
267.512 100.157 272.581 103.91 277.631 107.646 cv
279.183 108.794 280.756 109.955 282.548 110.672 cv
284.341 111.388 286.406 111.623 288.191 110.89 cv
289.126 110.506 290.399 109.605 290.571 108.514 cv
290.709 107.636 289.843 106.539 289.431 105.839 cv
287.97 103.355 286.13 101.096 283.997 99.1587 cv
282.785 98.0591 281.479 97.0635 280.095 96.1904 cv
cp
.000274662 .466194 .447669 0 cmyk
f
260.825 93.6279 mo
260.178 92.8594 259.512 91.8633 259.874 90.9258 cv
260.255 89.9375 262.144 89.3633 263.202 89.313 cv
269.616 89.0068 275.478 91.2891 280.68 95.0449 cv
272.133 103.972 li
267.938 101.031 264.124 97.5483 260.825 93.6279 cv
cp
.576135 .48072 0 0 cmyk
ef
307.47 101.593 mo
308.325 102.079 308.531 103.292 308.159 104.203 cv
307.787 105.113 289.775 111.028 286.325 111.171 cv
285.275 111.215 284.065 111.186 283.398 110.373 cv
282.803 109.647 282.898 108.584 283.142 107.678 cv
283.551 106.156 284.32 104.422 285.482 103.317 cv
286.283 102.555 287.282 102.847 288.288 102.795 cv
291.984 102.607 306.923 101.282 307.47 101.593 cv
cp
.000274662 .466194 .447669 0 cmyk
f
308.969 99.9634 mo
309.374 99.7173 310.028 99.541 310.213 99.9775 cv
310.323 100.237 310.146 100.53 309.94 100.722 cv
309.734 100.914 309.48 101.077 309.372 101.337 cv
309.183 101.786 309.543 102.312 310 102.482 cv
310.455 102.652 310.961 102.567 311.44 102.479 cv
312.736 102.244 314.033 102.008 315.329 101.772 cv
315.868 101.674 316.552 101.639 316.827 102.112 cv
317.027 102.458 316.885 102.898 316.705 103.255 cv
315.984 104.687 314.685 105.816 313.167 106.331 cv
311.649 106.846 309.931 106.74 308.487 106.043 cv
307.615 105.622 306.828 104.972 306.387 104.109 cv
305.159 101.704 307.256 101.002 308.969 99.9634 cv
cp
f
253.877 142.179 mo
253.974 143.822 258.177 142.771 259.78 142.771 cv
272.977 142.771 280.613 138.48 278.788 132.418 cv
276.913 126.191 265.103 127.197 258.935 129.203 cv
257.605 129.636 255.667 130.055 254.759 131.296 cv
253.442 133.096 253.53 136.253 253.877 142.179 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
265.798 130.736 mo
269.277 124.601 274.146 118.739 279.129 113.529 cv
282.12 110.402 285.311 107.445 288.673 104.691 cv
290.028 103.581 291.715 102.418 293.238 102.759 cv
293.913 102.91 294.872 104.315 297.609 106.744 cv
278.632 140.747 li
277.231 143.257 260.629 139.856 265.798 130.736 cv
cp
ef
266.848 90.2129 mo
258.654 84.6294 251.354 94.2944 251.354 104.351 cv
251.354 113.33 253.655 114.042 250.803 136.067 cv
268.325 136.067 li
274.762 131.53 li
272.621 117.436 279.697 98.9688 266.848 90.2129 cv
cp
.576135 .48072 0 0 cmyk
ef
257.102 129.87 mo
264.155 129.917 271.646 131.312 278.625 133.125 cv
282.813 134.212 286.95 135.558 290.993 137.151 cv
292.623 137.794 294.46 138.7 294.905 140.196 cv
295.102 140.859 294.342 142.38 293.555 145.955 cv
254.616 145.955 li
251.741 145.955 246.62 129.8 257.102 129.87 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
274.381 82.4253 mo
273.952 82.9048 273.568 82.6782 273.711 82.0557 cv
274.168 80.0645 274.299 79.7642 273.743 77.7905 cv
273.438 76.7041 273.293 76.5894 273.814 76.3428 cv
275.541 75.5259 277.94 78.4561 274.381 82.4253 cv
cp
.901671 .773953 .191257 .476265 cmyk
ef
267.95 82.1382 mo
267.271 79.1406 265.002 78.4385 263.684 79.1577 cv
262.838 84.769 261.977 87.2627 259.778 90.3232 cv
262.512 92.0767 266.781 94.4478 267.79 93.021 cv
267.831 92.5713 268.301 83.688 267.95 82.1382 cv
cp
.000274662 .466194 .447669 0 cmyk
f
266.879 75.7324 mo
269.406 73.6094 273.449 74.8657 274.335 78.269 cv
275.146 81.3853 272.475 87.1143 271.048 88.1372 cv
268.554 89.9263 264.657 86.562 264.366 84.7998 cv
263.94 82.2183 264.754 77.5176 266.879 75.7324 cv
cp
.00332647 .360296 .443305 0 cmyk
f
265.849 83.8013 mo
265.798 84.1284 265.757 84.4985 265.962 84.7593 cv
266.132 84.9756 266.433 85.0513 266.707 85.0278 cv
266.981 85.0039 267.24 84.8975 267.5 84.8081 cv
268.608 84.4297 269.821 84.3647 270.962 84.6226 cv
271.482 84.7397 272.022 84.9492 272.318 85.3926 cv
272.559 85.7549 272.596 86.2148 272.572 86.6489 cv
272.543 87.1978 272.426 87.7485 272.167 88.2334 cv
271.908 88.7183 271.5 89.1333 270.991 89.3403 cv
270.278 89.6294 269.466 89.4873 268.73 89.2642 cv
267.419 88.8672 266.164 88.2104 265.222 87.2153 cv
264.28 86.2207 263.679 84.8638 263.76 83.4966 cv
263.801 82.8174 264.007 82.1484 264.356 81.5645 cv
264.658 81.0596 265.086 80.605 265.638 80.4014 cv
266.496 80.085 266.316 80.8125 266.234 81.3213 cv
266.102 82.147 265.978 82.9746 265.849 83.8013 cv
cp
.901671 .773953 .191257 .476265 cmyk
ef
267.79 76.7642 mo
267.827 77.2476 265.556 83.1318 265.401 83.0298 cv
264.852 82.6655 264.423 80.8066 263.281 80.6509 cv
262.916 80.6011 262.373 80.7388 262.5 80.0132 cv
263.304 75.416 263.078 75.6143 263.976 75.353 cv
265.955 74.7778 267.724 75.9019 267.79 76.7642 cv
cp
ef
263.337 72.9297 mo
267.584 71.0337 273.906 71.2344 275.476 72.623 cv
277.814 74.6899 275.009 78.7441 273.971 78.7959 cv
273.497 78.8193 273.151 78.3813 272.817 78.0439 cv
271.232 76.4419 269.41 77.0762 267.987 77.0615 cv
265.465 77.0361 259.719 74.5454 263.337 72.9297 cv
cp
ef
262.423 79.7573 mo
262.209 80.4829 262.292 81.291 262.649 81.958 cv
263.669 83.8667 265.449 81.9019 265.408 80.4546 cv
265.359 78.729 263.005 77.7842 262.423 79.7573 cv
cp
.00332647 .360296 .443305 0 cmyk
f
303.286 143.737 mo
304.877 143.653 306.41 143.215 307.731 142.466 cv
307.071 140.734 306.411 139.003 305.75 137.271 cv
305.667 137.052 305.577 136.823 305.396 136.66 cv
305.131 136.42 304.744 136.385 304.397 136.394 cv
303.087 136.428 301.176 136.739 301.618 138.268 cv
302.147 140.095 302.731 141.915 303.286 143.737 cv
cp
.000274662 .466194 .447669 0 cmyk
f
297.896 105.148 mo
295.47 102.476 289.354 100.68 288.925 106.973 cv
288.232 117.105 296.258 129.699 301.225 139.779 cv
306.335 138.341 li
306.328 137.304 299.245 106.634 297.896 105.148 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
317.244 145.202 mo
317.312 144.442 316.591 143.813 315.849 143.636 cv
315.107 143.459 314.332 143.594 313.569 143.585 cv
311.394 143.56 309.281 142.255 308.283 140.323 cv
308.146 140.057 308.013 139.764 307.752 139.617 cv
307.405 139.422 306.955 139.567 306.647 139.82 cv
306.34 140.073 306.122 140.417 305.841 140.699 cv
305.337 141.205 304.618 141.484 303.906 141.474 cv
303.309 141.465 302.641 141.009 302.068 141.311 cv
301.562 141.577 301.426 142.277 301.297 142.777 cv
301.077 143.637 300.876 144.504 300.666 145.367 cv
300.619 145.558 300.574 145.758 300.56 145.955 cv
304.704 145.955 li
304.896 145.683 305.054 144.893 305.136 144.567 cv
305.15 144.902 305.283 145.697 305.495 145.955 cv
316.886 145.955 li
317.082 145.744 317.218 145.488 317.244 145.202 cv
cp
ef
290.458 180.938 mo
292.035 181.168 293.624 181.04 295.066 180.564 cv
294.759 178.737 294.451 176.909 294.143 175.082 cv
294.104 174.851 294.061 174.608 293.916 174.413 cv
293.702 174.126 293.33 174.015 292.988 173.956 cv
291.696 173.732 289.762 173.663 289.896 175.249 cv
290.056 177.144 290.272 179.043 290.458 180.938 cv
cp
.000274662 .466194 .447669 0 cmyk
f
295.527 141.139 mo
293.915 137.909 288.514 134.524 286.396 140.466 cv
282.987 150.033 287.303 164.329 289.355 175.377 cv
294.664 175.377 li
294.938 174.376 296.423 142.934 295.527 141.139 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
287.674 180.199 mo
288.236 179.804 289.657 176.017 290.711 176.466 cv
291.307 176.72 291.341 177.78 291.712 178.248 cv
291.99 178.599 292.768 178.84 293.181 179.018 cv
293.925 177.898 li
296.832 179.059 294.752 182.476 297.67 183.684 cv
298.375 183.975 299.136 184.166 299.751 184.617 cv
300.366 185.067 300.785 185.928 300.428 186.601 cv
300.293 186.854 300.068 187.038 299.806 187.156 cv
290.403 183.191 li
290.403 183.191 290.25 181.339 290.501 181.117 cv
290.196 181.259 289.313 182.5 288.98 182.523 cv
287.674 180.199 li
cp
ef
288.623 105.602 mo
383.294 85.728 li
383.543 85.6758 383.787 85.8354 383.84 86.084 cv
383.892 86.3301 383.736 86.5713 383.492 86.6274 cv
289.227 108.344 li
288.471 108.518 287.718 108.046 287.543 107.291 cv
287.37 106.535 287.841 105.782 288.596 105.608 cv
288.623 105.602 li
cp
.524224 .209232 .123018 .063386 cmyk
f
262.964 111.651 mo
259.456 107.434 257.211 102.18 256.589 96.73 cv
256.477 95.749 256.516 94.5552 257.358 94.041 cv
257.818 93.7607 258.412 93.7773 258.918 93.96 cv
259.425 94.1431 259.863 94.4727 260.289 94.8032 cv
265.25 98.6567 269.634 103.191 274 107.709 cv
275.341 109.097 276.697 110.506 277.642 112.189 cv
278.587 113.872 279.09 115.889 278.597 117.755 cv
278.339 118.732 277.611 120.112 276.552 120.425 cv
275.7 120.677 274.499 119.961 273.751 119.645 cv
271.098 118.521 268.617 116.992 266.417 115.13 cv
265.169 114.073 264.011 112.909 262.964 111.651 cv
cp
.00332647 .360296 .443305 0 cmyk
f
258.409 93.0342 mo
255.594 91.2368 253.932 93.8213 254.189 96.9014 cv
254.725 103.3 257.501 107.714 261.905 112.381 cv
269.638 102.74 li
266.173 98.9653 262.727 95.7915 258.409 93.0342 cv
cp
.576135 .48072 0 0 cmyk
ef
295.972 105.451 mo
296.923 105.702 297.434 106.822 297.308 107.797 cv
297.181 108.772 281.29 119.11 277.992 120.134 cv
276.989 120.446 275.812 120.728 274.959 120.113 cv
274.197 119.565 274.017 118.513 274.02 117.574 cv
274.024 115.998 274.323 114.125 275.162 112.759 cv
275.741 111.817 276.781 111.842 277.741 111.535 cv
281.265 110.405 295.364 105.291 295.972 105.451 cv
cp
.00332647 .360296 .443305 0 cmyk
f
298.142 103.502 mo
298.542 103.248 299.192 103.057 299.386 103.489 cv
299.501 103.747 299.332 104.043 299.129 104.24 cv
298.927 104.436 298.677 104.604 298.574 104.867 cv
298.395 105.319 298.767 105.837 299.226 105.998 cv
299.685 106.158 300.189 106.062 300.666 105.965 cv
301.957 105.701 303.248 105.438 304.539 105.174 cv
305.076 105.065 305.759 105.014 306.044 105.482 cv
306.252 105.824 306.119 106.267 305.947 106.627 cv
305.256 108.074 303.981 109.231 302.475 109.778 cv
300.969 110.325 299.249 110.256 297.791 109.591 cv
296.909 109.188 296.108 108.555 295.649 107.702 cv
294.371 105.323 296.452 104.578 298.142 103.502 cv
cp
f
382.122 256.633 mo
381.561 256.633 li
381.561 86.5196 li
382.122 86.5196 li
382.122 256.633 li
.524224 .209232 .123018 .063386 cmyk
f
404.326 277.094 mo
359.357 277.094 li
359.357 272.583 li
404.326 272.583 li
404.326 277.094 li
.310918 .148836 .209628 .044007 cmyk
f
404.326 272.583 mo
359.357 272.583 li
359.357 264.346 li
364.976 264.346 li
364.976 254.786 li
366.364 254.082 367.935 253.685 369.599 253.685 cv
381.561 253.685 li
381.561 254.294 li
376.425 254.294 li
376.425 256.56 li
381.561 256.56 li
381.561 256.633 li
382.122 256.633 li
382.122 256.56 li
401.198 256.56 li
402.32 257.643 403.195 258.979 403.731 260.477 cv
376.425 260.477 li
376.425 262.744 li
404.259 262.744 li
404.303 263.132 404.326 263.527 404.326 263.927 cv
404.326 272.583 li
397.57 254.294 mo
382.122 254.294 li
382.122 253.685 li
394.084 253.685 li
395.308 253.685 396.482 253.9 397.57 254.294 cv
.449866 .23093 .254582 .138674 cmyk
f
394.084 298.653 mo
369.599 298.653 li
363.942 298.653 359.357 294.068 359.357 288.412 cv
359.357 277.094 li
404.326 277.094 li
404.326 288.412 li
404.326 294.068 399.74 298.653 394.084 298.653 cv
f
364.976 264.346 mo
359.357 264.346 li
359.357 263.927 li
359.357 259.934 361.642 256.475 364.976 254.786 cv
364.976 264.346 li
.310918 .148836 .209628 .044007 cmyk
f
404.259 262.744 mo
376.425 262.744 li
376.425 260.477 li
403.731 260.477 li
403.989 261.199 404.168 261.958 404.259 262.744 cv
401.198 256.56 mo
382.122 256.56 li
382.122 254.294 li
397.57 254.294 li
398.939 254.789 400.172 255.568 401.198 256.56 cv
381.561 256.56 mo
376.425 256.56 li
376.425 254.294 li
381.561 254.294 li
381.561 256.56 li
f
382.122 256.633 mo
381.561 256.633 li
381.561 256.56 li
381.561 254.294 li
381.561 253.685 li
382.122 253.685 li
382.122 254.294 li
382.122 256.56 li
382.122 256.633 li
.619562 .313268 .200992 .187015 cmyk
f
394.084 287.426 mo
369.599 287.426 li
363.942 287.426 359.357 282.84 359.357 277.184 cv
359.357 252.698 li
359.357 247.042 363.942 242.457 369.599 242.457 cv
394.084 242.457 li
399.74 242.457 404.326 247.042 404.326 252.698 cv
404.326 277.184 li
404.326 282.84 399.74 287.426 394.084 287.426 cv
cp
0 .464271 .845518 0 cmyk
f
395.374 260.143 mo
395.374 255.938 391.965 252.528 387.76 252.528 cv
385.369 252.528 383.237 253.631 381.842 255.354 cv
380.445 253.631 378.313 252.528 375.923 252.528 cv
371.718 252.528 368.31 255.938 368.31 260.143 cv
368.31 265.664 377.07 273.993 381.842 277.354 cv
386.758 273.891 395.374 265.567 395.374 260.143 cv
cp
0 0 0 0 cmyk
f
156.257 328.849 mo
156.863 330.693 157.751 332.773 159.405 333.29 cv
160.553 333.647 164.254 331.379 165.062 330.469 cv
165.869 329.558 170.192 285.646 169.073 282.973 cv
167.572 279.387 150.865 284.34 150.506 290.561 cv
150.048 298.514 151.078 306.976 152.615 314.861 cv
153.537 319.595 154.753 324.273 156.257 328.849 cv
cp
.893431 .762142 .201266 .494148 cmyk
ef
127.208 364.827 mo
128.773 365.65 130.528 366.112 132.296 366.165 cv
132.867 364.181 133.438 362.197 134.008 360.213 cv
134.081 359.963 134.153 359.699 134.095 359.445 cv
134.009 359.071 133.667 358.819 133.333 358.631 cv
132.068 357.92 130.043 357.127 129.407 358.799 cv
128.646 360.796 127.942 362.819 127.208 364.827 cv
cp
.000274662 .466194 .447669 0 cmyk
f
159.457 369.611 mo
161.202 369.871 163.013 369.726 164.708 369.189 cv
164.627 367.129 164.546 365.067 164.466 363.007 cv
164.456 362.746 164.442 362.474 164.307 362.253 cv
164.108 361.93 163.704 361.804 163.328 361.737 cv
161.903 361.485 159.732 361.407 159.652 363.195 cv
159.556 365.332 159.524 367.474 159.457 369.611 cv
cp
f
165.567 323.793 mo
163.819 320.145 158.684 317.644 155.448 323.974 cv
150.513 333.626 159.056 351.683 159.016 363.34 cv
165.003 363.34 li
165.334 362.212 166.538 325.817 165.567 323.793 cv
cp
.893431 .762142 .201266 .494148 cmyk
ef
142.737 293.665 mo
144.195 294.813 146.122 294.988 147.93 294.988 cv
162.811 294.988 169.363 291.448 169.363 283.313 cv
169.363 275.98 153.932 277.426 146.977 279.688 cv
145.477 280.176 143.292 280.648 142.268 282.049 cv
140.783 284.078 139.196 290.875 142.737 293.665 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
163.092 245.527 mo
163.576 252.367 164.917 259.375 168.765 265.051 cv
169.594 266.273 170.799 267.543 172.269 267.389 cv
173.128 267.298 173.875 266.707 174.338 265.978 cv
174.802 265.249 175.02 264.393 175.178 263.543 cv
176.425 256.86 174.385 250.049 172.354 243.561 cv
171.517 240.889 170.404 236.158 167.684 234.717 cv
164.85 233.216 163.424 237.853 163.164 239.743 cv
162.901 241.657 162.956 243.604 163.092 245.527 cv
cp
.000274662 .466194 .447669 0 cmyk
f
162.765 235.809 mo
162.896 234.678 163.198 233.344 164.249 232.851 cv
165.357 232.33 166.546 233.09 167.408 233.863 cv
172.632 238.55 174.612 245.165 175.56 252.265 cv
163.032 253.038 li
162.196 247.385 162.101 241.578 162.765 235.809 cv
cp
0 .464271 .845518 0 cmyk
ef
144.002 328.849 mo
144.505 330.693 145.278 332.773 146.904 333.29 cv
148.031 333.647 150.452 328.992 151.31 328.081 cv
152.168 327.171 160.476 292.718 159.505 290.044 cv
158.204 286.458 154.938 284.136 151.58 283.601 cv
146.7 282.824 141.085 284.34 140.381 290.561 cv
139.48 298.514 140.039 306.976 141.138 314.861 cv
141.797 319.595 142.753 324.273 144.002 328.849 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
180.196 264.007 mo
180.549 264.795 180.183 265.758 179.549 266.344 cv
178.916 266.931 174.511 269.004 170.187 267.092 cv
168.011 266.129 167.681 264.033 168.444 262.043 cv
169.506 259.273 179.778 263.074 180.196 264.007 cv
cp
.00332647 .360296 .443305 0 cmyk
f
152.404 325.11 mo
152.276 321.206 147.953 316.64 142.779 321.924 cv
134.45 330.434 132.015 346.665 128.768 358.728 cv
134.417 360.71 li
135.2 359.789 152.475 327.281 152.404 325.11 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
139.721 260.679 mo
137.691 254.164 135.198 246.118 136.322 239.307 cv
139.08 235.94 144.719 228.125 155.9 228.125 cv
163.743 228.125 169.615 236.044 170.976 238.057 cv
172.492 240.299 171.941 243.494 171.563 246.088 cv
170.758 251.616 168.365 273.337 170.444 288.414 cv
138.775 288.414 li
138.836 281.224 141.767 267.243 139.721 260.679 cv
cp
0 .464271 .845518 0 cmyk
ef
132.435 252.758 mo
134.004 246.775 137.353 241.271 141.944 237.126 cv
142.771 236.381 143.892 235.633 144.916 236.069 cv
145.475 236.308 145.848 236.863 146.013 237.448 cv
146.177 238.032 146.162 238.651 146.138 239.258 cv
145.855 246.336 144.569 253.331 143.287 260.298 cv
142.893 262.438 142.49 264.606 141.565 266.577 cv
140.641 268.547 139.12 270.331 137.084 271.103 cv
136.019 271.506 134.276 271.743 133.294 270.977 cv
132.504 270.36 132.374 268.789 132.174 267.896 cv
131.465 264.725 131.241 261.446 131.507 258.208 cv
131.658 256.369 131.967 254.543 132.435 252.758 cv
cp
.000274662 .466194 .447669 0 cmyk
f
130.657 255.007 mo
130.641 255.14 li
130.657 255.007 li
cp
.762966 .152529 .372473 .202121 cmyk
ef
146.337 235.809 mo
146.278 234.678 146.06 233.344 145.04 232.851 cv
143.964 232.33 141.966 233.312 141.055 234.085 cv
135.536 238.771 132.465 245.165 131.071 252.265 cv
144.986 253.038 li
146.177 247.385 146.638 241.578 146.337 235.809 cv
cp
0 .464271 .845518 0 cmyk
ef
159.042 220.285 mo
158.276 216.905 155.718 216.113 154.231 216.925 cv
153.278 223.252 152.307 226.064 149.827 229.516 cv
152.91 231.492 158.174 231.124 159.312 229.516 cv
159.357 229.008 159.438 222.033 159.042 220.285 cv
cp
.000274662 .466194 .447669 0 cmyk
f
158.875 212.35 mo
161.936 210.232 166.342 212.069 166.978 215.984 cv
167.56 219.568 163.956 225.719 162.246 226.717 cv
159.257 228.461 155.237 224.273 155.097 222.264 cv
154.891 219.321 156.301 214.129 158.875 212.35 cv
cp
.00332647 .360296 .443305 0 cmyk
f
156.697 213.102 mo
156.46 212.941 156.137 212.959 155.874 213.073 cv
155.611 213.188 155.396 213.386 155.185 213.58 cv
154.469 214.242 153.748 214.909 153.182 215.703 cv
152.616 216.496 152.21 217.436 152.209 218.41 cv
152.208 219.043 152.372 219.699 152.155 220.293 cv
151.961 220.825 151.467 221.314 151.615 221.861 cv
151.725 222.268 152.188 222.507 152.606 222.462 cv
153.024 222.416 153.388 222.144 153.653 221.817 cv
153.918 221.49 154.103 221.108 154.317 220.746 cv
155.029 219.545 156.066 218.565 156.807 217.381 cv
157.546 216.197 157.959 214.643 157.29 213.417 cv
156.697 213.102 li
cp
.901671 .773953 .191257 .476265 cmyk
ef
170.899 214.684 mo
170.238 214.416 169.577 214.148 168.917 213.881 cv
169.22 214.257 169.532 214.648 169.651 215.117 cv
169.771 215.585 169.64 216.154 169.223 216.398 cv
168.898 216.588 168.478 216.538 168.143 216.366 cv
167.809 216.194 167.543 215.917 167.284 215.646 cv
167.42 215.897 167.559 216.162 167.561 216.449 cv
167.563 216.735 167.375 217.045 167.091 217.076 cv
166.865 217.102 166.66 216.952 166.48 216.812 cv
165.583 216.104 164.686 215.397 163.789 214.69 cv
163.842 214.972 163.895 215.26 163.849 215.542 cv
163.804 215.824 163.639 216.105 163.373 216.21 cv
162.905 216.395 162.424 215.978 162.14 215.563 cv
161.855 215.148 161.56 214.65 161.063 214.575 cv
160.504 214.492 160.047 214.992 159.705 215.441 cv
159.521 215.684 li
158.893 216.511 158.263 217.339 157.634 218.167 cv
157.442 218.42 157.244 218.679 156.981 218.857 cv
156.718 219.037 156.374 219.128 156.076 219.014 cv
155.569 218.819 150.088 210.733 157.102 208.264 cv
158.117 207.906 159.55 208.303 160.577 208.625 cv
161.604 208.948 162.575 209.461 163.634 209.651 cv
164.473 209.802 165.336 209.744 166.185 209.829 cv
168.56 210.064 170.837 212.241 170.899 214.684 cv
cp
ef
153.448 216.397 mo
153.131 217.189 153.139 218.105 153.468 218.893 cv
154.412 221.143 156.618 219.125 156.725 217.495 cv
156.853 215.554 154.309 214.244 153.448 216.397 cv
cp
.00332647 .360296 .443305 0 cmyk
f
175.86 372.64 mo
175.937 371.783 175.124 371.073 174.288 370.874 cv
173.451 370.675 172.576 370.826 171.716 370.816 cv
169.264 370.788 166.881 369.317 165.756 367.138 cv
165.602 366.838 165.452 366.507 165.158 366.342 cv
164.766 366.122 164.259 366.286 163.912 366.57 cv
163.564 366.855 163.319 367.244 163.002 367.563 cv
162.434 368.132 161.623 368.447 160.82 368.436 cv
160.147 368.426 159.394 367.912 158.748 368.252 cv
158.177 368.552 158.023 369.342 157.879 369.905 cv
157.63 370.875 157.404 371.853 157.167 372.826 cv
157.114 373.041 157.063 373.267 157.046 373.488 cv
161.72 373.488 li
161.938 373.183 162.114 372.291 162.208 371.924 cv
162.223 372.302 162.373 373.197 162.612 373.488 cv
175.457 373.488 li
175.678 373.251 175.832 372.962 175.86 372.64 cv
cp
.893431 .762142 .201266 .494148 cmyk
ef
133.354 370.192 mo
133.669 369.396 133.567 368.607 133.286 368.298 cv
133.005 367.987 132.939 366.442 132.917 364.208 cv
132.906 363.186 131.164 362.289 129.702 363.53 cv
129.228 363.933 128.837 364.165 128.508 364.037 cv
128.232 363.93 128.089 363.335 127.709 363.562 cv
127.373 363.762 127.048 364.484 126.801 364.995 cv
126.376 365.874 125.959 366.764 125.539 367.647 cv
125.446 367.843 125.35 368.048 125.27 368.255 cv
132.905 370.935 li
133.076 370.742 133.235 370.492 133.354 370.192 cv
cp
.900969 .57409 .210941 .487282 cmyk
ef
155.114 273.277 mo
174.113 273.277 li
175.237 273.277 176.404 272.366 176.718 271.242 cv
185.078 241.387 li
185.393 240.263 184.736 239.352 183.612 239.352 cv
164.614 239.352 li
163.489 239.352 162.323 240.263 162.008 241.387 cv
153.649 271.242 li
153.334 272.366 153.99 273.277 155.114 273.277 cv
cp
.291936 .13257 .162387 .0282902 cmyk
f
153.649 271.242 mo
162.008 241.387 li
162.323 240.263 163.489 239.352 164.614 239.352 cv
166.64 239.352 li
165.515 239.352 164.349 240.263 164.034 241.387 cv
155.675 271.242 li
155.36 272.366 156.016 273.277 157.14 273.277 cv
155.114 273.277 li
153.99 273.277 153.334 272.366 153.649 271.242 cv
cp
.745327 .385351 .1178 .138094 cmyk
f
156.363 264.418 mo
157.293 265.021 157.447 266.401 156.968 267.401 cv
156.489 268.401 140.331 272.318 136.438 272.255 cv
135.253 272.235 133.892 272.122 133.195 271.164 cv
132.573 270.309 132.75 269.117 133.083 268.113 cv
133.644 266.427 134.624 264.525 136.003 263.357 cv
136.955 262.552 155.768 264.032 156.363 264.418 cv
cp
.00332647 .360296 .443305 0 cmyk
f
162.194 261.56 mo
162.583 261.019 162.977 260.272 162.58 259.736 cv
162.316 259.382 161.794 259.31 161.373 259.442 cv
160.951 259.576 160.604 259.872 160.261 260.151 cv
159.798 260.529 159.292 260.902 158.7 260.986 cv
158.108 261.071 157.418 260.762 157.279 260.181 cv
157.126 259.546 157.622 258.745 157.154 258.288 cv
156.909 258.049 156.496 258.064 156.196 258.23 cv
155.896 258.397 155.683 258.682 155.479 258.957 cv
154.394 260.422 153.284 261.938 152.848 263.707 cv
152.413 265.477 152.817 267.583 154.296 268.648 cv
155.618 269.6 157.569 269.458 158.843 268.442 cv
159.93 267.574 160.346 266.332 160.488 265 cv
160.644 263.539 161.307 262.794 162.194 261.56 cv
cp
f
181.213 260.044 mo
181.143 259.84 181.03 256.578 180.862 256.442 cv
180.556 256.193 179.411 260.031 179.647 260.348 cv
178.818 260.259 178.57 260.232 177.741 260.145 cv
177.138 260.08 176.349 260.129 176.167 260.707 cv
176.021 261.169 176.39 261.613 176.647 262.023 cv
177.104 262.754 176.432 267.016 176.788 267.378 cv
178.106 268.716 180.994 266.396 181.475 265.09 cv
182.143 263.278 181.811 261.785 181.213 260.044 cv
cp
f
603.779 116.623 mo
556.898 116.623 li
554.446 116.623 552.458 118.611 552.458 121.063 cv
552.458 142.125 li
552.458 144.578 554.446 146.565 556.898 146.565 cv
584.462 146.565 li
595.878 157.982 li
595.878 146.565 li
603.779 146.565 li
606.23 146.565 608.219 144.578 608.219 142.125 cv
608.219 121.063 li
608.219 118.611 606.23 116.623 603.779 116.623 cv
cp
.399542 .323766 0 0 cmyk
f
581.393 136.819 mo
567.315 136.819 li
566.607 136.819 566.033 137.393 566.033 138.102 cv
566.033 138.81 566.607 139.384 567.315 139.384 cv
581.393 139.384 li
582.101 139.384 582.675 138.81 582.675 138.102 cv
582.675 137.393 582.101 136.819 581.393 136.819 cv
cp
593.361 132.481 mo
567.315 132.481 li
566.607 132.481 566.033 133.055 566.033 133.763 cv
566.033 134.472 566.607 135.046 567.315 135.046 cv
593.361 135.046 li
594.069 135.046 594.644 134.472 594.644 133.763 cv
594.644 133.055 594.069 132.481 593.361 132.481 cv
cp
593.361 128.143 mo
567.315 128.143 li
566.607 128.143 566.033 128.717 566.033 129.425 cv
566.033 130.133 566.607 130.708 567.315 130.708 cv
593.361 130.708 li
594.069 130.708 594.644 130.133 594.644 129.425 cv
594.644 128.717 594.069 128.143 593.361 128.143 cv
cp
567.315 126.369 mo
593.361 126.369 li
594.069 126.369 594.644 125.795 594.644 125.087 cv
594.644 124.378 594.069 123.804 593.361 123.804 cv
567.315 123.804 li
566.607 123.804 566.033 124.378 566.033 125.087 cv
566.033 125.795 566.607 126.369 567.315 126.369 cv
cp
.0380255 .0268559 .0680552 0 cmyk
f
540.916 152.945 mo
575.005 152.945 li
576.788 152.945 578.233 154.39 578.233 156.173 cv
578.233 171.488 li
578.233 173.271 576.788 174.717 575.005 174.717 cv
554.963 174.717 li
546.661 183.018 li
546.661 174.717 li
540.916 174.717 li
539.134 174.717 537.688 173.271 537.688 171.488 cv
537.688 156.173 li
537.688 154.39 539.134 152.945 540.916 152.945 cv
cp
.399542 .323766 0 0 cmyk
f
556.262 168.563 mo
556.262 169.078 556.68 169.495 557.194 169.495 cv
567.431 169.495 li
567.945 169.495 568.362 169.078 568.362 168.563 cv
568.362 168.047 567.945 167.63 567.431 167.63 cv
557.194 167.63 li
556.68 167.63 556.262 168.047 556.262 168.563 cv
cp
547.559 165.408 mo
547.559 165.408 li
547.559 165.923 547.977 166.34 548.491 166.34 cv
567.431 166.34 li
567.945 166.34 568.362 165.923 568.362 165.408 cv
568.362 164.893 567.945 164.476 567.431 164.476 cv
548.491 164.476 li
547.977 164.476 547.559 164.893 547.559 165.408 cv
cp
547.559 162.253 mo
547.559 162.769 547.977 163.186 548.491 163.186 cv
567.431 163.186 li
567.945 163.186 568.362 162.769 568.362 162.253 cv
568.362 161.738 567.945 161.321 567.431 161.321 cv
548.491 161.321 li
547.977 161.321 547.559 161.738 547.559 162.253 cv
cp
568.362 159.099 mo
568.362 158.584 567.945 158.167 567.431 158.167 cv
548.491 158.167 li
547.977 158.167 547.559 158.584 547.559 159.099 cv
547.559 159.614 547.977 160.031 548.491 160.031 cv
567.431 160.031 li
567.945 160.031 568.362 159.614 568.362 159.099 cv
cp
.0380255 .0268559 .0680552 0 cmyk
f
594.453 186.041 mo
567.331 186.041 li
565.912 186.041 564.762 187.19 564.762 188.609 cv
564.762 200.795 li
564.762 202.213 565.912 203.363 567.331 203.363 cv
583.277 203.363 li
589.883 209.968 li
589.883 203.363 li
594.453 203.363 li
595.872 203.363 597.021 202.213 597.021 200.795 cv
597.021 188.609 li
597.021 187.19 595.872 186.041 594.453 186.041 cv
cp
.399542 .323766 0 0 cmyk
f
581.502 197.725 mo
573.357 197.725 li
572.948 197.725 572.615 198.057 572.615 198.467 cv
572.615 198.876 572.948 199.208 573.357 199.208 cv
581.502 199.208 li
581.911 199.208 582.243 198.876 582.243 198.467 cv
582.243 198.057 581.911 197.725 581.502 197.725 cv
cp
588.427 195.215 mo
573.357 195.215 li
572.948 195.215 572.615 195.547 572.615 195.957 cv
572.615 196.367 572.948 196.699 573.357 196.699 cv
588.427 196.699 li
588.836 196.699 589.168 196.367 589.168 195.957 cv
589.168 195.547 588.836 195.215 588.427 195.215 cv
cp
588.427 192.705 mo
573.357 192.705 li
572.948 192.705 572.615 193.037 572.615 193.447 cv
572.615 193.856 572.948 194.189 573.357 194.189 cv
588.427 194.189 li
588.836 194.189 589.168 193.856 589.168 193.447 cv
589.168 193.037 588.836 192.705 588.427 192.705 cv
cp
573.357 191.679 mo
588.427 191.679 li
588.836 191.679 589.168 191.347 589.168 190.937 cv
589.168 190.527 588.836 190.195 588.427 190.195 cv
573.357 190.195 li
572.948 190.195 572.615 190.527 572.615 190.937 cv
572.615 191.347 572.948 191.679 573.357 191.679 cv
cp
.0380255 .0268559 .0680552 0 cmyk
f
570.454 44.2661 mo
506.909 44.2661 li
503.585 44.2661 500.892 46.9604 500.892 50.2842 cv
500.892 78.8335 li
500.892 82.1572 503.585 84.8511 506.909 84.8511 cv
544.271 84.8511 li
559.745 100.326 li
559.745 84.8511 li
570.454 84.8511 li
573.777 84.8511 576.472 82.1572 576.472 78.8335 cv
576.472 50.2842 li
576.472 46.9604 573.777 44.2661 570.454 44.2661 cv
cp
0 .464271 .845518 0 cmyk
f
540.109 71.6411 mo
521.029 71.6411 li
520.069 71.6411 519.291 72.4194 519.291 73.3794 cv
519.291 74.3394 520.069 75.1177 521.029 75.1177 cv
540.109 75.1177 li
541.069 75.1177 541.848 74.3394 541.848 73.3794 cv
541.848 72.4194 541.069 71.6411 540.109 71.6411 cv
cp
556.333 65.7607 mo
521.029 65.7607 li
520.069 65.7607 519.291 66.5391 519.291 67.499 cv
519.291 68.459 520.069 69.2373 521.029 69.2373 cv
556.333 69.2373 li
557.293 69.2373 558.071 68.459 558.071 67.499 cv
558.071 66.5391 557.293 65.7607 556.333 65.7607 cv
cp
556.333 59.8804 mo
521.029 59.8804 li
520.069 59.8804 519.291 60.6587 519.291 61.6187 cv
519.291 62.5786 520.069 63.3569 521.029 63.3569 cv
556.333 63.3569 li
557.293 63.3569 558.071 62.5786 558.071 61.6187 cv
558.071 60.6587 557.293 59.8804 556.333 59.8804 cv
cp
521.029 57.4766 mo
556.333 57.4766 li
557.293 57.4766 558.071 56.6982 558.071 55.7383 cv
558.071 54.7783 557.293 54 556.333 54 cv
521.029 54 li
520.069 54 519.291 54.7783 519.291 55.7383 cv
519.291 56.6982 520.069 57.4766 521.029 57.4766 cv
cp
.0380255 .0268559 .0680552 0 cmyk
f
485.246 93.4985 mo
531.452 93.4985 li
533.869 93.4985 535.828 95.4575 535.828 97.874 cv
535.828 118.633 li
535.828 121.05 533.869 123.009 531.452 123.009 cv
504.285 123.009 li
493.033 134.261 li
493.033 123.009 li
485.246 123.009 li
482.83 123.009 480.871 121.05 480.871 118.633 cv
480.871 97.874 li
480.871 95.4575 482.83 93.4985 485.246 93.4985 cv
cp
.0108949 .172457 .784787 0 cmyk
f
494.25 114.667 mo
494.25 115.366 494.815 115.932 495.514 115.932 cv
509.388 115.932 li
510.086 115.932 510.652 115.366 510.652 114.667 cv
510.652 113.969 510.086 113.403 509.388 113.403 cv
495.514 113.403 li
494.815 113.403 494.25 113.969 494.25 114.667 cv
cp
494.25 110.392 mo
494.25 110.392 li
494.25 111.09 494.815 111.656 495.514 111.656 cv
521.185 111.656 li
521.883 111.656 522.449 111.09 522.449 110.392 cv
522.449 109.693 521.883 109.128 521.185 109.128 cv
495.514 109.128 li
494.815 109.128 494.25 109.693 494.25 110.392 cv
cp
494.25 106.116 mo
494.25 106.814 494.815 107.38 495.514 107.38 cv
521.185 107.38 li
521.883 107.38 522.449 106.814 522.449 106.116 cv
522.449 105.418 521.883 104.852 521.185 104.852 cv
495.514 104.852 li
494.815 104.852 494.25 105.418 494.25 106.116 cv
cp
522.449 101.84 mo
522.449 101.142 521.883 100.576 521.185 100.576 cv
495.514 100.576 li
494.815 100.576 494.25 101.142 494.25 101.84 cv
494.25 102.538 494.815 103.104 495.514 103.104 cv
521.185 103.104 li
521.883 103.104 522.449 102.538 522.449 101.84 cv
cp
.0380255 .0268559 .0680552 0 cmyk
f
678.018 54.5767 mo
669.607 54.5767 li
667.943 54.5767 666.635 53.1553 666.771 51.4971 cv
667.245 45.7144 li
667.269 45.4287 667.249 45.1416 667.187 44.8618 cv
665.628 37.877 li
665.338 36.5752 664.184 35.6499 662.85 35.6499 cv
661.277 35.6499 660.003 36.9243 660.003 38.4966 cv
660.003 44.4224 li
660.003 45.0269 659.811 45.6162 659.453 46.104 cv
652.79 55.2065 li
652.433 55.6943 652.24 56.2832 652.24 56.8882 cv
652.24 71.5498 li
652.24 72.5786 652.795 73.5273 653.692 74.0317 cv
658.868 76.9399 li
659.294 77.1792 659.774 77.3047 660.263 77.3047 cv
672.404 77.3047 li
673.577 77.3047 674.631 76.585 675.057 75.4922 cv
680.67 61.1001 li
680.799 60.7705 680.865 60.4194 680.865 60.0654 cv
680.865 57.4238 li
680.865 55.8511 679.59 54.5767 678.018 54.5767 cv
cp
648.396 52.6797 mo
639.721 52.6797 li
638.148 52.6797 636.874 53.9541 636.874 55.5264 cv
636.874 73.2021 li
636.874 74.7744 638.148 76.0488 639.721 76.0488 cv
648.396 76.0488 li
649.968 76.0488 651.243 74.7744 651.243 73.2021 cv
651.243 55.5264 li
651.243 53.9541 649.968 52.6797 648.396 52.6797 cv
cp
.0674754 .099031 0 0 cmyk
f
657.021 87.8579 mo
653.396 87.8579 li
652.678 87.8579 652.113 87.2451 652.172 86.5298 cv
652.377 84.0371 li
652.387 83.9136 652.378 83.79 652.352 83.6694 cv
651.68 80.6577 li
651.555 80.0967 651.057 79.6978 650.481 79.6978 cv
649.804 79.6978 649.254 80.2471 649.254 80.9253 cv
649.254 83.48 li
649.254 83.7407 649.171 83.9946 649.018 84.2051 cv
646.145 88.1294 li
645.99 88.3398 645.907 88.5938 645.907 88.8545 cv
645.907 95.1753 li
645.907 95.6191 646.146 96.0283 646.533 96.2456 cv
648.765 97.4995 li
648.948 97.6025 649.155 97.6567 649.366 97.6567 cv
654.602 97.6567 li
655.106 97.6567 655.561 97.3467 655.745 96.8755 cv
658.165 90.6704 li
658.221 90.5283 658.249 90.377 658.249 90.2241 cv
658.249 89.0854 li
658.249 88.4072 657.699 87.8579 657.021 87.8579 cv
cp
644.25 87.04 mo
640.51 87.04 li
639.832 87.04 639.282 87.5894 639.282 88.2676 cv
639.282 95.8877 li
639.282 96.5659 639.832 97.1152 640.51 97.1152 cv
644.25 97.1152 li
644.928 97.1152 645.478 96.5659 645.478 95.8877 cv
645.478 88.2676 li
645.478 87.5894 644.928 87.04 644.25 87.04 cv
cp
f
628.361 62.9507 mo
623.498 62.9507 li
622.535 62.9507 621.778 62.1289 621.856 61.1694 cv
622.131 57.8252 li
622.145 57.6602 622.133 57.4941 622.097 57.3325 cv
621.196 53.2925 li
621.028 52.54 620.36 52.0044 619.589 52.0044 cv
618.68 52.0044 617.942 52.7417 617.942 53.6509 cv
617.942 57.0781 li
617.942 57.4277 617.831 57.7686 617.625 58.0508 cv
613.771 63.3149 li
613.564 63.5972 613.453 63.9375 613.453 64.2876 cv
613.453 72.7666 li
613.453 73.3618 613.774 73.9106 614.293 74.2021 cv
617.286 75.8843 li
617.532 76.0225 617.811 76.0952 618.093 76.0952 cv
625.115 76.0952 li
625.793 76.0952 626.402 75.6792 626.648 75.0469 cv
629.896 66.7236 li
629.97 66.5327 630.008 66.3296 630.008 66.125 cv
630.008 64.5972 li
630.008 63.688 629.271 62.9507 628.361 62.9507 cv
cp
611.229 61.8535 mo
606.213 61.8535 li
605.304 61.8535 604.566 62.5908 604.566 63.5 cv
604.566 73.7222 li
604.566 74.6318 605.304 75.3691 606.213 75.3691 cv
611.229 75.3691 li
612.14 75.3691 612.876 74.6318 612.876 73.7222 cv
612.876 63.5 li
612.876 62.5908 612.14 61.8535 611.229 61.8535 cv
cp
f
450.884 302.516 mo
449.209 297.532 442.936 295.45 439.9 291.081 cv
436.403 286.048 438.153 279.006 442.242 274.613 cv
442.505 274.331 462.624 242.67 481.587 257.41 cv
487.076 261.678 489.07 276.775 489.48 283.501 cv
490.107 293.797 490.734 304.092 491.361 314.387 cv
492.184 327.887 479.212 337.618 465.234 334.005 cv
459.439 332.508 450.304 327.992 448.291 322.175 cv
445.906 315.286 453.171 309.327 450.884 302.516 cv
cp
.3299 .324437 0 0 cmyk
f
469.09 374.846 mo
467.497 374.758 li
468.173 287.568 li
469.765 287.656 li
469.09 374.846 li
cp
.0674754 .099031 0 0 cmyk
f
468.631 298.299 mo
454.5 285.306 li
455.65 284.342 li
468.934 296.556 li
481.856 290.27 li
482.627 291.49 li
468.631 298.299 li
cp
f
468.46 315.797 mo
452.284 311.358 li
452.759 310.025 li
468.439 314.328 li
482.425 310.167 li
482.936 311.488 li
468.46 315.797 li
cp
f
461.28 313.529 mo
457.937 305.007 li
459.44 304.553 li
462.784 313.074 li
461.28 313.529 li
cp
f
477.746 293.487 mo
476.157 293.419 li
476.604 285.544 li
478.191 285.613 li
477.746 293.487 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (User) ()
%%Title: (54_1_255_01.eps)
%%CreationDate: 11/21/2018 2:29 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj2KIpGi)`T'Mj65^&,ZHEHI5PLs]k7&*TmZQ"QuM$Sb\1V$lj5PoMfWpU'WgDTSb*),![f66kaMWVa->dN%\ef#pHk24?"
%dkEOMNb`/fI,c,prpep_MqW($\[#5/=m;K4NUBQR=U@0\I'_[GGEt&\?faahX*atMb*`cK^#&Z;PH1$#B@&$YE">ULH<=pjccb.'
%a;P2g&#o0T%eP>Rn@aEl1b/0)2;Ec^@<LTMY'9)e4JWL7@CHV;KNV#S;1@iKX5n#]1Ifs'*6WB\NFhmND8@1?Z45982hnPR:LrU2
%T:2(eX?SRrQcVBJI5-e8/PmMkJ^DHG9SoO331>br9huZKG(tRAZXoTPfeT\.Z]rnX/jalENt]-sbn/d;%Em&@IG,-+C7T7SgoWFQ
%?`7J=+da*n@B7Tg!(js:rlr9u9HcMNpZc%];C68bDnGTYSpS)'O:Lpr)1su>nB1e+'2i5rhi`irj(9+biHm(bB,mLUB;^9$=PQ.Y
%)5)ols3(l,idp6*Oi6j7ZZTSlT65mG(Uhs,cWg'_2^Augb?6d1AC4'@K5M*<71F*jQX&:k=rC+<n,_FH<jC#+5AT4bbF'/T\JhoA
%C^0:p?L<4bK+cbo(kr+\p?H)`D55[9V$_hMbbV@Q26=.RWU?U/)9"=%3-nUWp<2ieYRB18XS7fHbD<F7p:>I^=oK/E4*j0lE4ZiC
%p7(MaTrnJCE\^Z2ACZpYbkS'9\Hm:9XX&,`QoG(hf)nZVg^\#CG.VoqCFfRqKj'!h>]85oYsp`5Q4pMXlPcE6B)Dkj9%WRGkZ+f)
%B[H.$%?6*V*TjijE=F/)[ARWl5OG!`29IePU#fj]aEY51*2l<$;!sVMCg4a[-N0LWrT]R:)t7LppacP3q`[4,o,;AuphJQ.e[G"J
%D=c:UM7Rae+g@@Gpdka--3Q4?U/]QnqED@XI;Ir]+*I=+D!(WI%,^#"2Tt9g=[%mPo6J!3cXWGB$*TXe6;[DS#of+$gkcil9BHuZ
%S9u'`lKbkfh=1Z<+^Xr&bn)Of/RLl@n/9t';YWqqCN=B,`!`4-'-`.V3#!$aLIS*/R;g2*#Y)IG<i.=L!1P-Hpl'&^-%otbdGgSB
%9M6]I5''fFSe9oBoBLRL>.eI4DSgnU$us3u*/YWUR.E2S3.-A'&4auZ-4P/g*:Xn2+bD6MpoG6l+FM1@La,)>1KdtM\@_m5;p,4o
%?;$Gn*A<OhO3O&:RPp*f,=%1MV=Dbl[UpI;d=9dQ&_&Rn#Z>ldS1c+Ipl*I"ee(EL$[9U'CkE![G:ho[PF-_[#>;WDB.YrDmV),A
%1+X,C8Mk@RqRf"h4jV?jUW%#gB`*,NfM'W;_t*kUSc@4!=]&>-RJ0At*hl&P/BY6kF!'VK[5ZYm9rqG-=OOSe`0*[I@qjA[+*1Z8
%3p$XL8X#@La!B'UeP"ILo>'/31_'<!=(NjUok.ET.=UACa5PA7/,qnZf4@eVb(!=[kP1>B4HD^R?8T9lrdoYR`NT3+bOOcjQ2dM(
%Ttm>rQ2c_1rZ&]DT+V#N4-)MBBBCjset;^PEO;7Kj-F(PTO4j$O9*&C+24aF5mi&_q!eHWR!OZbCnlK9A5e.#0"io/LT_A@qe&j2
%"k2U8Vq<q%_=6K..,+i0"$[jD..sc/5BK!T?Ehr#-82r<%9lCQn)pgcQ[E1bId;VK(<g4h:YCL^%<(QJ*k_?[!-'Y/\\+=<nq^@E
%iE,BD3g)&))ESat:<s(7S++bI#I$o#nDQ/iIFVq[::be$3/L*f1fG'8-dprt!uS2&@$Eag3'f&PE)em0&-%5H_I@qIJ3f*9qI^]n
%7O[$eTjj5N<T-]2p@:X_*uYi(U*A,1ad<Hnbe3]`4U*A&`loA9BH-GbI2?a(i$gCB6k0<*]ut@j^+.9h$qKsNPm!Zkc9>_&o`X!8
%os;W73F0gkZD^f8_0RBR-+G?aUD9)%Bhjg[=9nDel!iTs?@_H/('C0s#"6G<!eY1FF'#406\ZrE&ENpK2$\X_)]'Uk1oRM\cI#mO
%CVtK4heRLJgeh&tBsa3cBFpLHLP)O\NN4gC<O*m.Z2i2sQ9&B4#L23nn(F-4--m%a21@sIM'>u2Ypl[Xita&J.E/T0&kX(9(bmc^
%VM@fbF7=-[0lI^d]E27GY"ED7$!5'@`V1oA/>.eZ8t8DT"lcsAknPY)+;J@C:j5VNP,]^J7\,TQB:Ogo30!5pHkZZ=O-q@lYn3:R
%KP->MJJgTu+9[M4!I".+(aWEe+Afn9F=>s6>'?Q5G!m<#-C.i+%kULF1D$#DlG6-T59sik_A_KP=<7;aWV9#BHmX2<c/"2#,ped<
%PCsYS6o+f%,GD=qMa7^QM\k+eI2*&8$fkrJRC>:4QuH=_T&g9F'//6aR7P7&?SPRGeI==a4@l'/-7N<l.iXcSLFeV4j.)8K#J@F$
%<m_J5+;P;jRF8EpGP,2R.oKK80I:_$](iS\s3U((&s(:k(.4S07@=H@i&/>S>Sj1K6El&"TR'=#3[>=O9k-X\6SW$SC(^/&(Y>?[
%Ri.!SIY)9:M[;p`K(<e`@,9ePA-ca\O]Z?q3/j$ffR/lV'M/eUf!#0BjcRcsaIY,=Ho8[(cS8.)M$t,%=2RI1n:SC_8<`/SpurNT
%=`>'L+9IDq_59!=pE]1J>s"\-9`g5dUR8#4/^"?$=sHg]JJ;/4AU@TW`dqbR%8&l:"kqZa1]5lV]0Tb#6cR^%6O=o'9b3.1?a>',
%\2LM+F^,1/-_$*ET[[6IZi'ERBV^mCUXap4TZ+6bZCqa@Nlb)\>=klu`g8[r.s,2,ho2An?XPd!c0D&l_'f6KO*Hoc]8q3p/B[[t
%rNR*DZ7id3FpNLV<m(b'$a$/7<^M)iR$L.Y.;D!i_Xp"<[LIka`]4jOUE8cYdDrK>7(,jrC_[\E[<G?>jWnZ:;JEEp+Q5r9Zp0U?
%dpVY1ik00ek%oSZ>M9:q@Wb5q!h"bGa\0b%pg1k%%nsq<5XCN<K(eAd=An^S4"!P$,AOO<BX6#J-fZ(6apm!KOQdlG10R(,9XR"'
%#63Ym7a]J+%e-jH%n+Sh`h3'8'?kOM<5r=a'/!R<`TFrk=0jIIPcZ2!&d_6r/a*2f]9pj:&OXS"F0t^i%\-9h"^dBTd6SV:%Mq4[
%_K049n,jOUJ8nm[Qla7dQpQWNfKB6ZiG\i[ZMQ,s\@<mH<F2th$omcEU*(otCE3<V7'kOo!*<Eb?lU5L[cJre6?]#Ji%+C$>Z-^[
%_JoGlBcK'k]BVodB;KIh3orP)3`)RGQnm;<pgjq6LeYDSA;IBb.rhAY+tFPa%jm5d1:)RA.>kHN5,>n3J09E+U&M%Eh*;f<&6DSS
%jE(5:?]jf.++K;k).8aP4)#p:B$bu9=-^"=*d`;MS?N,HD(7"#B2d?T830;]_DY4SOJIV/)G1*+a!c0BE?,*52_^+Y0jrQ)i&s?r
%//&,O:3d]a^pNFdg#J1<kZ=*!GgP+Hdlar',rL4VCg<4hPZ3qN"@Ve2=X8Jb<sVng3gN53U8(mNi8GB$>t&-uMIN'<N\,?t(=QLr
%%R5%LQjc`I.L[YhM7jDi<[VOEBb9rS82$(fB\kF&!=!4[Oi:F&[!Kdo9:*:d.Po/+,VQ)0lT'5n$4neKN)Ec3]ah`(V-g#u=sF6"
%:7r$'HCIte@3<^J$0TclM'$EN;*NbTRWS0Wb&d)gZ>#s$;Um=d#ZY#@UMrF0fkBMn3b2/d/<UF'YrmgVCsJ[WZO%jJC@(1I)V@GI
%'L0L9_6/A)LYW2\=BEK/i+7j5er9/VS5Zc%E<lTW5:'cTAI7C3/;Lf;PXjJ3(RT1KF[19<X9&]b[#^$Cr&r[ZP@0.9mtm.!0/S3Q
%8t,GfF-X,ZTI)'/QZ2duOc`X1$EU+=.85i4a=F.,,DBXd$2dm5QkRWjH\mOS9XAMrDOPYQd?55QFj\ZoU.P]to!Y\j7M];XKTUuY
%>iJr&@0EF%,W<28UG'?EU\+,>0ipYVK(#t;nrgLtB'$G[g2&`*D+[tUKsEU?b#k[rY!fQ,)/)b3jJro_^lsK)BUE[JV?\DER5A)Q
%^pq"=8LAMoE_^%n(L,k4RYn!IlkeCT#;.YbcD&81%>pC*-(;Q(RQP2DoI3sXFMUc8_2ON'BJ](\J'UX?eak,i&&+?%8V0ieRJ28"
%`&IkVlH:"-l_/k$=^nTl`!p#?P6E>s.f[d;JZ_<q3`L.;=-!r5I26on3f\(0r%\V<UP^kWr,ElVVhTJW/uZQu,TbM_gk]f#]?%YP
%=qGna,qVY"XWaj/_=0XT!0"XO#8.u#lXMXc,i(tgjNqpINJ,b:7`;^VJ^Z)R$W=;4Go>3-IeEn.&^MY1;*A/oT6MZI+m&p(A?_+p
%.OfJ1-6F@.;6;=.!'$;OW.8_&`%IP+Ll>9^8Ju0<Gi!'?Z*j,m4s^-A<_e[\<"V?NWe=t5Z$:`ei]0bcGVs(>//XNQ24KpcW;:3_
%g,B;eXq93!0C2@M<8,6>!D/ZHjFu<<T\1XCClj<qO9!mFXHfk5C_-&&QTQk\Kq^[KBiN4R12b;D$sCDi@+D?SWeR*?7];ssku5]e
%9JV<d:<dTC7lq#ln$'e\gE)(&Fqbp@>l<^6Bo->:".73lI5=c!QEI`S2d!2@o.2c2,^U:A\Du"I6.Me$]SVaG]\WdI2qkX@bNIM?
%!5#>JM!34K+HZ-pM2j8a=-s)@=hd#]4dp$daW++n4"bY*2G$o(AcGBarZ![E%qmc*!gi]s(i0G=F<EDB=Q+5O1)%8S;POi7&_aF`
%JcUPhG(Chf.]<Y*@nIogBF%pj0l`Jb=ZbKk6.Q$"g,K6_ZOE=S\-,dGB:]fNp4-=l'N*&JiF94EP^O-3@d=@-)/oImh!Ge#>K?:\
%0Tn#l=4%FL7Pp\=2N^hp=->W3]3*5\$i!]rMcH/+hEjjPR'`t_Miq2t-DRCW"7^uO\$VqWXT?/YJq`#4M7[]/V6P'GEf#o(7NDt3
%)'XbFg`Ir0@ccU,R2=o)?6&Vh!EVi7.BgW;Z.eE?'">)^&d^Y!1qZ?%X+D0p>$`0NBM1ErUDTaRe2=<s>@-(gfUTt_iC]]i!NSVu
%#od!5[o&`L@dFdd,%SgrHe6j[/il"@9mjBm,unn\'jKPQFD7dG$PFj!WXS3V&S(&cQ>]<iI[m_V6iDK-WBAK!Z+OlfE=YAHJG:<l
%kU$%i=m%eUrt?jNn3CA\J=pXIn]jZSC&IV+"4bUt_`SrVF-$[L89?1fE#3a)qbSAsI?_92E%1s!/q[RJ8N<%3o<o2WLo-0dB>^%-
%&!F+G1`CO/@6.*V4MAEo@RJPMPV-KKL<Mr>kVB:jUD:5"#Zj[@f6B5NJL#)9=La&a/4FNn'G.Xea#F5=a@hSa`5PB1lKtb(H^r]4
%-ms_VGZMqrg_U2\]Q8\cAVuQnTpS]B=Q_4]S[XgAN_Wm`"0Y;+/jALD,+!SuKl3agmZm"L#^@fXHi8i.3sp)3=,.u\\8GgLo9OQ6
%PdF:)%(UApGc7^0$`u`A4IiaE8sbDiQ!bRWS:uo[3".Ul7OI%($VP<.N.*).dl!-;S(K)f/lLZo.jIo%V3M5%d%;n$+@,<.H\54<
%ian4\UL$62%BDn`e1!'a!^\[^AQnO*V0sKS.@VZLQ_M`f.^[XT+S+/mS:U[t;1K;#j.b[U<(0;#kH2eJ]M,W@M(4)_,*V&(<cSjS
%0tI=,g$?UIbkK;8:mF0@XE+auJDd6-Q>8:rbRS0D<oTLi-/KHgg?;$6X5=E$QInS+Y#o#*>`7NJ&-Zup`n':8`t`u_,^RO!mCTB%
%!JCq@-O)-_CoCVre0*XdUrS:3d1+HtQh](N#c8*n45u2b&I=C_V&uPoC*-><<;/SoY:g,89#8JJcg@?QfFW@Y._pG'%s*u6oUsZ#
%MX([GF]IEo8&ZTh2JEUcO-7q=J]>p0C/%B,QF]A.qh(.X0(M7eC/XUoNWb%eWa2:dY_r9J%R`@/Np4b3#:j&a^ioRu'1j3j2d+Rc
%8,qlT=-VY:0b/ngauEA5O(/I?\0r5m"*BDM*YUumX=UAPn:D>XEl23.]nh)Ai\48@(6cuc822MU_4a.F4\&SYa]p6HU_ajZ\WEk`
%55dmg(g^F'U8igBb)",Rcl)-SVa6bD"5RtW/e5tPfaCTH1dti466e=`&-o8B#BhOWZ>bN:MhI#Yf;'@Yk^_db!_e*"FADgeZ-l%W
%4ZKNi]=E0aJEo4qDF]'Cdb!H/nhU.Ea2M+=EJWb7\;n!j?*'5f6,;sXJd81J1[\,ec3V.@2;IU17b-I[@B]H^@N1#f3qpIgrM'-"
%kTQd?lIhCohB*FN<W'.`HCJiEito)lX$6GMTUg84hE4Y:it$6K0C8C9J+@fS#]TRM#p!air3F_BJ%XoZhVh5C#8c"Hc!G1\ESUK`
%O1Cq;4:3n5_Fh;jY5L#TB"!c7_h\'3gh5BI523sLCch+t-9kaf@BKSi>^%d4T&C';<#<cgUP#1EJ@jT+8f0XY03bTek-%ll+ZsYN
%cSKs:(1pZ2*f_b1G\l!MKfEfZn1&7!%hIo8GcYB7B39)\65YH49s]A@HFZmjBB[4ISGt3`#3&0X;)CRI.5OX`r.(>oU(N7N_T]NO
%YkpW7R_s<H"]VZ'$l.luoj?ApE@K.3V0]Zm`pBC[qDD"Ic!'/E&dVNUGQ2Edcf!hQ^##M;Lc4#@nF,kH&bjSfDWPtZ9EkC8U[FAY
%VjUdQCfELr?4'BJ*Js[glK\(e$2pJ>c]j07q/X/T4)($cVmT,DfC!cV1],F/r<=$O-)=C2Un'1HN\UkY),j2/&nh.#)R6A:_CiB*
%=tZs9%AJ3acB"Fe>3DDP1DMrB73X:Qf]!1E)DYHS2@ft0a]N*eQHE`Q:`gK,R$lUjdARhi5[$,Sjr10Q+B5a@4l#qbl%\G=$@Xq@
%h:QVL<8A\G/3>c.68QZ<8T>&HJp*IsF=jZN,#k:C2lfEj,t^f:VSt'^!G?))<qcqmefYU&QAC4Ndq?d<60HArBm"R*[O[;:llriP
%>Dsj(#bLTF/lS``VHBsO_]'1%>hWfYY;/)ac.^P[?3qKt>\d;i-@<F02rnAplmIR`UDlW/[^])LaXBY(m0N*(i4X@=mNKNda`r#D
%l-DT<9WjM:LY(;BC(8&Ejigu4h?u,aHOB^(@q=q"Y57<'TDnaup!5k(U/eKnYWXlq"%tGAmG!2O(&Xe3E_OMo5Xc[Oa?T]L7QjFZ
%HDV46^s&3lZTsSG=gC`EJ;7\rQ:h`S4Uh/tr<cjs(.>tj3!Hp%'hk]PjU:m35"@%FDG5l!Rs4G3SuLofD5pd.7AE[/']EDmO>#Z%
%!W;Q>GVgW;0`V'gaZMQ,[AgJU$u,K+@-!9Z;8Ar\-@RPt12YJp>uM:I6+$E3klQ'W/0?X]S<^Qs_b)(Ihl*B,I^WrIrTqnPqUpk"
%"[2La1hAm[-o]:7(?UsrOt;HQ>B3>ZaXW])UKAu]!UkCj./HB9.#Xh`.^E`^BT`?]oLbf9p;[bQ%/^@jPgicH$T)2(R%o-3NU5-X
%3'PV1BGR-$!b"B.N3"<gKC4f[pqH-q4%2[O&OX>Qcc3X[\n?h7cqQ]s/)L0^nG5:h*LmXBAN:BA^Z'OAn#1+FoQ#A-j#a.&l#)N6
%G?XMLPQ%?F4L8I!52S1dpo[RZIGZgM6e6H5kc9%K=Vl`@1%.?jN3hXRZ(c#&^,"A!%DK@HDS9#MGOaN::SRTOAbbnHC\)\T)UeLL
%Xb-9j.CXe4EG6^Tp\/sH!>h*<<jld6]l",?^`kTDg?nH=S'#HI?>YH,C11\FCc&`n7==D"_IO?5c2i,2b\*O6_4ZdOr^K,q@&^Zd
%?aXYCF@<H)q4([*!`ZeNM+6VaXIYl);dc@>NXMC7aS_S1O2!%]KjQ9*pbb5LJrR[@hE!51RTH7^X/<Z9)iY5n-Ipc^G8Ik0Vdm#<
%F9ABSaRurI9S^cdfu.d3IFP<QNCnFQFh$%gA;LL4$UTj8?FL,)o[W/IW#aa>.h/i^>*$qHA.A9J`/`!2Yga/4oRO&X%*h-8E?U+3
%GVsO/Yg]YNnS#Mm\BqL``hh'Ehl_(E5>qkrZ>iKH1MYn2AIH9,8;@"C)3)SG0.6d%3.jZlX,q/+67Q3;?qf?t>b\[Ym'SA&3nJ^W
%Gj\H(pNc2HUg&FSA!DlDj'dpQ?h2J5<jP/9RM>&XRoVhkb1-lE;@&=>/$i2mifKS)Eg)3o[%q`f/=$*NUiONC1;nt@f?IK3QHW&l
%17+`X1<\c++dYi16YEsb/=2jfErXW%b]:8oE%^>/VHb_g1/jC[/QoP*RnJOTjQCTpn7Pk\4"XO'J)0`$h)+7U.>"j#[os&ef'%<n
%;PaQ=k2VF$.!`Q2rr8qR)s+'uAL9+V-t'aDlZ?n'7W(&+P8uT[:nDD?Mc_!p8PFb()V7q/UMic&*YYa=c/[hZfY'ZlVHDHZ$+Hn`
%niB7$G[S!I^JagXl0,dVcYNN[Vl:-*G2nar'IP%b^%QHV'(/cBkn*,q4u3NF$4ZobgNIM"hFqDocnnWk*+7U'QeTKo>KoXi8;#L4
%/n77&4b!3=UXLf%$bs3pPU7ACoSZaOe*)91M"8;8VSd:$/1*NZ2q'K+I9Jk\(h9IHCNMMa'nmEQh_OniWc"iH@4Ho$>IPo?g659Z
%9Q88)`c^tX-CZg?QLe@"QXeGp5ROu>2QD"`A-Or\i)o?i:4n0^ff5eTnZssMGT'^'KkDJ;k4imD[qjgKo<=]r6[>[oj)*O%^P8YY
%Gi)W,Fa)!9OW!0&3DO3"I%<muFnBO@%,D9F-QuB..\iR,MKV)WnQT'L46:N^Z(O*=jYI75Z(LT,;d_EGotXNXRJ]E9q.?t)CPUmK
%;Jak-^:/)$^:.N_;g_R^Dp$L$6P8-n>V*)0lK'jlbYsmAhNfBh.<(ZC4kV[i\D_Lj^Fe;Y[TfYSe);!9C')kGR2MK=1Nj^rf5:@f
%=dh"`b`(0R:%iN6cGQOUT%0X;GD\PYl-\rSHqWLD.JOULJka4=8QUl(\,3)jg\iS<i@4_Ks&#4UIp.eQMIY`Ik.CR*bFiQh4B$]]
%Jl-0&P1D5Pf+Z1%]nG.u7T4$@j<(Na8g.56@tE)O1\"Zi6&Npbr+W^h#jZhGSUR+[c!JnR0&sfe2oQ9cp$oZHA^'#.;!YLRj[t?D
%%(B5S9r6#f1AYA?_HXA8mF==q[qW]#h/K*JaJ=0\o.g`@@Ztm`d^u7g27;]=;)`kA`GsVA4FS/mlS;>,D#9O\CPpScj,[.p2X)RT
%-q-<_4^+HZRG31[SJ3@52UaX\k4n_=_I=LoS*+Jq*)X%^iGkCY@+]J$?;GckW]iUWb4WNl^IEpCrRR]IDPo<-gi?XJ)(Eom$;XP;
%ERer3W75UBYaj^3J#-DRCc0Z]eP7qA(K-6),DGiU/!\t:mum8a8YhN/a+]hK6L:^dDH+TW`e?m>TIn834o&kss4*(nDa,j"gEG)`
%;W(WYf'ip]e"@I6*G]7aDUcs1.F$l@>/;f#1#%jM4,G^)M+m"hSO?&%bd<TfVYDE/.Q0u3@a%TA9\W.'>Pt7IQ.pBp--Zn]VX?!-
%)@fK"l^@=M-n.L+.63<,.i`7Qc'\F8.$`P/(*sDFZa2'dZRGhihW@k175=fEB2MPEO\,:B\*>M:jYiYu8V>6o7+AQL-l4)nM)^EV
%9#`46KN2p==d1ba9T.KZj=\\6SuG<#bA1eC3-dO?2pY->_J@/Jl+8spoJ#:6Y%!nO\5i8V$oSS'FAJ:A)m0`HU]3qbnXJA!BC%Q.
%q^jbH*ii__hHa`*G3q>6:!Ds-$51SLg<?_Em+PFk[:1'tZZ,;TKkhheF_909<pdY=eRlYOXU<Wk<c)I!rmOn"\Kc2ULAgL2,=r4T
%r7cY]WS.?BWR:Ch8C#^5"USdU1fL/5R;n4FS)Q7K,JBT35[pJT\=t]3%Qh)5_tm-Ar9Nj,^C<.<KP%tNP_)Hnn@UdP/*+#UL<ONP
%EeARSB]1O1Y"!'(DAZhpbSA=BQnCK?)0i6uH[&hI$^k4@@f;VL(r]1D?W1oVPcJ8Ql+\fBX\fOgCQ6_+Wn_7E>@G'H8B&#*gMroF
%]Aq(&Si?R38.EUAG.fKB<HsbnLW67S&:Z`_renhla5hA\fq(i/q3lE-^\67+jF9b8H/<:Z+M?CqNNuL_d[lHI&EG]l;eZD5'`60F
%mDgK?JW7[8l(l+'e1mU[*:1ee+cW4gND\$NaO2J!qf"70LI8UXl^j]'h))!QWk@BbN:<'VajcIP<;FVmFS!IUi?Y=@,N>0)SXRG]
%ZZ#]bp4&uYs7_7daZ%uSSQ)pWg]*i3s3?'Iia;N`g]=jBQ'?`+[c]a,o=YGmAp_7u4l=qamqg<o[c`!YjduiKB=?tb3P,\N0mb?f
%L#1F->XJ-7XOiqk?&`%$G&l;j#"o]DnR`-p#!7bq&l2rIHgP<^\nUukhgB8!C5QE,G'r*2K_]3^ZIMD_PBW_@K\O44pIL15\&^"p
%`osj\6YodHRoROA's`<.Gc[FB_m$BIk!!%$[(^_3>kqN<f#-oJ405SAgZ?Gr%B<RqCiW-\\)`<T;['_<qUqs!p<T'(hlWN=?A]2R
%o)EIf^$_iV;XEG"DE0=('.M97lgQ?72)*F$b[m50NAA7C["MpPRo804@oJfVW>']8@;^'r`Or=LQ!7.6kd826"GZ=$p<A01PraVE
%na@4rgo2c1(V>V8_%aUPYP&m2]o-0.KpPs$jYrhh/%eQ!iC0#7\F?5m0N<Oi'jbL+QW`9Y<d:#I?CJ4;bC?he1-XH:Hd;F\9EAj'
%,s5+36+V1tR^cBq@cC$3\*]Zl^V+/7:<PK+f`Y&5cC7P(_-tc12N\3!8\`qHRN#k_DDj4MTCQ38raN`?$r4NdXOk$Fjk@e%qoh&q
%YYh!6k;^'edptGYfq"KWfK#ff^_?/QYF,\mNGk?CJa%@6Ja")#S_\^.G5%hQM.s26\9D,Z2ZK6E8BlYG-:KBO7Q('Drn-8$htO8N
%EOq72s#PLa+,[.spn^l'1bR0JK>T+\fn[K&PHGr?YN=$hj%e5qD.n^TPbr6MFFK]ur%I14s+J"n1DuQ:cJ6tmbFW9Y[k:$(*TOud
%')G\3Rd);iC,[bpBA.']3=XFXK8LS-$_8Tm9n?'.=DEeg<&u;Q"LV`uC#_7olt4H@OZJ5aeM3pD_jT%0-8GSpDF#9f%1]^*`l)K#
%e#)`C3l\7]0km/GeM1ZYN%(`9@#!5aV`J$>bKk&nITF#<UG(['=bq73dOj'X2f!-Q@WT:7&W2;be!Kq*]!ZEe<4/q`IE$I-[<ejB
%(%emT(NMu'`Jnbqb+5cd%Y+,f7O:cl1XLSU\5cFk[\i5B6n&TS2gXZATRB%'M-mRY,]i1Xhr380VYJi*DDR9?CehJ\3Gpe%dl;D`
%2D.[82h&?\%Z^;':Ufn48[n?36+>ph6##>Nfkl@2>E%6PK771tk;p']qH\fIrEfB"<sRiScD'7!]DG1"Y^4_J$,?#--fZc.?LLNn
%ZU/ApbkO(:pe$7ae/\6UK?SujpI^(Tj<+)Q?1d*SDthR9'Q2TY6MILaCfZC"S>8ciEI1@K.#PL4(n]e5e\A*&O#&tjj`6QMbGE[X
%=Z/2[D4+sVZYXNFc-<Q)nRZbj@`DP/G8miufu^7.bNDdY2e&)u9gUn-Jl/jrDO/Smd^`LA2bW>:R/sk-.@j+cbg`G09BIfskgCV/
%q'k,cZWTG*Qd[q,=[%$Ko!oH#k7lg6iV*2R`:(;]_ZZ_j/O'=rp%O`=h&g]]?\p5EYJ_9?]041"Ao<\bSmld^_H$RQjlN7`\T5-A
%@8O:1Y11%tQ;^dJ45F9:1f\;@DHq4Ko%0V67ZUI,1G*?@6G]-`/\6)Tc*WXV)r9]lr-$AfNXe*l43RQhZ>J(hH[2T?UM6o0:)+',
%[2t[-rH4Ro/!>&JKA]Ch)9!kAK,qsc?]#LCSR23'>RAlbXhX\An4Fj`l:486bm+-XI%$RJYfA;GrE![.rYa=enOr+rR.cj'kesi,
%=I/OXC?N90H\#&;EA:Li\0FdOLJKABpPH?=6A\so)",N;]>CI4NND\_\dd?3hmj:R!h7?O:Lu@AMgM<Wm^XX+_6na5G&!b(1q.VV
%Ql#d?2&fu(Yk2Ck$')Ui@]pAe?gKNUMIo0%D[_M81!tt6A5DIZ<!Pk$Y(V;Lhi",rT]%i$;kAC)9\U(I9R!a'L#Y66[3qPV"u[Bd
%Gbr5beEpcBE3L]/LGX=+2F]Q"&N$,>C=@rj3BeG*m998V4A>DM##jV,Dqb<EoEFO%pQ+uNGGe[bR6o2hirg=_8U$2/N:Nc+a##bL
%\oUOi9/G`jnHO6trSf[jiL+VSIc!,E($+&/%8LZbo6Y<4o^LnMY$rk,icb9"p$@],dre0TgO+Y,/+7P#>7Ut_DG2l.emo3^DqMZ-
%E]*m\D&V9qL=;f('CWNXb:m1YgJU_!doqO`SP,!=9m(&LDmm,-A(G1[M;*HBO4t;grr-iSNDkV0rZ2qM.DjYm^IcGnD7E6Yn#J4'
%"eG&\U[Q*\;u<Kf-53lVCu$rM[9KUl;m8iF>7$,8rboEdnZCFl),JPKju:;X17Z(Me4mSm8>;=-gP"%Q78k:)h^1R@ZM+8WCmSo(
%1"JQ9NPedD7Hq<d5,sD,dafN;>*"Tr["t2)gPs[NP^8>3mSoX;XNVNLR@$^0R&s/^R$fa?2GI)8)scGo8oa>Nchm*MUN;sfQP:cC
%k&4Pij*G.f`(-BMrXR"K'L!A7nOCs5d`4'0d#kf1?Ctdgs&<<;7kB/9&^0(=Jnt>kdXtrF1_,G'C@l","EP/spq#/2JPkVP6V@cX
%$VtMsjHVt0Gho*0*ad[$pY^=dI`V^.'NCPl@4'UoF\X_sj[T%kChL32<ES9](GgFr?`r!r-gWNde,<mbrWJg>Q.$nCT?LrRC-dA<
%s)NPjC*V;b(lVYW]K-:/3>p:"k^iab55]NobP1g9d-g>\%Db-!NisAG^Dc_NF`Qp!B5,N7dM81r;V:KY_%6$cpAus,#/#0=!O#CK
%!Vq$NZ:'S`=$(?N_e:GCZ].cW?l/fh?Ui*h4Ct@R[Z`GO6@+Y&ph!gXAr,p.L1RE7mfVpMO+k:IKqD\g]C,as$g<l/b'a%pA?(-r
%`EcF\R%t()Ti9u"ek,]2O^\XPY9r7(\K5q++lfhKFH)"#IG0AU3o)^E`IUd?`V]ZYL&3P$q8Z6A(nKe!k[n8gEb]ocBoff03E&*(
%G+T\@Fa2u=)UVrqj]E;l[1(ruEAZ.M%F]qgL9PMj^`1=<9S*Q%o;Jo.T!2`07Pl[tA"(8e;,(CGjN_GI_/"?lb:jJ5;q[HcEBFmN
%iSpB)-Om`L5mMjK8]N^YNGS`c3%$6l`jJJR`jJL@DpH174D4'f4Ws1&LDaj1#ooQobafm@F#i*Ea(F+L-PoEG,QlZIX\IaD5L?<d
%K$"2o6\Pc/:)EYRSKB`T37Rtp2"^st;)9WM$I)33*:gs5\I2m?i:)R-TXs1(^;'mPM5Y%-jj>da1le;`s/TRGBU2N@r5%?g_:XCX
%\VH0iiQlPVZZ9V&#*&/iPuX8d24a`-;bsD_ZZ1-#$LR-'b#ruN9r2ML]'83B+F$k$i:"BcIJ=]6K$<S8h:I<S$:L*&Dc/"_4]*hk
%G97g%,=N%lJuLRO%B%6!#hM!Bb<OIF"`-7<!fqS,HC\sFHihOLD\^[]:)Ur[oV%q5kp?$&6>uS#53DQg]q3uTb+7S--:#;C^lip,
%[E@kkitCqZ-bEftIL4#nI__B&&H@FTpb?hf@$^64S7rRlhfBi'DIs72XupUIo1oW]99+?V8lpHNJ/7Wi6;R_^PA<'0_rmuOKs5#B
%4RR*rCF<1"Z"Yp/4&&BO6)Ke1p@S7/P7^-3B:F^"S;5p@'k43_=H*9`(NZd[$7)T]0%"uQJmcJQ1JtC\U7tsE;lYHQL5iF.fkH54
%Ya\4[FHM^k)h)BLm$q[2bFNP'Y5OE=Ng\_-e#`;<"1nXU[X6h2YFD6o;.nP82Tq)D?MPkjlnhq[<nr6`Q$R+K1M70<]ULV48\5kJ
%`<)kP:#K[,mI!iXgob8Q#7`Lijs[+t"e-0"e7gct/Yt?MeQ+9&@(+Ea\'!7di%!'rS[1Ua\R*b=m\oY`61(%n_+#d8Fdj!1oGXh7
%/mUS>d42Wqg\u_FXd\Lm%>F-%mV'O5kR`K.M\Ph?X`=e[Ti4&Ae]S7WR3MsKS1QU+GI\XoTgL:uUh*5?I9/=E7hq@@nP1e9b-piE
%Afl&h..*X8Aj?4*RjhBRh==FF?L)?5Ad[;!UOfgHkKAjWjj%2VUI\O.oe<JAO*I!fqYmPmc.;*:],9l[0>%)OHG+T'Y4%+I?G4h.
%9?(SI;/RD)YmRt/5CkbKX`F0C1U9lO?2cA:i5e2Fi<c5?H5uhpNd.(Ir`b/)TP=<mj(:.g,$6%1*1<jJUKbpW8EJ,nU?'De-E2#?
%SF?3ZHXZkA\I7cXCr-P,%!JScE5*C#L=M(HNC%",jRmrF5]Q'4p_X<b^if`]_Ftc!8fN6&ar8rDp$OB`..ukJ/Q;,T2Y%TcVB!7t
%D)]eX60!UGYP\CGntoJXC!LOL5Jt&J.5)n6%SYR`JWrC:FYGn4,_!_I]<TDeUbRaP?e_Akain(peH5.'A8'REZi)[r\(\6`NK`S6
%ZplrrLX&?Y8p4m3@9r^9.g&cV*@]In'J?4jV-[qgD8<0phd@BuJFK+,U'1T0m;g"=-i!!LD)u5FFMQ"A?A6-`9'%1'cH+_Bjk@El
%/D!E6^e>S$BI#0.87-VI^JSgdTT*m"QF%ZZTM<kg_U@i'Y?qP*[C,=X]pq(7I4][!SKPY<h^hmAla]99Y#h"o+RWsM^!f[EjlXpu
%4j+$7@3XPQdC(%L'Fp,pcd<4@NFnNI@cuR='u<2a/'W5pX:E&toAk&#gOJ%$'2ap,A\cp$\'*;?HHU?(WoC+r0Zc4*o\)]e%bf]r
%>g\73rH"Bpim-ER-f](nB"N47QW.TaBj7")]fn7&+'RT3FM%M(<gk6PoabX]K:PIf[MYE9K="i'9k2THZkZVW^%2B0?fq7FBj14A
%1%YVho4UVab)G]\R?;r"LI!'Z\,^q^T>MXDZii+d?8n)3Z@tq1a\HZsdHHd<Cc$3]7e8+/f<Xolc?Gn.D]WJNC>JJ:RdUiF7'_7,
%jSUQUK[.8VI%9<J>/tY.gRjheB:TFtbot9p+26>56%g\Od-QSq3/C!I!OG6<8htRc'((f,WIXlh;Ik8K,93j)G%rCandt3S)m8&C
%<gjI/nLc.C<t.c;C`_3ni>#il8omBj6nWD**li;-eeuUY5e;+Kefe7QnDH&;6,RG^>h6qA@78kaC<Sl]H]FNe7^_\8)pT28@o04@
%k3,mDd"_<AGmJ;lB4FK\I"AKCK'S\dkVcY-1)CehbX$LGjB\l+2P4eC+l`jCN*$Z;0_LOWYs4Wu8l+:r]2Z^1h0QN[WZi\RNBYg7
%@74q33(*f\[]^[=(BEKn*&_PVa^TP\`oYiC,%'cB)2c:40j7&647.]o\A"H?7Q"!4I(3^oX/&M`E\%#CD8XiG<"@W)CI9kY_+'tf
%X'YUEV:;(peU8sNP4"S%qNNO.)o&nqE]o@PEb3.hM;1:O7iP$_8u$Gf$>LhLSNC:+$6u]-cHtnpJcQ.:s/2EC*7_:H`gH-CHVZ8q
%K;ZC8<=rucC3PrJ5L8WMWnBOpP^+\Uihi"4?eQq;F,/*TeMBtdjuSSuA2]<j@JW;A=a_afKfP;+C3[(.[GC)VCEjUbE(u[X<5uF4
%*pB=p:b/(bFtWBle1tiJ,$;OYfl=2m8Jf]!]DgWt.N3jR*L16c&'6_6Q`L<.2d;ir7"e`CHWRVR1bWd@_N[I]A#+WRN2@P*/U(al
%#9Eslj.m-u6m9>dFDK]*eU\I5I4<.69fm>QpStYRE%&-6nR_@OH*K&H<,Q'AGE!)APAVj=o0i59U3.HLUklageMsgo'WhV%]Kj-i
%7Q4PR\(\mI^8g7MFpX@?&*$%_<Yq+AL'FUtaD*C@\meC)hGNH6=U,lME=qL#'iNQ'2StY5f%@,D%`8*4K\g[7$LKmPj_EEX0/I-0
%#8<G*Nj_E3\O'-Z$cTM^@mT%'p+p,?LDnk^S(U1c6=STSm0bp#'gm^54h95;;B*SDeB?)S<i=.>M>O5;+U#;Ip%pnl9!f+[AW*Jo
%QUqmZ031Fm.6Cd;Z+;c8Y1N?da^rV[Ck"lEhDqXE+KoTdQ<.P-2X"S]'/o+@4dS+HKW*\>gsomrN<plg-WdcH_jtVsc^1!CUCFHm
%8Zj=3.TF!iXJ0/6[+ucSD'p7#K%H+DGG:[^9njCI9YEa*$*+@H"Z?]:Kk'Q"BA9^VgVSW!p"=MIcaN/V6bn'Dm,Gq(Ct.c6Eeo5n
%!$jIQ2Ze<:%_$V$'U]d=?MUWfWH6j'P)&\a.?k<f3uW<Y)VlDD,-g<+ZX/QqTV4:1)I!HaXV!;o=0U4k1b5Kkk':'BrmfruRhn`+
%QOKNG*YZK1h++,4^>.^2aBEhV(@$Hqa0BfeMFE_\P]-2J-Pu/jhmiQML.Agh$-7?&*keV.J#-ff#&=VFIHj8f-7_*KD%ku&(aOqh
%W[Mi'AY9eua,L7`)`m8YajTD^b->HU<]$>_ZA^q;'3t3a_ju(U-^?GL2U*mbTpOD'Z8+teS["0=)7;.Ceh<I\W&7^mU"@Yh/@719
%=G0=gbq%KK*q859#(hW;eV1'U\!UUP$:RBe0q&;\-^`k[ME$J:eAI/j8k1g8(`.t;Ug!@&or<"L@Du`r>o:lIoeBQ)e<PkCG!\Y<
%`F(VR#)eA>&SaWa0UeQ:i,rTD7!E,$P"fY!KTE7&RVG^:<`F4+<(Gt<9[KkuL,'CBJ/0)`6HI?gg+opmnBk8W?\Of$6&$`J.EPLt
%nmt^kA5"8GEk(fhoJC#6No=(BZm5t&Nc6#m,8A!iV-Rl51qn5MMh?dYD2!"3m5aC,lugL2._+:KVJs:U427@=gq::u%W*41LYD1+
%HjpjpU"jC:QPF?0!X<l<0>i`DIcU><gsPPBrUG?r&6+O0^[6[gSF%]iUR*Q^*F1isNr,`fo:ndc<nD+#QZ[&0J*#_7m8^9.<OH:t
%[g1"nl/b7U@84JhW$^hi<sh+o%HV@.:Pg-@!Rp-;"71skSHKf_?_.%"o<6*\L/n=!&YlpY$0!F2c+f_7Z`E3DMUn,lPccfuQSUI"
%9EoMl@N2g%&0*P\c+`3LNclb2anpqDa6j3b:3Z&f@W8[2'5Bm+eiIiO12\@sreSU77toY!3X=8^\%&%rQcm3aI2KelPc&DR-hKt^
%]Hke:Sk/8J;gmH"6Fp#UY$G3l+%7W$&51VqXV'7.&9KSHUm!8]\JCP.;Nd^$DB>(TS)n!cAA9d)n:5eoYi=t'-r)hOYie=gR)3+,
%ef0SUKRPB;i71?e/p0AVI\^<hY",)_5ibhV);r\LLP#eJ<Ork$Q_?Mm78?CJj^)Y7n<_rDLMVarE0CkSXKh6\mKgs?EDZ6V/e1=i
%]X1eFf/l;72B1IXUuUR[]C]@pj[@#J%FAo;1C%"6`oj*PbE0l@)kZ]TWVmjgGJa&n(fe2>jD)8@'^Xp?2E\G[<q%V'Gh%)RrUA:Q
%lG:q>/*6M`0C=PL9=_J(qYBCH8`S+>d[e@f8,6=KgUSuo^*nkcbA2%JT5?U7QT%,ng0/:d.^E$\[_)jBj4lGL:>pQYAC7p%[dl<Q
%G\qT.eQM4NZC\igCFblug:GhXDXQT)S'A?@-eunsSj'1hZIq_q(ZsGQIXh`9U%D_qIU)=W^446b+.!aqoB'X4f\#M]/j'gAHDQ47
%ruh'Lroa?Z.3'9[O+r[<?i%h6h4%34KDg2kh<8"*m?YMgXe(flX=\Y%k6m!_#JJR@HM&,P+aTEfJIsCPIlWV$qHEjrno=*)Rm3/[
%bs%#4HW[56Rm5J)T0GBpJRHlrr7@.99mHF%7q&1(E@86VID6lj/_t43,2SZe4da7h5.=?;<noWTq,?HqAMn^?5?u:C?Mq79Q@JP8
%PRi,%T=oSsmrYC(.A,S2g-Y=So9?.2N@/;jY20,d>l4B'R]AYtrb/:En@9?OmQLK!#gBKS]KET1)R8l$b?E8k4??ho]!_)sSpu2m
%PO_<.fFHW#%<LKEfo1Ze'OGt>!TiC;:`e7YFh*ff;?eJ;>>OFJ(;jB_m[Q'C+#Y4BjYp6/*>B<<(N7Stf_?`[4d5^(f7hb!ePFB>
%dCh1im^'n85j=\]Hk4p$8K<OF%4'K1gtB>B;?H]t\nRO=mVN]1PZJrmmOWa%j"pfjI&0]=#u"hKh;*&6_nrb.Wd;.#:jg7Lo8CS+
%4IYrZg&MG.D_+"t<a<!=cVL.4JI\9SY#N0Nr^tt)<Xe#*k?L.Z[*$(@QLH2,JiWRI(L)S'_;%,__BG$\6MKZ'paEjXK)NR\Ku3AD
%=$MT(ntZ(BEV/sa^[pC^gL*+8gF4-2eUFUupp,8Ke)[#0qhIklO.uKUG\A_Bb;o$Dm8Dp?_-t(O>s)7M5(@NLar`i+JVMLb8\&&B
%`Y3ZF5L*U>gRF72Pm[-5=%jW/CK:HMJSm"8B&WQtnde4SRIJ@7/,S/7_>_VqmilcS`(a&p1ZNo\NZMpG1h\t3pUhr(X?JVK^9'RP
%(o>Po2T`f#\(+@WAE<:?6E]R&*TU9dEKeVsb[BsdIbO#uSIh89WEsJF#DXs,P+1!Uf#kJMh!qF]@'&dG[-$h,?0.@D;ag8$rNJ-Q
%YVi%;'t\+tL!=E_Q<2Fc%o"f;Hc7HAl5F?fq*RF8hL,=`[+LKkQ++AVr+I)ZnmU]MrE\==GLqaGMb!b#[eOLoX#s&hlu,l?^t:d@
%$b=LmB>`:n9bZpF5KI>2St]duld"'Mn`fJ+k'-)@V1STl>'RLT%IXW<UBYsCN_@?C.s#06q]4@]XSLl3,0a;9nu_REpUscocda!'
%R_f!fqti(eX+b5;<cPD?g+#6jP+R?^j3pNFmE<D;=P,`9VK9Ijr9/iboeoV!,So:NJ"\GTbjao@^0Oo(H28TLrO9Y+F*\D1I8K2#
%[sJtYmXM6`hs3q9ADL_0JCDFGRP0ZNgt>r5<a&cfk7XZkj6krJOt>Nq&uOD?NdA[TV`tZ#cSKMT"a[=%:LJb4hLu0j[tU*,c8!u?
%auq[rp?J9%]l,RqlDbqR>?cN<cU*h6n%]u\50TE:H\]FDDr6DT;Id(J!'+D%=-ap`bE@bZmX4+h_lQN,WdN,T3dn8K<gM%'S!=5>
%9?,-c:OW#j>(_lSp<6/&;*eL$J+="UYG(K=4*c,WdnlrQcg:VCDS!1b:G6nT,@*05SlH0<X*K1b4dk4!n5KkTkp-L0jYc)Kh"taL
%j*Ya*@#,7&IfFdI3=RR%=8qKERWYSCciWlnS#\5R3DcKqI<lB!eXX5)h-Pd^DkFqrV]_Rc:gt((n#L..OmF%*r_X9ah9!L^_7lA"
%)J;:KeH6qZGWC#"S'X4RlnQnD2T>&/jn)dr6_&_s9$G%LlJhuL',G#hr:oJ5G<7kM'PLO=k0iA?,5UL,K6M?a1Z24*op]KU53-CG
%55[#Up[QP+mYPu%FN*@[VupC@RL@Pfs#Z,b:D6AE%A[%-WW-S>Y<+>.`k]Eu#jQPA[fikD=;W\,kSP8p>tl/3F&C@=81DqN0iX(q
%7+6*NipWoNIK-"$oT>Ouo#6X/7^!UcR8nti7qhU;59V[p9h>YOHc/=&-B&D.((9Sr,e/@h87YU8G\V&mk@\Uc8Q@$sM7JEF0b3Bm
%iuXZ+cZ`OdaW<-ik?99JnG6ELLo3g8&<\0%Rg8ZqI5DoijF%5d"hJ'd@g,D3J-KO?@1OP4"9P$RZjYHpc^5BZE81ThA&^#LJ9L'r
%Iu*q\fRNXq!Rm:a*ejKQR2fF&O6-ZVnE20gV/KQ[Q:lECB2=NVB\Ci8ajPSCY6noX#P[)HjD/*5f8>j"*tR&T-:/c_]0h,W##N2M
%Y[hj_E%igDUSS`$QKFf\Lq9oIs#KehIHdGVhK/)?UH(Pgg=uR.GkL>l/r<Ko0FW+DL$c:]YO*Q*j3GpKBbi,G=ak5;%p,+3Q(!>,
%TA6";"F9T#]K'K,ZFKo[-Pih\7'^UjN_Tr?j5Ptb&@hbGkJsr,_;]*G4+V0&d"-9Wo5VNOC1?Tk@Z:$koNZ,pg"QBEi7aJ>[;\A0
%_d&)Y["32n2rmk_RVV(aKH01NI0of&ZT+ZLlIklh3.Q>Pi(O;pmpG3*k3aU^)XUnm5o5^$dAbL-ab,?<Aje+:l+]sn?[OK=b)&VB
%_u*C"c.])9\Mk&5F=D5h?ETbqafD9PjduFm'.L^QnL@bqpb'_lPZ'+=)DC0`qW<72rUpuI4K.N&9);I/QmU+1R&\JcGT<^"HEJkq
%4q2$Q"&">jL>.FTZNhX%fpc!C``1mP@X#M.pW3(F<h.d3&L>BP*0F7'5,)24^&$FaF?fS0<d(*R>AJ0GpaWo4IiJO'cCA=NMR]6I
%9(DH<?N0TgSRkpqiLq$<03LP"q^Qfu[/bL$cES$3atfhK?ZTl2dl[)R8EPonl?V2N<kUoMREY%eY-_C1S;d`9V6=5Ih^]E\]l2I(
%s4h,[>.jmrP:%lM06;&Teon.j&*L.H3dVqi"E.W8]u(2.^2WStNg%?B6URI<NcpB+<joa!facaq3&RSC6Y7E$[FX9a>.]4Zelgij
%GYU&r(sc9t@6U,=NrAlF!jCulmR>FcjUCdQMf1\$qY9RECZ)D/>)Fs!4$U$Y!3R(Rf@kFU^*l.9?Za)**C)fs=D`Slg+AR"kO4ob
%Y4gT7dFZCl_4-.6bGP_p2=QA"GF4+1T$6k`ild7V_TVZ5DaWotFf5"ngI5l42j@3MoJ`+PZ6b*Xat$ep`cbTF*Dg8,9tr#&(5&%a
%q.oR]?gH30iHXT#`)su#q10\f'IU-9)3=[W%et+IagSaOIoWCIbGKLHF_Uim:,dFj_5oC:T>#VW/QC'p74j+4G72HPSf<C]MgK7g
%Q^W,iAZ:-0<e,VL_,GP<r:VgDUjB<;,Zi=[RP=/9,E>3Y?bc9J'G%rBp]Sc)\[1uSpN8*/@Af7[JH6P\*rmVb%J2qg:FdJLq,lsD
%Crh9ZU8!9\iL;2;=Bho@IV6snjJlJoMdNrS%O#([6/-HC?`YdqT*&`OIflS;^dHsTLnL&Ahcj<5rq9c/j1P(7kIu;8%Gj5(3=0m'
%(J=!(f"];]R9=AS!uQ28:S/=Z5&EL'#\99jJ?</6Mq>*7R[<.'5J4a43kY4V6fAkQQE,B,(CMnZk3(`c7tha,&'dEkr4=K"p\.F<
%bj'^_h<bmm*fFP!GB#0a/8H9g^95/]hsEm3DZZh4mYL:CBfG5CB:&HI4M#$=Hs0lW"%<-Sb04)IO,oWCO5=\=TXT`68#c":`T(C>
%l"fQ:XF+`2qKuG0GE:kOb0'ECPEkY'r#*('X9:/j5$=j"(RlL@0U&XWm(&rGlf[*EO0Ikm2Du@^l!=UBbLS*I,gXI,p&+.R]B97t
%6<c/uc2+d?SPKess4@KMYPh![NbUBq$Ud0ld<<eH5%HrV?O?80o]*o*Tt]d2dBR0Af6__Of(lG9YMHn\JquMC60$WfF-nM`i,(D'
%/V!*]M&C+_(LO;HjBB[0>V0c7DQUV5pWu71"nG=Z2,3+\HW'bYFrq2jec4KTZk'FWf+11=FSg&57)Dsh.#L3;NgC8lHG5LQQ"NmH
%*D9S.T_N.cEBfQa/qoOFL#Y+_='YDtl[<cVPRkKuPk&T;].`S:2)bU:a]U=18auL:,p)q&jjIn;Rog9Tja24'Q4Lir26YOo9GCRg
%0oFQ[A)\<Gda%+=\8!C^M#[;V>$\=MSM**hlS$h<HsHIYZ-!9O=mY(,_]'/Kmgn%,*Ui_8K0L#&H\Lg(F_P^golh,67.:[^qr2Lm
%O]S#DOl$'CXNfN\pqo924K:V+%DRA@ZjrWP3F6Or$89,:3ebPJ&itWpq>1]ZJl$pkOZVHLk$F:A2g<*5SUJ_QXdF0;nXKgq_!O?8
%*:L?[+#K#('<8Riq=8D$60Z[q[J%;;h840<SL'su/'oZQ55<NhH/,QK?cjHT[kFc/(Q$]'QP=Y/m_Ad.1G&:e['9Pr5mVIc0=[*K
%H2"QW%D"mTCfCp!!W@r]j*`(UrJJ-RDdh"#g5kFZ4h&+F!5[+[pL)b"foV1X5?h??f".2I8f\hd]BYUZN54X.IMC,b3lSm?HM%KE
%L,h4&25-jq/Qqs<4k/<9AtrIJ)_gq_G(*iV;k`n5OF(1Xi5:>@TG\_V0`O*A;#ce>0Ldn7*!B9]an"#7%DHubiLR\7]O>!56J;73
%5MAR\\tI7DNPMciQem6tI5?bG%rKNR$YqD!5BQeA-H:@`"`""R>+IQ>.HFTUqXW[i"G+>nIEC%$g3q+#eGcPbN=u&sLN[0OH0KR]
%S\V,+>d<s2hT475X`&ikr^B&#<'2p:+!i.J76\O(JpKGq/XCar[s$('G+4uW_W(9MWXb]IHI9lFIm_[I/6;1r09GGRBpX_6mYeme
%jN!279hM<bNmAe2K^A]M^lY<E6lLjg[_R>.Z_Mad"WAlr`J*\L$UDV59>fKRAhc/k[KZO&l9<Eub$I.%_:iY;1nP3'#A;j3e@n,q
%M<b!`s17ED@gDV,o?iV9-)'sQm`kY7b[=aAWSLcb<O&]E;ECmD&R[:]I8.F?.0eXTVi1HK94S340"oGtDpLKqiUXm-5^[c>3VB^#
%k:4>r?4$L'B.rb7=sjUe6+6OJS+6pm!h73PEA)-l(%)U*RZ@hP&tPah%1/*j@JY<^N:3$(CF:7hHbKCCj^Lp>-o4?%L;^kq@11$;
%^k+OWFXu*K>Q`iQ4DkSKBX-!tHPh!#ft/(KM?+k&kL9cYc<7P)hS&mYcBHTG0Cl$5WcpI30A]u=I:IaY]R$u32qeQ[m($"D5:it>
%I!H+YW-kpZ=GoBn@.Z[TJK$dj"hSpO+?%>LO3@"D3qMh/(1+\]Z-![Fh933\)-D;<@HXE@5O:8#?2eQs`"dJt(OMciin9C577`U`
%s!Y"8.S:m06P\:Qc`r1)2Q``pNh(q5:Y4[`!Zd>P`I,eN]kVV2]ljA@;Bc:D<\+'j<r)8\Y.eH7YJ:,4^&bn2k2PAB2gP@e2C(rQ
%^@Y1j9Z\MOSsC:Qqp#A:)r38jjS6jF!HA)+>gPGkksT\I0kBP'=6lA]@XO+;VWf2s*Q5?mHU,IZ&&?,sl1JCH#km/urKr!3g"Q0p
%_#4,'YKVi6rcS8OX(?ASA!MN3-;d;[HK?3MmM?qrSlA`,5J5,BhVn_Lq62ag'+Ri'iD,b+.defRN0UG?MYlZBmKB/05[miDbBe4G
%gdV!PV0pYf??fBGrh*6_S$h8-pSVrGp+1V/deK;V]D_!+1,bVucSRCKg;Um$oA,[DYp/>dgt)CN9f=od/6j`9^O]KpX7Q[nqYnOp
%dKf4dk8`,I#na+a>s&Ge$_>=_qVfJqo(/c@6-hgu[VGM3(_--4l,qEEg!dg)g4t"]EJk$qoH/J-q9T-rnT[m9hrISbW_8&*HN%:p
%$o"bATC8'-?KJh-kMp#-6/90]H>Fg@R%q73U]$o+gITh`jQmsCSp4,/9"-FMI.XB>6`6(ClSH`'o!e(G60%d3S^P!X0,A<@kJGD(
%a$sN\nTf]'Y:CRH06Y>*qmT(G9it<P,7'ep*A<BcN;r$KL<msc^KA5E-,h#Wni*_$\5:san3I'k(."Mb42o@K(GORtLTUIQgZ#..
%rlIGFf(K.QqUr'grb83eX8IInrf"SFC>kL_1Y_P]R80VE[n#jN'KC?L8%]MnKs.QRK/\R$PoJ+0lMntc`+k:<HDd771j_T-H9A!3
%Vp[bHrttO^mRH4fK0NeppOuo!PKC#e-IGU/R%.*qn#cAS@+*G0r[X6&c4Wk>20e`&jFI4'C=7kgpW>_<X^8\FCXp>\iYS^El:.q&
%c'EA6_,0_1m"0P30>peenLYa*-)ZfG6i66t^5F#hM_JX%r8i/#rc>Odh<$Y*s$[eur64'6Dj<K$?TUWCrA3u%BlrR0Il&kY=ZA3I
%\San5pts0&#i%Q=o8bnHN5$UHfcY9ieIVPFM74E-&:\SG#d%6%NC.CY2Yq;LY4E3SH&d@0nGQ^DrmAVp"Kb=G2)4cB+F8d)Tc<s&
%_jL<!VL$R,]n*Ym`A+Isr]fhuic$pQo7*Vhn`TarcgcBh7FnbMbGX5BoF99ih[B(QE$R*fFe,T_I6Y&KR9%ltKoKkf>rV*%^<9@%
%&gHAI+tF+$,08!^poR->Q!*!u*WRt$Y&.:/$MO.uQKbpg[>!jX&EF2=B97aiDFT_p/VXPgQb'5Qmg87e6VokjZ@+U4+[%]Obn*CV
%%X41W<@uko/4g4-Cl`nr=[V1N:0'tq0uOaRc/b8oNj)33iX%340=;OLUY8=R]/c*Zb_tFH2J6YscN4G!oI?18.Nn/kc+Y,k.4K=D
%5:`PIp`#f;0f/a/CCmTV+,Jl#-303h`urDY>lo;[/Jr#f5W^6L0L6O\Uo<6`*>=ha/AT],^,###%YF&KCXTj"E7m%8OT:YuKE.YH
%4=`5kr%/(k,m.u$A;CaHk)M](O!k>kR)8?lSRX[+;A8,I`fddT+Q6Nk:MMkLaU<9CUPJs_;;l7OY]<fq'Y1(R1!>\o=qio";9q.N
%3=)nn9oC,*7KSuE.*7,#//A:/[)1?&*KTD54eY?O>`Yl@c^i4<11.OobHM]t/B;;h"4T#1ie!ZmI9[\BK]OpZi/QJ'A/i8)+NJV,
%.>.[q@9*L/I30=2[.Yb&"K"iO+fM,Nd0s&VfWLsGQN\n6TT8-o,X?k6[hQok#ib,-!aAT!TU\ZT@uulKe4s1X'4=j6')Ot6IDHIb
%$E5Cq9N#A*YUs*`YU++>X=[_IOS+#h0VN;Q.WKUIGdoY!*RgA):jS.$+;S(PR++NI"KWlpI:4k5LAFS?doWgb82H51piEe>QQUR:
%d5&$lQu1hI5_8kD6`"2k=pPaOM?.6LW57+f@1!ok'0uUF*Ktfd3tEpO1p_pTRga?,qtLEuM_#`V8>!FGdHi)49coa_"@J:CHieR9
%-D9\-['TDJZN-.ZI-*XYKkVq`p`sSZe27uZEcJo*&/0/W]37hj!9uNl3]MnG5<2@Z'Gpo)P,<rIdS_2r$7D:n[S4)>NsGp[kHG--
%+1"Co!$KH^2"?7<U'!7A4>Q4f4U[5YK"u4QOR'aB&Hm/hrn(-4^4n>,%N+tHHmHANc3Q^,1ZF*AI0K0^(-@$Ra&WOY)Q$(8*DZsk
%&3,jk+r<0hG7O,f,GGSDM.3+=c@ND!$4<Yml0eCGJK.$4GGGIC,`i=S@[ah!j2VFJ+@JK@+U-jo%Df0>3s4LF/%(4BA55hd$]a"c
%*/9oRktj_JSqo[eBDVi&*T8^Y,96-0TncTDr,#ttfVYFTK$6ae!?9Rr^(1g-RaqLni$DUA`CgtW;o+*<#T1WP5g6Pt7Mhd-9;CgI
%?nq`dRTTWA$*m^H%?._,"Q?@Y$c@Zqo%_j(/Ih?"C1eBd<$5`G&.[O#"G#/o%gV-Ir.@FL#lm:`AiE8p@5BnQQe,hgE'UNfiA/Kj
%A57-]ZUg3A+"R^f?P:$W`bhS#d4e,n8W[urJW[q1W%UOoA7lKhi6P+"n[#*L*Y/<F+9fguK$XW66l@QV8IU!VUTh:oLOP"*O;_Sq
%$7)G3l`Q8"!^;A#e)JIK,6k<';Z[)@&r\:k6KmOJg3c=9f4Ql7&2u(b8rRrp,XIk6#W4`jA.gdpMbp#["i;=9N>qT!RD]3o\QSX<
%-3d>)i#pPsLRhi*>[K5+-%"pO*!c_R+Nu0o9u-qZgbIIS\/'sRbM4fuC6NFC"G.2@qeV-l+a.sq_J#jDl3^##-:.`4pd.kG%g@kW
%%]'=_/5AYWLc&<8!,DBXN<isgJ[E<g`Z^NG+<1)H+A93O,Z*%@]O5mc0@5oSUa96J1mO$qP^B'_G8.XH8Qg@EoES&>M98J%nLRHB
%]AZj#!^C:3&A62-=-l&k6=%WDOpVtJQpW>Q%rg`E-,:[bWE4YX7L=%L1HVb2eO=iRJ/Yt/f)T?U:P\]UHB9NKn==*13Y(k+'feF!
%M[2)[G^.;>jGlUDXiDR*CtOpRe;>.g[fHL!U1snTaZVdSkan1";GYG%UlmeUK2r5)Jh<7]O<.R=#8LFB<k_O9$U?l,d:S.n"p'k5
%ptP#'&RoLG&=>5PShQ$7$I@`M,\/p(Si23@:C79R&HG._qB-Ic'EjgJDJ3[;YifWO&(XM^en\_18"Lcun$[i%k_[[s]7.[bO$PM,
%/DH1YZ0g:<a"3Ae!4dif<#.$XcQFN.+S1oI7"fmIT[?f8>p,5I8-[J9#UG6ABW+(Zmh4,J:fmN(:dpR62Hji3Ahu$<6+SQN_AW^U
%N^rJi:Ek@b3=\>#Q3__90\!\7A@$ohZZJ89=`A]ZU,86M\-cBbp2sGFBlaM)F/bkV\:Vi0d-b?J;]AM)Mc<c9,@c62*utlB^p6@3
%LESlC7:d,eM@aTI&F(1&[m%f##Vs$uUf]Mt(H6/RCeV9bAXkJc5%c:^!eR*m)I`r87U+Vicjg*X*>RBQ`)`<4IRgn3do`>9Frdg3
%MFn)9;\2KgbX?F"dU>lN<3Wc#Y:MAB`ud'UIFZ]1kQ"up0RK)e=gf3m.nN#]";McI!_<[HCinR_@$!l/_-fO>C0JEoV&[XqWe+dp
%DNM8.N!3`:%bXV+Aoh]q`?d:FQ78%j5pF-7elI?\Kuq*Q+C@-)<'/VD12B\_?F#FuelrhE/CZQrh_hei$5MCW=p,5=%7\,GeBh$`
%&jU+d&II@&FXuNcT!=Qt;nV5_"+XY&<qAA>SIUd?)\.,.'A2[;J\t#d?1\i4.3K`KEWQ=Mf@'rH1HbfML8368dTiZ+/$PE&BtN<6
%<.>%PD']1r@o:(li':&;'L7p99q)D21"3FFC'[\Nboe2OJj>u/.nE$%>qq&+9<,]AKiK7HQ>NZo.%(7#kt!\8D<XS!7MN9DAImIL
%+=f4RL?'g6XBfNSAGm+O[P&@-+OITsTk-9BHG2!L)j[>]fZ13FcXc`$f@<]YK/?u/mVAQ9^W<,gGBo37$32=Pe[;d-",6<5S/-fb
%aA5Bn'!j9nCJcE'.E]F-LeofZH4<Fl'7cN<Edm%NPda3l4djT?,X\A;gY-E\VQJR'ojDPDBs=QT;Z-ogb`N<-!.sCt^:m5K_XuXR
%>jX/.oGFb%8$6DO#lru=g4QoP<(-40TqT2\:dSSO=<U#/@XH78R@Xc6&8IWETr6\BToG_embRVjmYDWI],njd*A%W*&2QhTebMC!
%'a*g5;>*);:R`VG@6b2'Z6+>1felt][$:pf4RJ+[/FQtR0Qoe9:<t,L5c>J:D(.c?*#i.tagN#g*=kF_a.ODt#e"OT"`4k\2)0"R
%@h+C]WJ9=HC]Zmjj/N*5j(nju3DeA(`EbVsGP/2oL*5I/9!JgKU1kd<;/0`pD"3Yt;u$S%;IVuEf?"X.g(CX'?mMAO\J[A,jT6Rq
%O9>V$C+Bi.3R<*ob8)!'!fJ2UYS>nV/CP,<cjbaO(=Rg;%&B!X+!Ukh$_i>e*^L>c.:r'UEbu(;[3\jR:B3GWF5S0G/CS)o_1`l1
%@H)Gf"Vb2D!>W$p4,Q.JbH[;"^krgXcdm9V_;LJ#%p'\Vr/Eu_GutOa"g6\?L6/<Z%!#3/.IqF+D?l8bC4cb$.*a<A0:"%@p0rY^
%@HiJoZ"9EI&D9DG%d^2(-($&]Ef^KFM,<mV.pY+d7'o.1+F3PNP/1'Wb$oXZf10sgU7T.gJ3]FoMST5t>qf3CiWbYL*%^bSAsqoZ
%$j#rJ,MmJ%JI#+9PCYX$P9b;[ie7es`=5<Y\7KD(.DaI$3<Ouq8-LllM+cWFE>`<7*i_UgYaB/h&7><RTbmuKJn9$*H(JK4MZldl
%7:D.n16\`(,#jI,LcWi_\J98+X?eP]oiX0^F>(5'[R@X?lu>+JN4SM`"Nig=?k7&WEnk>df.kCN+k3<f&qo"'O(Gm\7kiAu(!$uQ
%X*\jsJ8:p^!JGEK=t3<8+Ml>,9q!.m8Y0WFD0"%*;F@9T2I>H]AWQ2@V#</@GBK0dEn(YolY.@?DV7.O6+\)S<9\Ik"$k<K)X;D=
%kBj@qBR!AqDV!(c(s2);a"^kCF#Km8;J.L^=!`rF.TPub'Mr/k;';QKQ"*2Nc]K;=VC&l2QV2m'+Whj=44.XFMQ5dEm7+$i3\$3m
%]q]c/A!MU%cst^1nPCuYH(<A-co*nmVHlk[_]Yth:f-<.">UEZEP^#Y&SmP-Ku^P`J]fo);dp3VQj7Ud\>kTM*?nj!.f%NAnN4_j
%#kDf&_-no-+i:Q".:(`HaE(FLCP`1ZgstAj!C<TWDa//X]Vt9[SBkYU6gZ4P]W'$YQIOGcMFhFe^n,&o+DL#VjrHS>/s`N[JL%TN
%rY0%:d+'7pCDm0s>=oht2T<i@Mda?%q[/C3VSI6u[.,PAjFdTF*cL[9$=g-qN-I"lZm_,m"bN@g\A2u[bu*[[%p!@sX_a0hW\Phb
%Ki0TUSU8![!Q)$&VCPZGhr8Ac3^U`@p)tt[HUjR6E$-Pp0;b;B9d#6jKa**T<-<W8osIj:Ji<[_UY8TAG*,'L?<ja7C1r.s)LSgq
%>r!."dBra22R"cE785V1e4=7gm`F,EK*Ebg3*_gRL#`[D+o*r"(1n^a-/!i;%l@UZFFbKbU!gk1$:)<mb"d<SQleDA4ZJ!TX8o2n
%DCeY>E4HAd7bM8_D6tGl"C"HbE7Kdh>`DHdUd,/2\>\?n$5`b'K6GSG<oJ%W7qY.^NN_MLSp#MdLIZGgM.nG59,26LK+r"E<1Uo]
%#SVm>`fjnR]nesZ9u"K<)ilmnG,2o.)u[)M2[i-"g;@m><aepU!/,PJ>90=[)ij*'Hm/+dMslhL'fLAVmV6^#'Mf<d-Kk?9`sf<M
%CmD"<W+$r9D*#'++J6&?clisDLo/;FLuSEtFI+fm,uc34-)9s]Ni4\I%?:Z5p'Ll10"o>Y6]c(5Z1V(H!JX:!Uf9k;-rWPRBZIrS
%cg2gRi4."o.L1NPY15f2X$J-\GnjS(8rlg#j>h%M%BZ9Dons6i@K/!kCs/(NT=mIXFAp",+[q,O*9?%7*K)&3n#?('lVHRR4Z'7_
%+q!W"i0b0gF<O21Sdq?b+<(XP,qRV7KK:)jiOL&Q8MM#jQ3+u*!]h0Go4Bt*`Tf'u[Ig=[7?"ZN%8G_WRV>'p9;D="<3#"M'fs/$
%4BmSnNhE$I.kht%j!H']n)7f7+:s"V)Hg.PJ(u>,?#$=]'EE`lNBjqO_ara,PnTi<Dk/(O:^6@HL85#^OE5t52h%dEk8d+#_c$!$
%/tU"$fWsNiVpFOP4AKMm)EbCEaBm1k$>_\nX\ZN)((3t&+tuTP=;A4X#])XG0ldFD1B=`Qfc9L5\<0-D.Ws^WL//,^0[V27"QFqF
%)O\)aWfHbf_cLWI)E/]u;#p\eP&t5$E[l]SZn+`4@i7I3mdPIflgbo%T*sB:?qc2=P5"7h]9rFo&#Q%TZB;"MVdJqPR&_28KPPtX
%_\SiI5e&DBNc\B.]-=1QB0&#iUZ#HAdkSY1)g;7K+&fiiNsgQ#AG7`2M:2;\I<N3%Y`+>oZ-kse"c$.jLHD(W(LW\!i\,7.(eZk#
%,'c9jefcG;"[cZqFtZZu*+_`^(JH6UL&@`0D2W[jB*]c85b*3+#tq1(\4+],i&NBjUUXu4368nq5F+@"T\+l9C%9J"Dp77)?/?'W
%bT#?C+MWl5;/?th(p7&HK/pK9,fQR#!s!?N*O&YU]8%M5TnR3l`<$$9b;+JTV&_+DOc.Qr$kL*XAC/TTIYX.e\JmR6GKs%S_TFOZ
%/f9.eWSAII_BY.\];cUm9c7rpdX2e$>6`eVLCQ2@+Pq.\M@7+WJnHKK/f>d2)H,&5EH)VeM#q(TK`K<d<#`mO<)9L:hA@X"8N[./
%5#n%KB@/%L#lLt0=mA*m/rr=qN_`Np&IGE^^uP$H%RtS5Y^P<a=+83Pe;^,_>#IGb%O1rU7u,5u^9'[bS`rJ>WFj,&!>A[m.`H-,
%1p'-tF0k_(OZP?'pJ5UcrWP>?@5?>#6U9gM/J^\U/N9;aoj$WCAd%C@'h3p1o)Ud"*Kq#U;S7^=V('JS`plNsMreW[cTkd8%L>nP
%]D6+m\I\f[PRs"c<21>F1B2q9N!b;kqRL]gf\hB#\3,rpQGJ@2#m;SAS`qrWYq$Um)WpTN9^+$2@XG+.KW'c+_R3\*fB)@[cC_.I
%R!_43*L>gWWE[j%<mA,HTe6H!k:%f$=SM>&UbZc!_0(;n2nm7FZAYOMO_ju%n2Z6&fFJ"b:M6_]cms/WRu^eD+`&?lOCiSu8oXJ/
%q6eOSD<2uOSO_V[>fq)L&$"WMkGUMheU0&bUCi_`8YKegkqLTY[55ViZkYbok&K2i([#;jmp]#?d1%CI*".i$l/@'>e9rphe4\b"
%"UitK!]g$M&-N;pq]^BXBO5&U$>O$]JBicBL&r5p^d4&94XKF.W=O)Z6XL/$K??R!nTe]1ClCl0?5a<ST.9!!@rnf-g+F*Z/KJuD
%'L>=m8_"V$8CJ@%R^oq!F^9+L/oI8EeNjb;,=&h=TL=WqP'$d$(-+:sQ#%q),&bR:"6fbtmS/!j8Wml(r<(o#aQ4(d/GM>D41DUD
%`2uuaUkM]oJ3\O3q<o<p\0JVs].R=4"Y8>F`'5Gn0Xp#nZ&LoEMASjfZkMW4g"\J`Hs9HQUC/$Nic@cf3To5Y.oq`0WLBAliKQLA
%HR:11*kR;^VT3SXnGq)=FU4N\k@Kr7eajUG3\"R&<?Rde4Eg)+#\2hKk&U.IDGKfl<F]m40an\rL2Ub-UaLA7b`_h(n)E-q/D%*T
%rr07Z67]"e+s'tVIc#Q7@if#-p8IIBr7K_3`10m^fBZaWa(@N9@66VYC>@S8Z=nKk&YZi)r)?lZKc2Nf(lAFJr*1,RpT:n!@T2@(
%*t6;l_@^Y[gt*<)k9\0EK'(=P9K3P[)0Y;%d\Jjm[C<$0M9;-jEK32'I?A"?*2<L=js^%?qdQ<#c!V));jOWfcmiNgZ\W7p?'[iL
%o`3elh>+(CGrE>g>]%DYA9)\d\TMPnP4$]1%oa<S[#kh^n!m%bk%KeDh2Y8A6+Ff(;R@TO](n5mfa+2kakFIOPSh'n>&>3'lN5fq
%1XS$#dcWr5n5!Z[Mli,!h[s(4!htu@6BZ\#CLIl%@:/\rYPOL;hT+?^L&pC0g(W+92>#0s78>hE>je`)768L<0as+"?8>)%$^'H%
%c3A.+Lrf=TihmR0>#C1O<8mM?d6p@RVk,MrcDhS7n[1H45#q;M[o2bUj'i1L)2Ba2G_Rq/'\'*9;X1DSr!R3jjm(^f$Zio%D/:(Z
%kFD4-`usQ$6m6]3<`1VFb_A8jM8"Bn4^Y5i3%ChmmkGPp*f@kVGl9orPUoR2N&d,D:"kDN<KF19hOHLQ=j6c3PSFU>;qQ*F3FkK*
%'rhLX?A)+IW8<JcZ@b&L_ul!]lqngZW:^j;kO(490Sf=Y\X!kBH<?2+XAc*qTBeZ&J!L_I"#+r0L;?2tFPs!8l5U7_,`P(.28*%I
%VdasXm?FYhD,7O.W[*Q;op"j$Ap,S[Z[J*/W_ob1`*DejA]_RKq-miugl$3c4`WkR*>9jHBQKV:`V!C*1;%.7$p3h/cpHSNQcD6R
%-;1bR4*<ckC@8qr']3--8'p"QMe_T`?\mm7rK%UQ[L`e:&tM6eMZdFK3(>CfN1IE;%V\S:ZR"#*JX3s)Fi;o-(o.YABq\:+Y%:_g
%*V['p^Z++U@]4J9j+]h-Xg&`u0FA5OLP<rV"@\?1(TTNtCB0mR/+7VWqpoT50HcQR`=Fcs`<q-oYC$\953diN>$?ln:tQk/'t\b0
%JBVWA.,#saDT-#N`]>\%7XYlSi6XD`=1'2aGaf<Y5$llCL7]So_e2;WR;e@)p=hH)'d8\u+NXo5>>nt:-`7Pop3!e`0c9_G-H-tn
%d9;J&"iR;I,>7$D@Dejs,DY99c"eT_FnKJr43s(e*_L6VOrue5c=>LN&!L8&C[:len#F"5;W,!>\cLt\E=g+a3&t=eMJVfg9[`Rl
%:MR$_-Hpe#57Op.qksQ.\;]NH$1[cF39S1V,%RP.5niJ,Qm\@*%0R\@4YS,X3Z(Yf4UCR`U^u/M7X1%"OZ@AK8(0QGf8C%sbcDKa
%:C:3%NHaVE3U<'ld('=f7&$1rjL]U#=(*s*E,8'tSj;pmYnJM+^:-'6dj]_S>DHRU8sS>N$IM6-/C]rXW4^32V\B;GIb\UTM4`7t
%+?D\VbXH@u<r"F4?b?&h&qsDF;88BMC^Q/V>!H2IjkoSg8*G'2.gR,3Dgk<<mJJi</U)UAEJ<*28#N7"RQc;.Drd"7cg'ld^[>)I
%k0D9"gPloq]$o#V$oNa&PguI@/+D^r=l:-oKH91?p)S7jZA<P70@K!2.X%aB:>?SuN:gS:Y%!Bb_;mQ+X+^V0U'RZ6(`<QQUU%L-
%+c<&LP%ZkY-'@5L`(LR.70l)W.2-`?Xb)I[S=ZpTIaU\;a']\2+[7Q\"qYs^>K95,Kg#.X3;ZLG=a#UIE?_-.0/Or<pcdr6#*Mek
%7nTT`)4dI6=makYJX10TXQ31b@fkora-:*FU*frl+W@%"[^/qQn(Fio*^Uo7pDW'f`KtV/?tW_66U=jXf)K9-W^;i=C@8ptWHU?/
%YC`S*RML!5G=kESg`OegM_7[u6uqE;N8FqpGg.b=ZMiOsKNa9'KW)N,M<0bIq8j%nZ2OtX/n;"4"2CZ38]81SKFA8dnu`+rc;+#$
%CA"Ulk;58Q[;KggE\(qL;NQ\bNQB$JLf,909l&`X2*npb*`":jfLWgIN8g&"8Hfic!kRa!ia.$(qhQ]n7rm:W6urLt\(d3bU,oOd
%VijTnW(goXL&10cQ=<H`X#.<25@!h@?OE!+Ol;O85JlSJ-WX<J:;.dD7*ETBP4:W*d09#Xe@r=@&pEm,r-YaRi03U14%T&B['\Rq
%j/GW)*LOnGrcBuo7,-#%_F8Z!DXN<8DB-HO3]i[+P?9'#ZpaR@A*NX$ku/?tB3\N7AZ-a;hUo\%%Z.WPof6,QBFh,h>\h1P6ndb1
%,=ctlE!hCj.dJ\e6Y@;KHb0c8#`s`hL7.i9%Jh.@i==D#ZL][]ep`l]PC?t`N%4s2d7esBYGh=$@.]bT';X,hBoJV&_8F)NqIG&h
%G5hqjWUm\557M'@5pnf-o&Yr.;[XaJ%6u/HcJE)86W-h/KN.044<tINOiFT)][YFBmpJ(SfoXaY]+K1$Z`I[;CHS:rd2?;UcIjH%
%jZmppB'at3l7F'n1?\^.8%`*,7h+sec/gasbi8Cf3h9%-]4Ch>\LmRA!@R35EA^Zh!CEgb,##i";=19:/B)lO:I1VQC>/P"D/]GH
%Ai7Q@6\VLqEh1OijkD03o<m=[2;@BKLJ-JgHRY&TT`,5)lbX\"^Hb74W@!rsK1Ea_K*/tfGgaog%GSa=p0qc+%Na*m(8QIYS=[[-
%a>WIRZO4Vk;9d\:bSci*Kmq/:q71nAD6XpLifi`khK0QR;q6r#E+cWR*NB4EXXi5519$pbG6BBc)rE`8bW+*IET@\qR.l\FP_Vh0
%jqWHo5h'WO+R1S+cj2[+/.[<[+q=,NOg)?f9[VI,J-*[3bHmX!#RsVkmEF4AWjjZRFfa5SM(M^u7EI+!UN7u_&2!W-WgMiqJ-(\e
%a!nF#ltf'Z.fpQGJses``a;MN2sULtf[M5mBh?g<<u=K;nA>TfL#($JJG8E$&o;0+7%sIZX,,!SW;uFq`DZE70iECQTLF[*A'&a`
%!C]ik2*tf<&r"H-NXB2>-A!LD=J^&6lClC?'nI6kpOA=[nON[7,-(5HAW,D>cI_K6n\V*SRshis;UX&];\jb)7,8hKXd]"dd97c:
%mZ)U`#.m[?VQ;*c4Qkn0XAWUh`qf&L%!7R!]%$q&q<WL*<6QNn+J*>8E'1U[,Om6@:gn4I!88GU1o9Utd1%bMOejGd\7i&YO/9i]
%#R,_GflUFe:ErU<!,W/L).sso1WPpOQ,se3"`"N<6l73O9s_/t77(N-3o`/+%U"0[#2/5j;03BKqD^cJ]DtptI)gG$!!"LDIA^^q
%NB3aHImYq''9U3%m-5?rH$7gmG@)j\SH@((Xbet)OCaCcH['.,2<VFS3OZQ+YnIcCEh7(9ARNsum2#Q[*21]lUX"rZOX>l'YMP<_
%mXQ^t-sm?58u<6ZE%@>KKU5Kh$tKd)QlPnTC&Sa5(a_./3`_7uVU@Ybm+=nZ6WEJ'L8='hDlkYi6o_QM.$Wt9/#qNkq>"LeO7p9Y
%eY)T"p'7-e@VQ:O\S"BBLCVWU6I&%Er#2:Dats44RrN4AksuT(/*9jA<[=@aE-*?(QW9qk@HPd&@T6D2`Bn#tK*_+h`&3VNIAZ5Z
%jrXcSE,-/fj@Y4`KVEj0kpmNJ]k.%or,S;]'jZT*`XZT$<o5s/K/I:1]sgHcS4YqaFUQ"H.r#,?o%<-*2O[Qo%(r!-9T7qcAB4]<
%KqD&bf1pgIn86-KLn<\*V.5fQ@8%]9[;/H2'5qR$lHaHM.oC)OW$*$u&/Tq"`s2gu&;)><p\<;Nc)mA;S,Gpg<qT3?N')p=\sbtK
%0Ts+Z@XHVeF:kQ[.=`cDfS\LWES0p1H*%er.-St@\:Q(?gE_XH+:O#TODr'9]4OG$U-k6eeVL5R6BoW&?a+PfV6q@A1D8p\kMB9G
%!RfIkZlH-B$4urOEkZ_fF*ADWMjbnAPFpUK""=QYoHb;$[dWKoB>Q#m@pu5I-,:]5XtdeM=DJ_RE%Q;*j!,^&Z9l0QP^@=6gU-q$
%*:S$HC19=kl%E^h?&U2>kIK><V^o0r[_s,I/OtZa`9$!gMPNlj%2shI7<0FeX3_0GMh7;\8EYGt8s<jaX^/V-nWlSgi:FW6T[QHT
%N/]TDeGJFs.-"`KEM'thOOfFuV2\!tIGK:2=J.=>9^\6"Sq$V"s7E5'-X?>N-N;HNqI``Ls3&1Vp]!.crK%!?gV<Zi6/XnWCJp2h
%]k&t?9Bp6N=gC10,h#/-Nl&UHc%mc-3r^+;8kO*1[#Dg]h`i6@^ofdt\U*r':mEO%E4eeTUjO-(IrK>^A@PqAF'Ng]f&tnIG:5l#
%<"80eqb;H/@[NSTiVX[/TSO7Rh\!9!E,fK?%3'0&R8q3MJ`eFT.[C22QC6=C;\d]Z22J@<'-IEM?H1k1`Fe/t'`U4_(bi%C9]q[m
%b4UnrMNi049?NB<%%\n#)j73k#9D:fm''7is1HUKrc]dAs2Uc2YQ+AV=PUY)Z4V=/IJ]&,$Bc=6%-6X6K'316l2UPIs6[EHX$ej-
%<H**crMWeZWqfkqD!:e@DQ8uk+"R8Yjd^r&E[Lb^Pb(!UF.<Dr*3E"S?D+bm%3.gC$s07TaEJiE*Lsoh_EoFqpeMsTnPDXfEF/64
%5BZG*<%/9eOo)KJEc8qm5;NQ,n]_$*ro08.4$>9r^sKlCr5i19N7smDSi?hhSWq#N<sjfo6j,.?Eh[e_L#Npmh[ArYR'(1(n;B.s
%iHI.u]<i17[q^enriK#HX,'I&Pk(?2&>Qe?Lc#3jEje@MOU=V.9\enQ8m.T%j/?j@7eKtLpJ+RI<q3Mb?>)SO/TpbXIl7)..C[CQ
%9Sc,`JKS@b(ZFs6NZu.UKo`:^JDd20]bhK);/I1hq0k%2PckGj6Lc7X6?YDU!d`dP`j*"O<FiKW7m)A%e65iDRUF$2`'DB?LO0gP
%O([[;k>BLN(e_,PF/t5KTRD!a*ih"BFoW"2<oU2N1Ro8Xn4s%<O12uMMc*]2][+!8qMS]?M&,[[5rAfBm4*3JK<r_"8)QVKUUuH#
%X:so\ZX5_;n/iUJ#$hX0-BN@s%`"+u'-X4*2/&27V>%*VULO^eh-+[]>H%[V#(,ZlR!XBXTO7D\%U$n.$\LF0]"rH-4[5hooNRSa
%*1]LOS*QN3$\H>]?"Ae'J9L,=`;a:V^VW*LOKba'_s_Co/-J98;Qlh5SoCS(;BN>TAe;o2L+U4L(dJ40(/K;n--Xc&TKb+?^)%&u
%Z@ekQ/hRb5GMsL]2pmJ]<1m&rNOfefZ^CPSlNL-F4REJX'\1^)*E.tB=,+8-d6WaJ:*Qq)kOE\`iPhWm:$RiRPG`e(%2d#CbUo=J
%q8\p%*=F*g[G"u(@;*3JZcjdi/"p%=GmBll!(F-;NZ5O(\HhKOW=Yl.W\[OQ,m.IA.=a**T7CCJ2SfJPUSKps`Gui_AsCd)f?\p>
%p\ILP4j_V!0n0,^2DFqW^RlBc,6ne_D/V;.Tn>6q"EV>`2Uk\L82/BShu0OB9\&6t0CGp8_IH[>F3Kc6OYfEiE,!&&AcMVk48]2A
%el"p-]VQWuN>>B?Ng\pM_n2bu7OjSqU;GPqXL;#%CfbW@`E4S)`20l#B;ecTa`"WUhu)R2s.CS_[X2RL:sp#W91Fe^,iWaik[:=e
%H?G8%:1Wo"pKP*mfDIlXZMa$d5PksP!9OEL[b*QM=T\XYRf_$$MBIFF?+8QU[Zqk;#Rl1mVU%^(cEEl>mXP$<*81<N)FX9[hgO)E
%5!.GmJNn.g8i^!40A:[(bC_Par*lW-]`98$TKj9d3`/Y4`U0f;;?%<<cT-W#e.j[+B9`TO\;iTW<f*E@SV2euQG/Dn-aN7)n?a3n
%Eu19)-=I$tX,IJ0Mt==>jHKpeIU;M'D.p6-ahed3D\:QI`_IjVONAN"M4dfTAWOTlAHAgaMoaoe*QUZsPDk+72KZ.d2\6"cU)Juk
%ZDrqib]b=nA9[<+aI*$[bi!BM1kjrQB6Q'3<OV`A0Ts<!:l-^g87A,R5H)^.PmS>[!!/SrbV$,H&O2@I$4F[W.i+3;*NGi22^Xm-
%KOsauErYLZ:46>0#0MGOfhRorIT"4j-,!e0Hpu/2<0S)Y2VUi,*6,Ccr1dCs9S"j2N<B4@YPt;sTN9n2iQN3]Pl1J0NoQ>#.gbtt
%<@"N(%/F?`d.mOPXt<bnZ8#umZYb!SnS.5*+/Mk;%[0E]qWSCc_[_skl.UV+)"W-@b#CGRG]lGW=-3lqo"cp'ndJ/ha[MWW:[<3-
%hu2p!<E[@5e?*1O4Ko/2fcr4`!l:b)%Jl@Rq',R0o3:!3Sn<+JZ_[cB*3]!*g$JST)XR6(4'W6QLBZbOg'eYqR*@+V#jj[>Qe4^j
%+YpZTBj-!ZpSOA1h/U^Nn;sf)f!@,]Tm-^,jf$[F>r/0_.e9=@>TL9BXct"F9d0FNYYn&H#r3`\%jQaSPF\41(oP<c%%Rk1-!lTh
%`rKp7C;UuZ,pFhuUu>Qn3Pm)::VM;'EPVB.JaoJ4f<J\kmPU_9/u8[0qEZQPp#%!*a@M;l-o>['C[e"50=J&cp8Q!%:+!=]#_o7c
%+Ok?p(SZ<diYl9^fd[s\p5socb9>`Tkcr/b[R/F3`hGi9P>9#n0YG.T5p2PPHgWW^k7'Dn70E&8mNRi&J#jisV$pqNjYi!dJ,A_2
%,gNW2gX$G29U/qPCpD=;q.*G!ZTsU5?I.Wk6>D3p%8D$$Fktg.^'S=f[c,"h[VGKB?G#W*?="EtN0P^Sb"NOm`cJPfJdh@97HR;=
%ZB>+8:]X+W)L;29W!D,]k*)CE>gs9UpR]PV*"c=+s4ZO'5M:G!j!C==54/B]PI(T;_m6JJ)mf=gX0!k]NAY),,__'bQ:c8<OsZ[n
%(%ApI?%<KNGl7F&ci3rTb8s<[BJ@_ha_J!3Nk%.CgG&`&e^$c,NP[kgA-UF)<<6-@rF'1Epln3!duolWrS,\JQjUTlTfUXbC5F7h
%$601Q2*OCWSZ#>["$T*./)lIfi6`_(+F7W_Ttn38KFU(ZP%\b)6T,LT5oa2R[sHf-ND0?or:in$,FL_2W@8c9M?;[_AFQW:a@?n2
%>CZ&m3U.b-/9It.'_Q3.LfWT%0no_(-u>B5g&:<%U&(<[h2]cRoe2kQ#&=h3@sI`s,)m:oEOrtNhO)=E^8X0fe[G-!S[/f]L)^\Z
%/jpp^F%2;^Qk\^,Wc6@!e-Y]+ap'HPP*EUZOh)g13@n]fR+;c:7*1T%FJ&@fU(L6W-%U_!%oZA[dVqV:N8W:nfc`p*?*06>GT?mH
%o#GSr3?M;D+=q:7[Hr]!PW0<CD'[VmZdJ2]K(0#l<c9\?6m>nVUA@=eP8Th=.;7,fp\5O*D6QP8./%Dt!n[5IEZN,_=jL44i*sCF
%mOqei#9`<s9.R#cBBg(d[d&2Qm]JBPB5!RObFrB4F>PGqGW(LsYdh.KD^[%<\e<-*O_E(N=-ssq.KmMM+eiD-`8eW2l5_qZWd[CQ
%RR9-deILh(h5BC_`<m5Rl`s&1<^_A$B>#Q>_DAiD.1Rr2gq:HbF@?t%I94U6naSiV9QTdZ!"%+X42]c'K"AFdIKi++l/rOhqM#K$
%0BZhd5b4SZU%2YOhjoMYR\0+"-fCWo[nl_ATA.UD]qofHp=m@^r1F#g+92)MIf"Woci<B^rnFoSs8K5%p3nOlbmHJMNlEnGED_&5
%>b7rI."m&G@[CPG.9i'u<<rb)BA.4P+FUF;eM0ET.Tc^[Q&)9=26NVJd<Q',YdHI;95)ZiACX4d\p:7]<Z+n!Q?1#&?3Hh#dcN"e
%cPV@u3@nt>6Scjfk]?"e8s/F!P<;YrlB,&Xplt_V^e[rP(B&e]h,=`O[;."76Z&kdka]Cq7Rq9^M:"1)91Wf6f_fKuYbNU1NpuL'
%"jX.$It]XRWD`"P-8cOG\Sb-DA$c<_b8,\&)"NB'!_6\);BJ5lFJ!f)gN>e1I+UHB/+?*DC6OkH:6Nq$/5g"H3kkpf$>ED"M7&qC
%@P*(BnIa1D_7QlGf"i4%nBUI=YmP_@C)f+eH3pB4+\ouNQD+J'bP(Ul.t19bWeL9Mm:'5F*6=je4'NSG_Wh5K"hE68a&Ac>/4Ht8
%)`"kMp@/N(k2SFLnJ&E;h5U>-\&RfBhRE?>5qC#?IMX1"p2/f<fiCCU3\;T@%(&>KGWpepYspk9%-A/LYc1$4`_<99X&sdlPf"fB
%&K3k%(0C^AL0imccPZ=0or=^ml%NckLsM;pU'i8@RY:Tp<pY2>6&S#/k^XGl-FJ(h,D_2TbE]JTB7plF1@K9sd;fsZqXjN_ZI1+_
%/P+ZS54?AQ0e/D&pSBa6f0,mi>r@#Dk7u%B#_^),BX?Mn$r5<G<5jk2\PYGL.6#^=[oYMqE@?(s6/D1hags1p3'Sd-'6TGk^$G$m
%[k+5AH:\C68g5uo910ZZOH%WIef+-I?,\4Qm+45Je<'me;'QoOd[K]@lDoTZm4-Z&`!g2_[qa.^Yj1h1ZFUrA-['ni$6t/,BsO4'
%,Ai<"CQ&:C+mR@6'5C(])Q'EJNl4FEPZrY/%8Ct>2(T8)CKfEQ:@%6tViU`9cYh_13`s`.rT/D$fZGnfZ1I7(\Gu==g:o>E!TKg-
%(%iG40L@?mBD:d:2:oh4KLI!\Zn48LHi_XV/[+7l$dC&'^:T(<#OI^16'O2Po)"s9S`U]DRPo@9SAP2[3ugVL'6-!6J8d+)5LnaH
%h:SWE4\_sj&S_*<K2)S6ThU*oaC/!&eJR":==/hR%AdkQ.%8+D--3i<IHj1Fc)ppI?d"H;Zh.@n7:+DB(s1BIOHS(\RgH0;Jo?F9
%.?r[Qq[)0U(bX@O(?`BVFYXnlVkFUr[FT1*S8m#Oo3l)0]C?,dhQX_m7-K]B:u-\k""5g`/bOJE++Qb+\#E5oXHZEo_m5QuS7a*U
%e9e)[S%":rCA4>#>1XqDiTIL3q%utc&I9W<M@OF&hh,9=*[0k%HJ39mqDQGDZbH%N9b7_ngI/UK0X\R[0=!PcE2Hi-D&(^EFTKI0
%T:8pWL2VBGA/WYr7f[e5:IaW-ceuRk-dH2a@1C=ianCS_K>s'_F,g5/d]$QE'i/Ar\A=>^;aj2:DNJ7GnpIY)?uhl,*OW8%$W.GF
%fT_0M7TE.Ah=buQ2FN9dOK"qbCaO-P<R;(iHN%."L<bHi]B:8S<+TD!#DaLn.0G=%df52W$NBFVn%IHVWsS*GY[6>(kGW%>-)mG(
%@%DVebXS:K\P+(<`f1QZQ$?/q"*[+".H]W?Yc6*boSd6+PUh@l)G8$UMmoFY_2h]&.WDSu)M&kt.aOe,3bV@U2FLcN=V*N4(aUZW
%:I:qK:F#8L\nl,)=@GJ(4\/NEgd?\urVB=m@6#E8*.!(85h)mmRf!WF:/IE4S@f'Y['\`Sf5Oehl+EFV(eJ'XlE8Q)ea@aeUL%iZ
%OmeTXcA\Hc2nt,E30,H9jJ_CDUeoIZ>AZgU38u2Q&!!LN+Z:2Y/m,5j/muY(("6'nY5?['kR9Iqqg))/N4rA`$nLs,odQuPC3]68
%^W9XW\12sGK)6MRApo?Ti%"N.4<b7An5:@Ecmj\NPV3bi_BhjBcVh9dC2iaThk-7L9V3=KQf2GYphWcoYA??e0X9-23@@F!mGZ:S
%iPJHfq_ElBflP`((!Y,=nN,C(^gmt6^0IgQ%>epM;OA;Q2.<)g^l=U<<EWUk3bh]pk,$^Vbp&BT@4dQMi$6eml^AR!)mkJ$DbCJK
%.u8e;OSae]/M1+')1.'YE@_r0,ZPH+@TNpaL,8ihIJ#h4/(uZDDO%%39ONJ:KqiIQU1ST0@4=d]hUs>eV./8[%6;nIWo;+#*#gX`
%Q=80uYI=b"*^P!HK^:&f7ikJ!J&&#Z\=R$.K0L-?a`p7+`hE@/fgC#7XXG4<dP^ElNg'g.0.%Hp\@RMr76kWV^m7Wj2$5\E@(.R!
%a31Nc$^$\5BkNa[$pt?g0'`p=6r$5>CAFueMA,'7(]HQB4-S#oIhtTmoY2roZbQeUi/MkYSV-9BC6B/X$Wtp`%+gHkcW3rc0oFk9
%CTg>HW"d4;%I7R$@-/c_DI00YftP)sI*?Vi9cYc%^FPV=*$WZ9e[\a=8aN^7JF7Y#_uk8@%f62N`DXXgG9..K5WjO]E-Vq!dmV<l
%XD8Tn&!!X?'Um4icINOQKoSYSQltSDc?7bc;d?>^]6ks#SZ2)VA;%_A9L]%c.H$+?a?P)t-nI#c<ZG9(oWfc3'qq>?+BBaY?!L\V
%cs)8e3F8_*\Zh,8F.bG@W#^3i._lSX?%%e+=LFCAX_Jeaa\fne>j5Q8!'Y::<2=*C:DNIXHUafQm&R[na$+n;O2o!2K.c<2i\2[1
%Je@T@-3(?ZA)i#&$^"hZ>dqD#*E[DW/e2K:;.^s9o,^?!`>R*]eW8*5e^B1Z93Y9hl'0s8D+>:hZVF,m[R%KEpCL=,'NE'-X7_mt
%N<L#5E(_<ZEaOaoSp5^YoVn/#S\0B7W&6km$%X)&fG-qCg8Y3[NH2Dj.ZF`DMG?6e.LSf1I5c+hVeZ=TZu<A$V\V^!9uZh2.'B!G
%CpVIN\LN6\fpcA=e8piEM+PgC)9;9s]hn%GnMoZ&n`Bt,!kt5VEA#iK^i361=n[+foiB\fm]YKu:6JHLU]LNSs2nd-\dnti_p13(
%0MP0;]frAZQaONn.:Bd5:gp,SJQ(uok;X8`,uW:]g3/hQIOu^;;,WA2[;f/71%JNE>(hZ</]sg[Ab=!"4DRqE"dR^3)\T%;5\;:L
%@r`fo8FV`Q#i&3PY]Oa(UuoIQ3Y)g6PRZJXfr9#D4fs98?R!nG]S4`&;"P0`Q]R2R(sKilgN(BCW^`u>Sh&g*#Be['A/:M@-`kAn
%Lf`hWocdl$p6>7[7LjQfe$@$S)%PO5Dkar+omPKe?Y-5K?B+VM88>N$7TtZq1'rm0#NbsOoIsLo&sr*nW,%;%OsMU\P!Z.A(fuP@
%>[$DfpOcG&`@pY3her!WenkU7g)L[L;[/D*$`*KsbdJFa*4qCGo;ME#VOTES0_5#Naj,Gq:$b3&9"Com3-R4a]T(`#l=<AsZC1l1
%\Ordj@=@9.OgSC%-H]U>AS?97d*8CT0NDadMU!pGfV<Ce-kqVX"_)lm-P!B?f^)nn\=Ii.knYY%-@oQ@f"G^KKr>MB&Mt&`<Y1&)
%X>^.G/-+F8%W*RkF%UR$[8j[8;-Nm$MQj.t!QDn_8m`2-SRNtH'02fLl7f'.g:Wf6G73fi5AXl77?ae0&k,U\3=eVXa9DEu2XO8K
%h;Xnof:g4&b(<=/A/0;A%j@pfP-jX*>ctpDD1Etf5?EX7UFJ/D4j^Ys]rF\Q&/SNj8N#]cP:9A2J(Ona0)_Jd0$n[k1FQQFQ4D;*
%LQeqPLi,Rk*P1gHpq]!8a#@6jE#r4KrF4AhokrdN'\8/77B9M/7?Fau*Zpk*;%tt5p\SSO+%]t8T^4+V`(8I3i"_FDFlbi?XF=oh
%BoG"&Enb"L'Ic2ifi7Tsn'[M6j[X#0A'c1q9rc8VZ-hqhdgf'='m4#DNO0fnNY't1hSR;q!!+7YJP^QHWfgoRqFb)CU9gk3bmkT=
%V6`U-j5Ls4C@/obr9^O:5gJg[N<P%-1X\S8;:Xp]V:\`!6j1(\kUX1GT5c\O.K(lkAf)0]c.q]=HL1P6:;Z?0GKq+XIu#ES("2OW
%73QOO>C/%Lb-EZdM88]H/Jc!$;!nMh"?Y,S5/ikj,0M8/PX(C1V!mq.2:cs,Z-(inM]K$P0KN-4=7!4-&Kf](GFLIIMju[=J9qY3
%@BY't'1?U3@Oame!JO*hnYCJ"'Q2)p&[Fh!?Dp1B_-i'uFf&>*Y3Ng4<PG#r^#n`&f.^'Cb"rmKT3KDbWV1=5Vr>NX#nb#1HPEN-
%VoE*m8P%c`?fdIkN#o[Pf_$4m7J;er'5BoMhl.h_DT5rs0V9o9068+u<nsBTFqF.V@FcLC9+HW<h##ZWX;#uZG-=R&EU-mg,MW-"
%G);Jf?S/_-0#``&FfTK,m.r]h3ZW>i&C@gQ=El_,Aq>"fFp<%rgo'T!UPRQW,2hO86hcRF]\Q2M7._QPO*`b4LblT__.<Am4lXPg
%&P[@p`WK,acb4a]e_Af#_q*YE\`Ib%N3F\uPm:!CH]=NJC'#Ch+_jt<$R@FmT4`;9PLZId4sW/h*fGJ97&rV01rO:/W1AHggHkM3
%@Q=24;3HtV;T'-#FPZlV'\n@$O0\KM_ZW&&%(PbPS\8QX8u.g,\L9E0<,Q=ZLFl_`^-EmU313-]8q\EiRLpidr_,W)B)U5c,C4u3
%PO1A/Vo]*'<SX:-e2IKWOBQ2SFO4'2UQ<JB_',FIW1/s@f68Ktdjodsm4guVXq:ZqL7a!i2/L-dP1$[&O#-V*&b8V-MiEM;4sD]&
%3T\6=J@&,^]6sLc/0*FfX0g,SJJ&"kU!sU$gH5bI.(?J_7EAc:(Es*?m#2:<me.1&:99OWB[<i3AVubM4rMhk#/NXu]lO@m\%?pB
%L*ds-7kL/,<=)S/4(E.oUL.j,^.1,WQ%e6`O5+m4!ajMHJZ=V\SqOU`M>(jC;@keN.Y#^rBsZVFYTD%&H"qNJ>3H`MCr8Ari)j&M
%kMm,#m,'&$3OZ`O-(4G+LH.Dend:f"KU"d011"W#_TIC`?'L8%q)*d4l*KHE`$,B@2b&d]n5Y2iTf7#.K(U6)k2dR>+gOcRn+2qm
%\TRoAA"-M6K@1_%U3FtAF/tbV(cFq^4HpnHXJA/`r[AmB+L([=KR/NoVW_d+'+!M?c;g'g8qo[4V(4A]9<_r8#%hs@31J)np$YoZ
%M0S+BbYu/[eVb85d#r;\UF^'Ooi.A*[`EE2P3.B\mN]%46eUL\j85Z5nRGdUDi?^/6le+6C^''BTAWkUen)$bSb"Yo<_":,;Bd);
%<ILT@/unu!"ZdJ*=lK82R"#bT:qg`u;6n*D05%`X%gLG+=LVHKj9o.^qVXL=V5iD'gpr+.MmR=f`=K4hk5`5<V1mFJGXj*ihZ25\
%p>qF2Xs[fY;F#3%FFCnZKR*XOZO#.2^gJR.7c/Cq08CI]IoGVmEGB4t/nld0G^9?_8N?$4APJDcV9.TC@Tq-)/P2sp#)m+'m""B7
%Zs4E[lsS0s'`._2qbYnHIU2<]$iO!/,SSF%'7R2dX/nA?+'\Hna#3Be0dO?7#'cbnGGMk#3&4jb4=OGl\:\U&\2OF08i<I!RkP7_
%JS*6k.B'hAFQ\Rt1Q-MpUuB1f6IaO68qdQf)+;fA1nu1$.5c^U7]CuKIm^nq%!TZ[?&tj[ZX=NK&8L0`CE69eYR0V([ABiY6rur/
%6W'VS_0]G<A\$;fdhD29Ge@ueAnaYJ?:F@RWg+X".qo#RhdkV/)<;lH$`!NtZ_NEt/CneY/u0D#p1&!:)LtPlAn1nXK?rdS_daW+
%$VZ@HG",P603^ESa&%,>&g]epN)P,9CQo>m[11WWYP)-,mZ@-8UW*A7[('L=Za0R'%E%A<:VPg]2=q\MDE&*7bSW(q<5Tk;Xd<4!
%?b12rCY<EaLs3t+_&-Qu6)_sdc0eTsfs7fm'TQW6!,@(gJ$L$#Xm+-I;frW;*`Y-#9ph?k+el"4+A2c<Y])`>#Sq(RHZuBc@W%Wb
%MGIMM8HBAN(Wa02\i3A^]oop-;"PdkKaM6P%au4ij<)sE>JBVd-#%N0'\ZrY9D')9CY7,L*P2;W3>Ul#G%\*RStq8MZY25>ibd+e
%g"@Nr/)5eD2_`Y/<$;UdnEDF;C"EX15O)]'%kf-Sn.LlT2H:!MB@8XM/'QRkh,#,jpppU>i`9L4`>fY!g3Kbs.-2KaMnGPM"6]lH
%E>iaj-_J=@l>K\Wb&t%(^2X!JX[SC>?q[DF"<eqC$7lW%NQ3&G0u8pUkbb%;`'m8Y9O*k[fX)h.3<e]+Un"/[6]JLMi,DDhN;7!r
%s6S/i1Log%`R;r87Dr!M'MCR#'A#fKmp[f5e-B^k,\2A+X!cp>YuJ)jQJSG1_iAhCg9Q1hdXG-ao@cppVGpGLiHf-HAuTlM+8A7P
%qaLY)d^XCL%d\TQ$WM&aql/8^L9INj^$E&P/BPCMe\G8>ImnU$SihO#IJeu["0\4.rL?-&:L.8jJg2DD3rO>s`O7)%<iqadPiVXS
%8SA*Z,mR2nTn=[gJJ[6R0j6LL8]Hpf>>#DIk\-M9S%<l=;34nEN:\CnV5Jo/Si3RSMe-V57)NSj1ei\R]-uiPfb5M8dlW-56?9N\
%p4j*nE$dKA(5o3j6RcH'QPjI]AXLcF7@!W:LGaY*[.<hu1qi>YXIO;2ASF*4^#0iuB]>$c7A+AY@tT;OM'pop+Lomp[C1<"R(Pj+
%9e,?H5+0(N=T(R0TVSc"dk,SGG*g.*bs>;0DAE%c>7$L!NAYnd;ieF1hJgr+\>"-YOZI^?hBCa2BFQD!&V%g&<./Aj)C+LGOQ.1+
%%FJ5I;r91*5I]eThPH(9D)Ue^8ko5FT9a)99Yr*s-_U\,@V`1-1=T/r8%kB>+B7TQ<&"pe)`mn8@7+M_WW2aP>AK4gO8Q@+nFK?u
%F*)OZLiCdsFFnQ_)3sDBICWuo'LespFQh@^p'f.)Uk.R.QE1klo=gcrPuKW\Hpf&$C'.G8ouT2lH-HL"k"N^#XLU;\qfGC4jhfPf
%*,Ji%Z'?'%EWM]!]gL;JI[@C<p()uAN_G3$ZiZK-f2c\=WuI`r[%[,5Y"hicVd1[LARS%GmPTAS3$j8l%#pI>lbujj"_nrEeQFG?
%.S>4ibOqYb[6Saf>ZMMV'%'E_%d"Vrf-46_nuG]QE&$XLHI8e*[<3"ePqR[b(_0k`idmA/4-SM<qXtuOm%]Q_j44B#HC>"E,%HVJ
%l]@]9FMJH%1k(>/F]X0:qZWJY>HB6nWAt1dXnk#hO%94?%0P!Fk#gf3p:WMkLgN/GR3So>M/BZ!AOta;&LE3iJ8mst2VP>P-U;gE
%49D0/47]:aInQTY!0A^nr[/Xsi75M9!:q2Fec\plm-A[2Z7=ntN<,o!!SBDFa51!$!!uOj,$g#%,L.-@1P-/lS,0Zp9+(8L=;s2n
%Y-`nPT.A@%#TEB:FLlmk@`&^JEE&:2PEB>u2=Ej[</4a[1#>JMRPo.:%;"mM\2CRaIGM:O2Yh*G'[&oEPrQaEB"s8tK^Z%F7I5CP
%rVgfNs'0[)Y<Ph^=>k-89!4LRm_AhYGq/1*R']Q;m+CC>ljZd`]R3PeUE7V<AqmaU_Y^JNid5EMUL/WT'QXmW['b7G>$(Z7#<R&i
%"<s0\>0&d?EgV%b&L)Qr??bMA2pcRF;jP,Qir'D#&,Ih?2p)6dG8*T-/V6AB>8:R%C#jYP$3PMhN0ZkZf6UNX_/A(&R&)So'UpYo
%,c><5-G76!;@Mbc6Om\Er4/#O$pM&a!"d5RW]3hPDAnmdNc<?;<tsbP'6a+n1!dAk1TROP=d$!G&M;VjPJW3%g<A6HWQKinR,#5k
%Mb@<UQ?^.3F^UWM:bZT+D/BEC?1U0%:+Rt(*BJ`o?;A%%%Gi^<gA6o4ZkZ"B8(C>(a;o_S+pd^I1&ap1TcJb7s2Cf6$GUFHh=@hO
%Un2:H40&F'Kq5B*\,"8Ejd>IAj;'BuS.EhDLS<YWUNkB%f@$1FF].f[F!-5D1In/SaRkGjq@U1tn#5PugtHWL9qn&t-]e4s39=L/
%5(EI_`idOdLO[(-]6Y-C>3a]a`$1d%U=!%%Z=e!^G'%l(,_6$'`N:.t57@ZKL'20"FX@aPY@&Mk&^W1hk)-,9hX21qN<>o;br/f:
%65#C<.*HNfj7g"ri,MAJjQ_L)<+Pfl-r:FU0?mNaQcsQH&ek3;-\Lp-$ht6B5BuFUDj2tFp52$:@bOlRDJ^ok#Z+.8G)^rP0,$`b
%7;PR[g645WcSD%g%s0p1.2-n[J:9)3+#@8):t=BpdB/jBTL/^r>0S@<<DCl`F6=H=QStfc5mrCG^nK9V(<\$9(g/P^TnJ@9<65V,
%s6-!(D[*]_oos';$@>7AEGmQf^&\mOb#o0s6?+W<ql*%pZDJdh\q*47UjEeD9i,iI/2'l_2cT><EH_>odfN!JcbI,Hb('=D[^*H<
%jXG/T&^2XRKr#3$BdbT-s%)fd.nZ8p*2c<U]N7s]qnlimj:`Ym8SRJ,m[[R@VbhIs$rT\+MT^$An>7$Y/ZVYV7='L@"X-bbFnKsf
%*[0lmhZAL&@$@1kEb#<^;rI!?[siU_ibLf;d-Ppq5T]%9J]gNQd2[!lG#<9P3@-CnDY;1)mR+<m@-l$Yb`6f5*`XM-D-seIeVAE?
%2NXQSnH=`UU4R%kf,;ubUR+M_CIspQQm`E<?,_Z%-r%nmOiDjRUMgR8l1P682&-J<[[HYfFX[Sm_8ZA)S'6n(:30%qi&FYGbKS8S
%jP3uuE--)SScP?[&\9!IA/\C#U/YZ].7N@DSrq5tp>$N;\!]X[<oatnXHMVKBud?d"n$6-mUo^L2I4nsY&UB1W2BO\PM,mi'Hjd0
%[78u)l6Ce)>IFA%*:eJQa^\Q)`;ICjW4T2^->L7NImu0NT2K8d#;0IG/)Cg3.,]4-(24=jS4<?QPR:H&Q/F&,N3<T*:iTgNn'*e7
%7Joq]_*X21TEFgXg@Hp71"C[Ld,3O!Uo46q,UY6LGn2W;Dm3HRGUjFKX22e]G;c[;F@0nb*3toIhT!R`mlUTQ1^$Z=#6RqYRV*ck
%1"rXgAG+ZJ0"b>If\E=:0$mPA2\cNtrmR60]L%j4ncJsn'9V8'9>*T?JuSs3a/oh-4983_YlZ+10!^;TJ$@HlYS<hSWpoR9G=e)M
%5)">9JMEfnOBTpPXmB5[&t)3jPt/bJJ;)2gCSm,r2*$HorD3?UYU.J)j;=hT<J&9qIDESkC<oh*$#F?$326mKPk^>pk_;UL;";)^
%n,/8#\@#@qp,^n</]GD]SZVi+8JlT]*B/)4L=8PTRZRK1euuRL_Up>QBT4S"I+Yru[4IY^/_B#SdjT4<E<3KGaa3U!@JIldq#n4m
%8@bhe8g'nBA_3sg,M#[,/sqRn$;l[?nl"#\h8e$n3,KcN?i&!Fb\[qT)6je9NPR/GhZZ,lA_@u:rY_b#A%a"bWQ"REpredCY<Bk0
%Th5Ns:g,m/=B;[4AY&pJ-3S=\RR<Cr2GHZe>&iU5V,BL;dhcek5CNl3ppreU'XBMZ/ZgeOUeF0Y[f@01W&,?KCB5^&3>PK+79f,^
%f_N3]kCcm>\*?DDOJSNoh:VFh"7!,?7K#+]&0@75:Uen%j%+Xi`rE!kI*l-3Gs/6%,)K8j1RVK?,u0T!4CsCX>`YiXW1,aOep%T<
%0E36mAIWJmI>1E3N#7Oto5Tc0H+h$l$Rmg@Hd6D80(7>!;X,9XmVgt2lZotiPXi]MZeAH(c0Y72GFd%q\OB3kHL8d[oamG<rA>l>
%e1GW.`GpItj[X.2.&ERX6dNQ*)R0[VLi'\HQe6tl#3dF'em'@5Fl@pp4bj'"Ha6F%?*UeVrM(?7i4pAPhX.0nUT0#BJL6X6iaZRh
%RI<;Jb\Y#?6VBq@)q%:Z+@ORM`TVDZO46@><XC?XPRE`b&p'mb@O3$'+4enZ++VL`."Xg3orPum91QI`+\Y%4rYFpr-iqPGa!mrr
%o'$c5Erk.8Xm(OlE)%uZ&NO8J7U&`U1lt)@+hL5Ee*$j1JcL$'B%#5Vh$C]f8g4:?C;2aJfHe>jUnDg/R5.@hA:u.AKmYeCm@sj.
%j!M5/S$?aDSg3J.1kfY&FBp-d$sY<%N(r)\!H+FVr/_BU#f@k4&'*GL*P&g<0*,RO(K*8%V-H;ZWJ*\lD[0/$&i@#bi+nIR?XP.E
%J9-C.:'jO<WSaqKD\=9<45pM`U2bg$A5QgkJYI/>&+Mjh$?CsUA`t7tM9%igM6\Yr;End-9e"!p9SMKJF3<-"LOC%m4JGieUg%0h
%&Dq$f1?N=6P5@Y[@8g3a;f%.hqQ$H%b;3?I;$Xqp7u\l(.&5T493-bR5<SL3"T#Fk]^.Cj@MP*OEk9e3NN_69WCOmSpF_Ote]TY7
%6$?rACleR=HMc_dqpNR&*t.VoSC!;i'A?XnE.0ik[USWJ2b,!D>#i)pA^l`.N97rFSQOR&Dc:Gc@bW:K9T6),mn7'n*)51'#BEq.
%p^"KKZ+PpqI)La)JrUe8V38b!:maH@FK9qSi.MpE]f`_;d8L,f<q_/)aWido>AoY,!%hV)/B(^I^/b[fe=MtD+H2/n%D'$-QW2#0
%T$(.Xb)&e&C&(2BVGB\WGJa0H7LeJJLTLnV7W,YrWNp>m)$Q@@-pra&h/tJ>UF)?>;`4`oA)]q;cS8lu0n&tPJ4aNHHdg=+SNPj:
%A.ZAHjVc:!l1gK7;sAjPa3>'H'Qb)SFMQ80:@8)k'"A/'nB$I`cIVl.#Q/L)I2RR"7qdUmJaq2<6MK:mK7"P?Xj[]gE6Noi:q1i7
%7j0r<__2dHgHtZB/5;koitte=70Ba/[!(SJmG==!D:(m_%>Dnob-?JR8L]/;>pB=feWn=8YjZZE=!q/co"IV5O"=D5--kaSHG<V-
%1'=X3dS1uEWYIemFGm"?9o+JBqopT@Q$[bNR\uN/H9=N3o2MXK1%2+.r/@opWIto5_4s,*^(e79qihXD2(Y$"e!#[A\R0Yi1+#qJ
%l?A26F)EnJZ:1Jg^,V@O]@+>U6o7F!)m)I1IHrn.pX&8)@iq#[QS.BD7cbGrRI5b0&kC_BiF^4@1/qp^S+KQqK3_$VGhg)I'VH`S
%8/,>=Rb-?&hhPF))mRl'?1M_i$L*fO'!Or2(PZU#]sP`7)%oftiubgh[Ymap??`=bBrTCf4(93*.=6uO7l>^"<t=V3"5ajF6Fp0$
%Kl^7"+@iLVJdC%K`(m8/5&nlY9-CdjiAou7"BAN9QPoA#JfOJdL//0,#n\?%nYdUe2q4f?<@_rkT5'F"Xq]uh)a0Z8gK.tIm?_\q
%3-7TuDO2c'A*``;;p7*$/>E\JW\OjCbjBl#W^R2Jb\_CDGiP)jXGO$*q,C3t$eZh0V2ss,UG)7@[j`M][Y,4;C/sS7J`<l!F=>1#
%ZbreCOO7MO_&l$:O94=NZE%&@'t.ZXj=J'5hFt4[RX78;LhTHp$iBY2@LW/$p<up?:UU't+0)EmZ5"(I+Vl)cEK_)TZe%p`/GF4]
%b:ipV,2c.k&N;"VqcbeOL9?n0^IPK30!HHkL40e=6+4Z%'cECr15UmZrRl>Nk3OrT_6\B.cbIcADfR%M:sVXEjr(j21l1f_R[,1,
%Bm(j<=pYt0,]/qc1uE,6RNbn-7bircoWW\(,rJ^&Q;%l&1E`c<Y0'Gd/iZA!Dr$k60L#Z%LBL$iRJiPB@IS+Ll!lLd=>rkbq]@os
%&cRYA"[je<ST*G>U5,l_M<5g9n]BMUMCk&S#U)KA$dq,f*'mu[8<UrD=b4"h$`;eLB92Rm't_lj9gp!Nhr&E&1M8W[LnedE,eOsQ
%QHWTnT-1tmX=\8WUS=\S9!G+@-]8>!>P4ET;b1V&(Y"!`hh4Y:09Q'LRB5&@hcCn0,ZE`P5O$4$ht^o3FoA^Ao+8i@[AV=P'\[pI
%PIZjdb]PeP-df%.'AGOYO3]5<N-eRr-F9pporQUq(6plQV7\P+7,6s<F*&a$SSb[de/8p>oUu)jB]19(^S>a5,k;@p(QPri^oU!(
%b79m7cb3^"HdeQOH(Rmt4iPf7KR9:43I_89=aX(Np/nmcBQu[FQSVtS(ATSbbXmtl_bDgs/9S3'E[M%]7>_H,N`+tFnAS=Rfn<q@
%Zb2!tAi*G0'!@.N:MUu7j?12@NtD9m7FCTS)Tat#HJ/rgq-7\CkBMY8SA]m2!^2\+YoS$1;7@;e)AG<@P012-95_X$ZUjHkeX<[q
%KJ7gTPD1o4hkHQe>tEN>!U!j)^*+td7OuEd]`=40Lu5<in)D?9.T4NZ'lql3UG?")(9qSHPWgE#0Z0`XP4<GEj;J`jQ0?DI26jie
%b=!P+<M8X:o=bWZ;4XOUbFO%L0GYF?(60r%rk%$M@HS&QA$bJ/MY2?HecoEUaTP9cd@_@C(F9`-d[#$I-1T19DuB.qZbLTT:U!/+
%4!/m6b`a`cPa-?`jB>qY$@>c25_W/BC^C?M@(E<:]fmf0.!?O1UE)XRgkeh$qH*nghgp4uo$)!4OOdhGBd4doZ;>4&4$bFDiImEA
%W^qesN.A-k"KJX.QSn^!N&#$N;Sld;Trm4D1MA:.'M3ZW3DE1C"_,\5V03M)QjF%NV+R<70VJ1lb=H5N+jL2j/9Ur^*)^F,-d6gn
%^u()O.3HV+Z)'X"O8IAuE:i6-h5!BhV&b$E#fAe+@/UbP^:i;pSd+h!P.1=&C!UA(P0/&+Ymhm24;+J)jC)Q#qY5Jn8ZI5W3Re\O
%g8#QNf"Lmq\aS&&]m$7l]QjZd/76c#?C3lSrZ$I'C.T<o?b`f5&fcA#/W_L8E_tdjinaBX7<o\(pa'!9+DoqN7bXe6(\V$aO%gXZ
%KnUHlXr>-QWJ;=JT2Zjip"Wk+=5%9NkUT[VVKs>FLV/8kO@Zh^#Jh_\G2V9&d#UE#*<,2`XTo1tB4SGLO._819P8c"7C31XOU-]3
%.3@*6E8!UYX`8H,DAc]0N#D$:K+t>*aQTY[0E"h\fOf6^#TBVsjmu-S"@<-`*@.tMH8,U[DQV2^3QF_%iDfR"RrR:=Sfhe518(\V
%P6Y$O&i6a#U8^Gc`eoQDW>TRFVMQkhl7Ln?;m/JVQ&/*%.^bLke9)nYHrr<tBZfJIO3_[V`)(;5"@U53p<17dT-1<AFDS[1PMC@U
%*#P>4?:ba*!/+2t>s&N6%u\k@pJ[*,bg$N5R!oU7'ai>2<3<4P("I:_"Z4-u-R2UL,@HI$.h8)3A"1:UG;HG7a6;PqXiN>rUh:)J
%RlSgG[Blbj\0TaY"[jd$8DiZ;$ip:(/aJF$gWb\;[Hi7>\iC(mFT16SehSKGh+/=P%8t7C<jCi,[uQtf5SFkMLg'Ai^)H^SdrVDr
%IT`AO<(15Q6bW6Jm?LYFEe.lD*:]B>RmZ$Ye8Np#)*bVFb/NLC$qH[BY<XS^8!$u6W[[B';o=<7K'.g.--aEm!q+%A'^>rl:='7i
%D,#lOeYHAjTlSHlFTMn+n)1^<-or%d2;b4t`O&,L/]%\g+hFXXJEZ9a.OiQS=-`&s60s"@X2]%3pIX\'"ha'8H+3&o_mBXu/W]+!
%[CdIPGOol'DYmQ2:@t64%K%)NZJJ.NEA&MFKntn24E:JkasWj`Ks]@9a=j\TPDH"<!qAY"s(kQAJs3i0IT[)m*\5L_N8bgF6SR^*
%Qm(A@'2/gO<KTYVTaS?<V/kDq?ZDoQT6!j:YR]))3W_n+Tnl`HiZ+74>SBNgS-[O04>W6:ctC.+M*<4YUp`Y0m;n_'7!2[\I9Q5F
%/DKKl@UBk"RAb,^%/RThM.nKWa6BF?S;4#%XHaRB'hY2i3#82]PhM:hPfV71.CUkc$Q2RM@G:6mK/O/OWB(;^NM_6;2sCFB%N#^X
%M>:!4p9_o>0?hmSr48[.#u8XW]AL0B<'g`'f(5Tq-mWf1;=e]Y1PYY36nRalih=D>Of]iWC&sG78+[]\<D*H^oXZ7W<H6Fm)*.eg
%c)L#$nPla3g%A/\obBjLU2d'+ZJ:S6($*n#=*m/Amq29)b*TbO669^L5[0S%$!sTtH+,%JM>9]H`/AW_DhR<F'KC@aU^-+/=\Y"3
%,F:-D7+$Ai.5dcaI^O]`qo*b,n+C0rW"cM`Farlt^)+\^4SNaDW(Ms+W)<3g2oHd[,-_FF"HfG7)%ePr>ZnW$]&k5UW;kt,,DqPA
%>=1I%"hj0;Ch2MjiI!TP+84WCdWI^"Yc(t+O]hdAl'Lu(4RP]0(Y>S.S[=d,[gSR[Z$if"h+*]Gp`X\0j3m2B<M+Vr)_^guR5M@,
%Oj^6Nn('3l-+srI!u't$-?Ukq6h7TcF55g-dSrd^D/!aP7t:7$E+arWLD/\og29*+\jgUn*CFkZ?qIqF81S(2h)]V5V!X^q?$A.&
%ZX.r.cPXtG8jbZ')>9-_F3ct-Ia';9(K,#,*Mf_&H)8#4R;O;`A[93o()7K7k"9uP!*S+f(n82`_.\M/BZ?oJP@N\kjdl+ZWQD16
%Yt0!O\rs88KjA<nE>d:/BfZ<kV0eDV_dH6T]'(=:hm:Ej<J/V6OWqd=IIe\[a?gtL*moj`2)CGF5$CH3.'okT5s5aBrLVi`Mp/1N
%Z>taUh=$[G$@h2_.X.Rt*V##i4C?[>7B>#:rR]DI-@4Hu)V#W2cD0WTmN"kr8[(U2jQhu1,d#n3gS)_<;u>'GZi+<8]_EbS[.rVa
%JFY`Ij*nA2nj&(>#U;W&"17s.N0^VV!A/-"6`@m<V&;'\GNGgLCgLf!AUW?kSp!YO;@[q@Y>%Eq8`?n:Zjc.&^8/"bP]#q:/s/OC
%X<c/#=QIREY/\1FEL3)1cs,%S@HBccQ0"ECaBRI#`[^k*B=\<d+Qa)jhp,9K"u%5V`tY9$T?!hsI=Np"r+1#mqrPC45FaJ1Dh;Fd
%g9j9GC&"gT.T]Wg7g,'TKjn)GQ*7;QFsPKSZ<_>7Dn!UrWS/aDRQ3d7W]3nOq2Mu$%P,fj1)FpM<pM'@A3i&Yfn!s!QFLmt"nRFS
%bg[eij0@+N&lIuTAU]k@d<]!T<@-%-GRpe7&OqB'YGQ%*qL&RnGo;r`^Mi0l$i@gOLois93s06N^!eQ5Vt3mRPuOJjCD>K^,&7':
%@KIDU!+E@KmYA%c.^=t%WO/#W,DWZR61pBo/?<rdDDYh<bEGJn?G2gW?h[=#VZZVIX5&'bQ6Ak98MIG42`I@Rc&jbL<G;q244kYZ
%Xk53HU9OGmcqpmKLb/)rP</YsG0[]^OKKR16MeKOq)+/ADEs\nM[Z,B-4Z4IkuFT`rfRWGo=K!l2aQ&A@8#-q_%pZ+(6O#t&Ba5%
%q:Q82``-i"m?_'!=3)AbN.E[b3oO/a`dg<V``i*Kf\OkM[ka@#`d-iE;V,6>!-UD!<HFGjD8)?nZ&gSLPEZ()#&OBn<UVeuA'(X!
%;58d[)@Fr[*rH*9_%Op%`,#%.?VS<`;$dQI3s`DZAkD`&H^Yuh<oN-<SAaLmlaBc_2ZC5!Xb]RHYr%>GAtb#a,ZBgX2^/hpGhOU7
%A\FS+\+=ig-<YD*ntu,F5:p^=^.f5D&j(Gp*oBn(-K]NjLWgKN10MM8[JS*u*f?47oWo`WY9YCfb!Tb1,#rPUM.T<(cAu2s3-TW\
%le^@NrW:4jn95L^S\+CX:f3:PX8`m.'^h:Np/O]e3h/ae'VE,DII"A@8oGkNR.*%qP09DDBD%Wc]/"sP#q7/64W[eih9L\(V1L,0
%7XI\e:h:<6W[2)<_.=7n-'PZVN.?`4-*i9D%T[W7Q/lM,+!FFPn\,LXE#'*^<a)NW]R^[^VE$'8=02S*gFO<*<c#%&BD,8J*2b&l
%kOZP@N_^"g90B\t?XRg(iRL/FODu8pCA.AMda@3+-(X$4DV'E#?TE"/&q&/fQ.(jPbdVEbA;U-k6USC*:j:dPfaoak$1G:h-/;jE
%EKOtRj9iGK8.`<V,3`7ihAn^V8;Fph"T=NP]i9oeG;<7%Z0o<[93rWt3V!=aDdI\l>'5g\AWX8?LD<UEl\(,YIcK6o1F?mANZ%/3
%-pd^D?^m;!dWcPlO9&m@]c6WgdrULWX:q4V"BT=t:QT8?q+?NXjF24P+>I$&g"KVYh).H0P=cKcCa:<mn9#Y(C+j"pY>A(jaLr>+
%+@c$?qdto)OT`6N4+1/#XHc=&??,:S<Lk9,O[c>;hHP#A>+c9%XaBXKh/sqooN]n5^9ujD;r+4.>TXp,o+BRC&DN=j^:eWe?Uq33
%OVKU@^Gmj^aGp#Nl<YbTik-K[mSq$g;1CMfSi7S]Y&RHZ8^X&^rKbTT,ot\`1S0e$F\1XJ]=@b?GmFnp?8Ym(mTmE(gLBrs1rj#R
%Y+X49Y_kK^d\EoldKE"#mWDEdNZZ':H%65X,e;FZI[Op7&1a0__XBtpP4AsFRWSSD3Yo`;bC1887T][6063%>,)PG'E,FJ%Z+WV0
%4jnV"ges%1J@Y8H;c`8s)sIi]hU,Uo]B_lm*#4T_"25iMGOokdnu%uq/OAQQ@+%Z-`*R.ceRL\b[ETSpS7+aKb00VCQjjBPM(siC
%C<)L_4VYFj%Ml`k:+;;&[Zp.S%)DB'87N7Tk2pTfkL@_g`P!s4NKD9i<8E0<!f3(VQ;c.&r1%`REGmLS&HNI6XYT+i#<e%',X-E?
%:HAR$P3OfaWn\L;^:Cij'TPQ2-0;]Tl;G=IrEQa8nF4O2LP9R52oGW'IU_;eqIS?*g'hP!TLgZB#!sg+8UE(S]qK>m4'ln29qVsu
%lP.q=;?WEaP8$5/5?E7\=3T&5Y$XOWll*-ENj_kN(\nD7>Dh!ieh-D5l>7VeAd>@_'uXt+;;Jp9kamB9,[aF'g.*"RlM,XSE-*+>
%KOX?oaK?bUk/j95o8$5AqLZlFVo]K0I_B(C9.)^c,J]_X?N'4s<mqLBa.6NH\-e,kScR01^RLd@^sT\Ga3%K$\Xt$>V7i$AX"@6T
%#ot1NA37>$ClSFY!GECa<84MkE*-%DlSX9Cq,u_S(+p0*]?@kJn-+0Nb&.k7OJp;iP"L,76[,EXIVZhi75H">gfe"V'!oRn9X?pE
%N[^-38^e+#LtsA+DC?H'K(3&;I.erf^RZS-PtT'j;SA^'<d+nmXVmbCC9RBg\RM"jF,\V%ga2uZqn!0G7i\FfB12ZBjq6$=A(*T:
%LsCm8$X;1B_!p(9X6uAka4)gKA"aDf;rDZ832#r67J>YRrtV')aIFDss17JW9eJ^Z:a&47A2egEQmcl7?+mMEe>`eA?Z-Dl;tLir
%3e"[+R3_(@Th_Ca)q"dfk=X$##C$QmVb]0=$riQZ3%4$u2+@7&WiT_qHeYKMF4X?Wb+q.gJOu&`>b@-cq7b^72sg"qkA!V(S@d[i
%'Ctr:630h&WV"<FT@ZNuLWHhDLf/Z.8$,emA373VbDf\=hQk[6ads_\b3\<Blrd6W[9L,N17bje'TXAOL*rq]gP`Xa]T2./"Sf+e
%'H*WN/&Nm"W724RDbKRP_BkL8LfTqJ,AM^afF]@76L1L>.Xf=>3=e?Ag@n-1nnul:Xni\l)=MB=neq\pEUV[lhr``Aj?e["B;2DR
%GY$>^bYA^u3S[*;MaAOdD(1r]:ZY0(#+R)te4iE5EJ5D5O]kO8A*UR]-tT$NYGV0`P'G[?p+tp2k*-f(9=.o)L7nE#kK@6r7+?%S
%;#kSTBW-I)ErgNA!hCPc:=`F](G,)h<40^3pXWg:<uoV%4<ruQ]4m:3/Uf:`+3.A3Au%[a!""e`?1i9S9dN]`?UXW2QW0>KhX;B.
%8(2:(KVH@>]$47Y"6cc2@pO,6FJq9<H"[K5Te9;=ZB;6ISFu!/a1ZFD>P>&Zom5EN:!VSOC,i[#b+%,:T3&$Xn!.);6$OX&\U-bh
%%E/[X[\U<^m.ir-g;;FnCW'3'lLoFflB(PN`5D@R8mH"4@r/E0(4h*bXNID[,oSIEpAN3=d07C\i_@.X8>hhq<H"\>L#OQ_!e5PQ
%2FrDKC.Gm)lOie.qf4\)9Gr5;3#.q:J:]7Cgo>cT;FQ()d;rY_`US[)^,J-9Ue^;0&X77QYf`ZiPPa/GYGUC*FPa]fhkjm`,d+9)
%h<A[m7lj%X&FZ`e"d[4r-mB9YNM!&d;AK--HDMnl1/2oi@uFMY!,6fCS`,f(UdWOX[qu1t/;+5U($]41UdjA:]I3>;0,pR_rhXj8
%a2[E`=Ve`?fcY;l<kJ*PJGd%"gQ>Bs,kkC_Wh$RhNe'DQL7l/HR0Npmafec\"[XeEBT&oi)!9gD2.Yq]r,6eBX;YD>LF[l3M;Cqf
%b>GsN/FF^&Np!?aC,U`/+$G?&Fn9>%CbOi650"Jr;iU;kBfTr/ClbO+6.])&?0PNj"[,2SFP1g3N'<6*-;Bb+..U/%ST7!+0CG)u
%35)615Y-&qM5\U[jcii#R-lQ^Y"A45n:Yg&+u0T7r0D(KReHIE7q?P,?H/Q*e=SP')r6)B:NC?ao5KYXWj"JjVn=V3rB<ij`#'P&
%hj>AbI5U#&-g&s1Bg?0bHFkkgPC[:HC0T:gJLLEVPCa4jNM7gcQ:"i^pKr!)QYPe,G&e.#'fGZ2<o5<LOO"bLK3G_c+PGfJ;C8lb
%pLB+':T.E"I,L1<d8D,f]YcorL\nM.\%J>0<N0tV#'N%,R^>Cl:*)ic2;LM]pPV=CFT@Pa<SmhK;-0j)!B*D;CV"#=H[U!*T-]f/
%.IUF%L0;/,ppW&$pKE*gok:b?Mu\GSB3-MMG2s2`:*t17c59P!52dAleQs$A,NA<a.YMGrJnL]rZ8oW'L,h:M+J$Nc^tc*NOr.?/
%b-T0!*0&$W6(M!_Y]&0g<EY'PTP*hL;\_%+_:0NgmMYceW;2^Jm`brtJ0FWjpm".p&1(tQ(N7FVT#mZKQ=F#HU)P[n#ku3P%njI3
%NJ7Woc$f$q22%gs1kJfpotZ'ETU0&%'&.5"TjD(bfU?V(>cCcUeBZ>?n<_4pF$ud^(Yd1:7YH!(;:@*61j[boo5=rGn3gG)6V:;u
%rmfUn^Zm`l/R;Q@ffe2%dnG*m3P1M`LnR)2M+SfL,L2dfbHcc`%@7QI$.cfL<eRQRq-L?=nT.VLG7_.rZrKQjn)`/Bk;+R2*GZl5
%Y<WdnfW55QIHB<`N7%dj-au"9rasMAbg+I);'Y<ohFpQ7e'bk,6TRleZq)GpAjffBU^ZPV2q=(^[/cNr6%fkI`oLj0X4,0C%tP$r
%eoLB/`BY4s1/N_'7s,TA,-WfG:=9:qbR#b6c+'pO1+*B1a.Cg(+R1I``4@CUfV[F_0#Jcc^QP,]9"W'TNO>9l=t2Sp]Cro%l4qia
%N'SU[+AqEJ=G4b$P`UnB\I32ictt:fG])El*+F:5oFJ9LGM<N-4#)4<1DM\f:4?KJ7&%5YBZYpK>h>.npI_^i('C\IHs2`Agp+n$
%eQ&>jd$WCW).g1<ju7iaJeF,?2Qn'M%3Wj77DS&OW-]q80<D2E7R<*6Mfqt'@9M).e/g#Xa%OrV/_Ycn02Y(bq\`6e[Q'9!Dk[>r
%eX9CDZL;;J*LD@=(eM"JS()&!lQ_jXiiE?9qgNBT1*a(;H:8W^8*=3>qqLqWgPn7a].,=^d@V40EQ;)-.J$l8JJrnbEh%ZSUL2Zs
%!2ETTp@R4`\RK#1H8qu][04FW`R+&i#lAe=5nYN^0J1aC-][P8_81?VEshA3cuHUB['G=Y9IL@N3fACSG&6*lRtB]d25\q/bRmI%
%%s'B*VPC6XDr!lF\F-oaD4[<7"S8TH2^2m"`**8[JU?u/Vii:9Nm2-[^5=#K_TAgYmG5"]S"J>P1-or.EcbijajC&<)mW*6A=u"$
%B36HIE?;D@2[E>822;G_;NGtc%u1*nGqj5e/:@6?\QKq0V6/5P"]A>tm;!cL$U%![6SM5(HL_H]_38;A@W<Q[:,sR':Q%Uj*V$g/
%O&q29q!D&<bdTL^]Lk"L\m6s.$u_<GFQQkl9IB=SC:M@n=':#,LbXK2&6Ia?%nMd(b9F37TXlO(b]\2:`r+*"r-4*H[P]Es=E_GJ
%53i]aK_+n'QDgo*W(GSe;&?erBQ.7!)nE>gS?i]9**KV5SJ;YHKhsN$-I:5`>/E(AL:W*_a\WE]5Jck:K-VaCc2D7960WU=q@J5l
%s(Yo'lS@E5Np.VD4:"P/:-K^R'JM:MIee\gPS!&l`+Sal.h$Zi:.eAo?"gc!/m4i6.*0>c+g.r\<4@fJ`bkJ_&U/L`lL/?J:)gW1
%)0_eAa@*#^?@F2#!N;b@TVto@3*&NLPJR>2lChnijfK0,)VAo3`9bH$FaG3/[N\>C5*a5iXJf9eU<+.o71V]6UGGa,:QjN"/\dX"
%-UGapCRW5U+RY)$ppC2TgmZ@nF;lNbCkB).&k&Am?EToK@-k6H'R'f2=M@baqG[lI6)mq1LM1>Xl/iS^^X)TR;UW(E\^nQI/8(Y_
%O86E0\]PLKFl*FfnG-dpZ.7F`OWkFKAkWC6D\^>JmVQZ$$E#DtM)<B[G`aP`Q+jt4*@>U?T9ks=j:gMpLG",0XRq=YH,Nu`50Afu
%'Z<$f1R,@PgVPkB_E&mIK@&DT88#*@2B\G#.]YOqIMMcuS/N"f1P_o\^?*p7,6u!(D(A<BUg#mNfB7j7'04'=5&,j.-[-TGN)OpU
%n+D3/@TgmD@K/#GZ/&C9n(.b+*EnVL0Di.RP&pq*<McFM;c6tsM`d)P(s>+A+gAn2%+h03=1jj9a!"(@Kd>*[@kuORUR2$[\d=4o
%n\k%Mj.`G`*$mA+Kh8sq0LD#hca6DD5T'YN^9otYs'*8i7#ImTJ.UlgG4eD4TnY'dMJ@qYm4b!R[;^mD;p,^m]L(+qB2bm%,Z+=!
%\1'<fG<AmAMG:S:&,No[M="n%MRuQ]r;:8COKMh;95q@#/ZS#N7-jX]eSiIu*Rj;Wq-ZNGj5(Q9dn[-e#hBm%5m'kDL53A#,+]5Z
%E:Zaj'?5("l=?)H,*g`m$=\3P<KDh^k)qDI@B1.IEY>e7oE21Ri"np3JN[;;#]gd/f_2MVC)qt%'Tn+@1.h!HU^Jk+?a59Wd-%_/
%ptQJ1gRScKc,8=p5NGAs>a',\L$mL4J"35T&%$&K)XFNlr'6`>anuEubobfpAEV>$Lt$T@U0\m/C,LFkL96S[(91[`_>NqOiS\B0
%L4AV*9`cb.o&u;DW2PusSIm`5)5<oK2'scNF`ahL7)9AjfpA$hGo3r#,$^FL>]m*HHofTc'W09oZaG%k0kXH0,X59V\8T?>[=0:F
%WbSa&eLAmZ;6eLGqs=7h(aeF0@c15oX%.shnBJ2PS"@7T#U#*g0#X9/#"rt,M&T>@M<DUIJt4;e\na?4itbmULb(DC*,W9kbS\mA
%['k]>9-l(JmMd]Q;..e,-#9>-I_.0]71Fo)`PeVX<W.r\!lCXGj"->B'OA5u*#R($Ni7Tg.Ii'2V]7DFk']UQQ!)_@ib.:G`:qnq
%.E7j5j]J_!h6=pA,'?4.Lf@g`FP6e1P4,UE]_mTqGc$aOESh*ta.DtK^jh`FQo`OH<UXt7b:TCuaUfY1_HL+6&;j<!N"u47#BlQ=
%G,^aoOpPY.3_),Zf>R&inWnMQrH)Nb>PXX'R_?+3M5TMRdt,h,ZrqR2WObU<]lUBe:c7ol7afU;DgT!t?W6Dg7,m:Y]k[+9itmok
%Yh#9&)+3dh32#[uU`&GmN@+(;A-MreF47FjWF#m@:ZZKcqoE1,pS%n]a9.a4@W)JLmG-JW;h(;LY6S_mHKulnNZP/f2;JYjLO=p^
%+[3>A2L?8W`EAoYaPGZCZ751j/JW1:?90%(io#&qVbt]e`g0a`k`:(,Xe+#ITgu$a;+)GSHUYK5XS.YDM!e&kj#QtCXXkC0Ki&T3
%"nc#\nq?[0mB?>lW^O2'5B8Sm<LZ3@/V5NEh5j,M#DK/RiFTPAHl;TnVDN.6O8&V.CL!erGu4fJocBXl`r4]r`QWJMr];8<MtEpD
%<LJk;MC=1L:3!t3%YR6uSRQ!_=6]'XmSL*s260>Nj+*#`jJ1QB/if*A'Q\M8.%_eSf9M8Oq(TI^O!kW0<.fLBW3CBa]k+$c)i08?
%+B^WFY;)AYi">^,gT@Q1UrMeD][5V.K?eg^at(3,h=`$L=furS<6R.'7+.YYXfn;\_[tQ_D?ZLX$;c^:'X^(P.GkX4]D;9mF<^!"
%f[)UErA67pl)nbmh4.$6PXMQB/#%>9TfQlCP]tnd@/s;g.hdXm135mJ2cV[Z8hG:+V[-tq(R(M6E1_rb<b%-N.T)Zir0mYq2h"Sg
%fj!&[iDB)Cf.6U`'%+9Z-2,Sm8+_$qU4>n=[9aUMM-Te4R<Kh8r"'cb4$"knq5,:[Z.`fl-!D6nrL@&;g23[0eO_(..n4$fRGSGN
%],A2,N`tpoLD=K\p)J4UWP=T?)T`'^XlENm48W#Jc.8&RoaXA)Xpa@qlOOPqc)if:]!<_Vps_64Hi-H!/GICcH*9WVfV?VYFn\dj
%7Pq?EO*qmcS]]Jr>cqg]ru1)$6ohFfkZe3tL,="(HED*KA#mIO__6.HP(btB;21r#*;_??]JVl^.+D\e/*3S8E*'g+J<1tGf>br?
%9;i96ju;?"@=htNkYq9IA0?:b6`O,Z,BZAk\fXfA3#&C>U/u1V'lDD9:,OX+oiP\g``<=koOW>\I7<n#&kr?P-'&J<igTTAX$Ydj
%*,&)cP.U%#FQ_!j]Ch=h+_-RUnQtflTAWAuk'SZs[1]r<$T5n1@M'&%<,8,s/>C>N4c-_oqcHI]&2h)l]O+Ut9Ie*C)gZtE-+:,&
%X!'`mf,^fVEIU&90lp/`c?0B"\??.c2X`,['N$;6VJ9?_M5VipK'Tjdl"9"j?_ZjiCg`7[P\AdY6^4+`)=YF(6UOS`3NR3\ilBOp
%DN#;6!>\,-V2'*dObu"p%3d*mNtAslAm4^,;TtV.L!O8^S!1:B*^P+SB6.rc_;7<qOYi<pDFAV%dEg>n3kO:DEd+3&EGH0WqV?;_
%"aS=9GDZ^ic;%`k+)B:^M^V4:,-pF97(S]sXo$@sj-'$!+iBKqjKPOH9OS8!]/;<EIkQ)ZS@m/Hl(@uS^<"'[.oL(i(K7pCI,+X>
%GDc)dPls!3"V0D::#&tL]rIrr@^3:e<7%)4r`'OIKX]DaN$qA!H"M^QOHrOY+TodCLZ$0cHQ,UTb.Xh*3,FI%5.7;Q,%Z1,E?-`U
%3SX4DCY_$S3C5ZC?/o3OeL+,QhTB5'BT/8d]F',V)iH((`u(aF8eIaa$n9_qaoRiA3,<isGSuhjkq2uM=mq+Dh>I3G:ROTM9@uX4
%**t9oMX^k5)1kF=YMplJQHo>3g+C8iS5J--#sM;\17ZcnP:n2'Wq$*q;8Z/"`%%+7@8S!/8rWX&C1&44R)/,e\nb@uF[8/J+[ak`
%j>((-=$%HAn(Sp>=M:5/3[4g(U'fX<in"B^.k5[I,t+:0b`>Q>l?Bb-fjf+&V;0<0XQ2BnHX_.W5=FeD^W(0=qZ%l,Z6H5P'@C!-
%&nD%/;c<h*,mDOdSO6@Jl,&I:3o:i#4<k,_1d)YT=p!W/0F'?p=QgCJb?e(up.<[J6l8#M3nQPIH-,"66.GJC'J\BD7doMt96HP1
%!Mj'rP(3NS6m(`,Kt?D!M=QS(aWtCt96>L,COk<HW85ELSc#hdNdI8E(CF+0RASfZ-aWF)94sk":Q'K>aee1#EI$b=eF$Bq1pu.F
%Ll%$<kB;]A,**1`?$S*J(AKGGGdKP:NHd,_k`IKg;MgFpK%rH(C)3&5$d[gjM:kmmRN`KD)(]@UHX5pg'hclaXp+,#n.7hWfQApJ
%\YWCd7,pm5@0Hu^W4qdeE2p-5oWcDVBP5mu2r1Q/Q7e6I/=3&!g/&uG.oC)u2kZlgfDWPf6ZIg;QS)!1Vu#rDm!S3]K0V:AE=YV#
%:J7J$o[uccajS^4N"F%\Gig==6t"GYgi6OdK+QR1bM=;AW>A0sd=A@C8cm4`c)XC_*n1=o]A54`P/-B@`EB``ls1d3b<6'/p_#E.
%jLDEcMpQsr7%V)[$LYG`pcB7f/p^"R8r.0+?KFUJX)Vn#^&*6:lk1`Wm]"OT5n-AUKSE4Vd:(g@B@.=bcr5pfc,6%5IG[UN[RT'&
%b5/.8:uY08;/(0d0M_1d(:BUUCj-Zd=E`j0<*j&sS&W/=+j5sF-3qW/-VNHWQQ1Z'QROC#,Fsp.KAIa+pS_"F&4T<l)C:!MQQ%4U
%!5"'JCB^o(FZbUu-GAg-l-LY/6Aupa4*?st%r']-OW'(-,"dZ;.8L4u$RK(^0V"*]6>WGLVLmrRb7@aT#%'nEi[,5MZ/Do0*OQ&#
%?<m\"7'^R86NNR+6=`?]V*VZ8/k9pi@B1ikXUt&%!Cmt9.e[$Y"m$,?X.i=NDJaCZ*n@aN[e$mjMkBi`K"cC/A@:HX&LesK%3S@1
%o$UO.Fhuo2\>D2#LnO0[GU"g`?u/qn!+jGX"0126@;9PBgfS9YT2n?KTs&uJB,Bn:K;`\'A8Wj;.gRaFD-_b6@)Xr&n_#M(+p=;_
%ihTqtA'jP0C.)^8#6i%^3E@.H#qfq!DNZI@Xm;NHOHFeSLc/7Fd#$;E`L.A2,].3oi%KHp90dt5XPWAYVWlG\dUICHSco.Z`'b)@
%N4\c;-e%\+p')nVp80=0\h3qCgiM=MT]_,/QEm]gOiocpf,!#KWi4_]TJk7/8NNNp.;FBR+&Xsg<THQJ3/(fj%$(7DbB#(T!7G%E
%F:b1hB^$_iTRmU]ka)3RDS_n"#ZXJcI@$nTos88e_"<Ge#1c4$`0+R7JcgBf2t'Cn87^FhfZLh<H?/(^itf,;<nW2IWOnanP#b70
%pESuY,3@o]QW^<i.kP%-LPoD73VD,SPOlbW&+4l$cV-(fe,@8a8M/Ud%m!!EI%B$r6ZX.-FKI_Tm<;+OHje'i[kf\C^ZK*2PhC=F
%%<0lRh'ed:?Up6d16ALYCgG<kkq*_M:tKY6+!*1=Vr=Io?+55uW]UaHg<uhn;^of1f/`+C5h)p;oHs:`-s6Y[M^0eA0qXbAjsmZ\
%!On)00!&NLop8[H5#m:0GFYZ8YED'qe'e.bbaDA8]@VJ$SM+%A.`D\lR),-hZucEYg][,)66dH%0/437,t+n$CVhfP#(\u2bGQS.
%"^p)+p#,Q-,d%[^opSud@OrZ'0j?gQ+j<eOI9h/`V6a"*OZPt53fpA)"5uJ_CI,<t\8iD71fR8[W0scsOZ*[*(qL9$6C7S)r@_FS
%17(RPM#sD]n[J;()L@&$#;[:8-38t"^,K0jWek6h;`FM,4<o-44'&,cbPO\V:fS;a$=KrMN;PCB+6K'HmobuOqqkAdk2S:cd9:eX
%]%;V7bYapN:'+$>_=0q0=H\GIC_ob$/W?l=GhQLTb*Eu:q+jY=UD0HORbDmM.]=Q/l&?NbM%[ATS2R+pE0(Ro(cmCEF/k6;qkZb$
%CR6fSn8fkG;$jqil>`LjI9E7\KZL_,Zres,^#m2*,a>$'kpKQU("YR+:EsQkMu%c`!KO"H.aefn\1`e-]0[[@GUL]oWn%>^XRZYg
%/Pl_?j455nXi[L\d8ACt*#Tbe1rdM\&-Bn)]H%BRWj?u0cg'fcXm&]Hd9K(50\u8c'JI\OS_`G/ArM&IQFVK!k-:09B*92\ljP+g
%qd`]SZ(hCHW^Wo^U-/@OV8K-^=;p/"[CkP8;H!rkV-]I@F]Y+ql@lOid-'_&0oIfr./]m`[i1#iaZX!D[Fi2i0bmHHMXU4ZA\'CL
%mWE&o6EF)M]m&,W&c&-uCTR2X7@I9b+J\e),:hCCc8@fh%9)/B(39LpoTq9s5mu(DpQ/rTXf/7$+";V_0NW3_/Dn(aM8S</mQ8#m
%NpWu!-YZ(P.ZGl:Skit^CKCMd;0-!>UMfK(8]R\,;Krbp6\kl^a)tBoGsN.i5J4nI"RXP[qc%Hg<f&5N<RFb7q.)EFdB*q%1Ad="
%'nm7S>sb4=Thh:q-'jN`!iKJ3+O.>C#R*"m8LJ5.ig?R8l4TAhHcje'ad2@6+!9$b`I/*$WA[ESQK#Ohaq_0e%2,SeQTqR`_A)<o
%,pro[&KeF(Hqr<4m%GCs5+@1(%'p/'o5SBVFQP*^])buDrh33eC$@HZ;L!`k%>iJH8!&Q1<T3>1OW6Zbn/HS[L_&U@'*!$DGf#am
%#om*eR;h'/!C/EOa4B#;4:=*qMqZHOUF_HSY;<&3!i+8uJaMQ*R?pIdn`h"_,*4Vo@u/o"65O4bVc;%S`U@[A'Y^7I4$Aar;t6t>
%QI7,tmSKs/hr;6R_'1<t3t,l6oVJoB96'-rNo_EYWn9Te@#@A;5`'/AKCd47I(>/Fap@227Mr]2)@gWtq'g>]`PU=[ZJA`aJH#T$
%Had=nY2m=kr;cX'qlrosal@hIi.j3d&/ua>*'$"C4>IU\$RV^)>&rP>J&^qa2<L?CY>'n@-+08?)fY6uXuY[Tf"M'Z>9><kFa'M\
%(<$k"@LZr,oeO2D4k%_HetU8KQ#G3aIEXiRVe3A1*p!s('T0N2KAlI\EcH&5!?^!i*7A7bW`^*7YlK:%MLB0e0O*4;Fib7:lp[L_
%s&fTn?`(IN.&t*Nc.b_D`SDdiaR6r^%=9'_F>\J&qP\EBQZ];4orJmiJZE)u^.tMmM)0cY'm\:=]dd-r3RA<-TcA31_3dS?7on:7
%SZV]#33j<+U<3Q!"H;@Hpcttm`LU!<MFt?<WX.i.ULr+`RmG.^En-85>;itcaO>Y"3?(:$0dp%4Is+=j16>f60lF&=7[h5ce1f[g
%*Nd1Le-%rQUnm'&]pBM,OJ7"T''@V)SdcK()Z47GcG5G8IOOo'G/T_8_oLfbAe!Z$qi2(ZdI*+p:o4I-<J(HGaW)u%(/8ZBGDf]i
%\4*;u!r,'?ib5:tAG\@[6H*R34-Z@ZM]]H%SMFVoa\@DYDD$m\6P"i/2M+e>`<$Ldg?/LW/]0NH0Zcm<Q+ETq0XRL@Ursml_u:[q
%l;*q-q[,?9<6EMHK;"8lbuU&6Q!>%p.@I88:T,P%qMU_cYTgoB*\'7u`(f5gBpHq6M0,AkV?KTlUZIOQDEof)(1(.#CIthK2Ne\f
%f.iI[g%&>2geb+&:K1=icj55fE[\'C,eA-*Kk-T71m:MYT>VdO\g-Sd(_r7=NmNjpG)_g+EmguQ<ID_-qY?n,`^:VT05*ZabgMHF
%cbDM#R]%\2%m*6[53rU_E7FP.p?0`dX[!R@,r$-MLENT_DIjQl-)lX:^`%5N+@n#ZSt"fc\ZMOVZp%*S80"9<fJGGeYU%GMjITF@
%e:*]%p?l%*R!]J)LAL47g+mk.\;)uMm7-),6[;S[YROA?8,!HN;gF:p?UOBp)pLa(/YX"pV9$U?aBsO`'PW%T4,C0Xb-:1KT6ZQD
%FSHggh4LK/k<7KC`X^P3=4G#8g.h76fha46aKSHVd%+/WdQV6bK1&%(nJe6lFpYQb`@*%J@A\oj[2XF"fdJ1]qr7kRX(O`C9]hH*
%dh#]%[Rl?NK/F<g8hV?)P:maW.$uLBWQIqMi/DDFKi_$Cd0#ZSq]7(ms-r^-O*u#S]PUal3?WDZZBN4:4V3\`H-`.@Vnrt!d_PVr
%5!CQ`!C2c6jH^P5JC`A)l"9$V:lH3=og79:`Lo[gasEAPX>b[);EalF:<P#BML(VE-ar6aRKlRro2?5I8`nEURTp\bXAEN]TJ_hP
%Kp?l)>.<nMNZQHIF/.!ZSCZIomJ*B,j+e^!$-dtfW2f%G=^tH`BI*UrW2i41TlA']2+1`)h8MBNPTBQJFN*-6'oOT]TU/2H2o&K<
%EVVc[X)Y2ZMaMUbE7r@9Z]=;Q)$]2q!*_[")c\!EnS-7L>5&`FhitZ:A7MCFjg:(qr6fmbo0c[@Sd!TdbjeaVT%KVrWrVBWRJ2ke
%A/r?=iXcfiW2,27C?i,J;,!JaP3$2@SD6FCKs17^'9;N$-/"`FBDg+:9%[_l`kgrP1HR/'1'qgi-qHr4M5m=R-V'DiSJ9nfQEB$`
%`+Ia,78P=.M-)LtUWKO4PlMQsamDIDUVp]Ko\Jp;N\i=sZ<]a<8D,Sr/9P';2[lnRLB..=<^<=n.99qD+0r0oN'4b4+ga)>bGm*C
%ob?4GHG)?5(]PdBIVR,.,VE5<YiK=,;,&SZBmHoaWX@l>WeO!1jEmn2+stJSif1(0p^^s5%hkO#OW:B#HZV6HQ?MKGoTI,[UbZkS
%C#UHb;qNdf27fP;-tCI1Pf/<u/*4RPfhbTi9h06ZjlQ9"P,0MJg8X4<ausQg8,0NAAH6*T#P7H+ocDm5SWl;N"MO#,Q7A<0!R"'$
%</Qk5ZdJ9;P:YL$Wl'S(/]@(KfUk73rXM\u$eM6E=B%^<hBp')%E_gF:rSkN5cV+:"fL&JYBi3,^`5_%7L%8a)O3.8U_7.i?^A8D
%]dJp]EQnLmM1TXjcB9"VlHqD!Z@Qrq`TE+H<.A8j&M%A;@Can2>umu5)i+hNQYhEk="f0]D`PfHZ&'RN9LI9IHPk.-A"\!Tl;/3^
%2?:DSK/;*9%u`\o7+_D@_\RV8dNS:pH)NUV<rLG>gm@\t3ms4u["8nf`i)aokFkqlC9kC<giBFi=u48aEO3Pdh";JA"W*_$/e1>l
%O-U8J_K1gH1n,1"UC_/sDlCf.`VP3ETJOS]`%>1E1)d-\p+N/-:/iR?5"dNPnD=Dp0Vk098&<GM3\](MX?YEh`Re@VaM?0peHI;"
%dH-Zo\APe'.5ZF&,Qgi<Spfj<mOer88]S.p%UW_>An>NWD0o8Z0Mh&]rIZ&o4-$M?S-M!a[>u'6YP8ZXqm;nH`eK1Kj6i2rSTj2e
%T68106%]cq[EQ(Td"q3n.j:*(B]apZ&'MLbMg?7/h<\qQoO_1+]NMQ\Pc]S)W^F#f#Z2ZHl=LOHDXF6aBOIL2ng!S4#kbOCT55pL
%OF#R5>6#lK;@O,;WqJ51P&G>`AHGK`FR,=R$6>6aiYrA2:@29-42):HL)(;$ddMc6:WatAD:'HmcCK#:J@GuBq.:(AU``m*/R8K1
%kpTMcrBnC#9IEV2C;CcsPU"^1Q%hg@Li?.-ioI'Y4%_/]j&Li='n6pfi&5&^7$DuL5\VqlF*1+0R%)?05!nJ@"&&BQip!&^TliY(
%<^J5OZ+Bas*)K2ZF2dWYKmZseTf?!COjIOW>h$Xpib\$,a&K:1?PFQ<V)s^MD,n.B@A_-UbEOYOI%C@T-t?6ZDJ;`tFemGrkI+^?
%2!*'7.;nAq&&&h/m*4J!/Ac:J*5`\#e$4qK%Y-%-@-s=A+TN/'M.LIXbfq9gd^Um)4<4S[:^[Q*)9P-]UX+fgQ;YM2B5NEDANbti
%?>aA/<Qcd&ib5T0rBQKgRshS7^[P6[9eKihp=1b[B/Fu$&@u;^=2XH?(6r:c`mnDA'\nK2_Om.\3rtqCalL&iP5WU4.L`''D7jcc
%0T"q4fRc,%JXtdS447P%kniQ-Vcm45Vdro;kV]ar1Z4-i9-9Y1cWn&W,$0K>FP:_0-L9r5']c[h6?dD/3QJD,eK[KCCcD6"0mB"T
%&n^l%@MJQ:6T?W>bOjK3$@uAaE)e))/g08eD8F"pO:88<`2e`gXG0Kj)d2/?U_u.GHDW7nATcZj/ajqm?qf3]eKXidP!rA*)/J(C
%s38t0dXEqh((pBHcm\TCo-4nq-$6,I.U65\IBFV[cC9S/io##/K4\1c'%s!R<RM'!9QjUIG_4ie'aS5=6]!!bC:GH3)(n6UVtBrO
%LrkLEb*4I9fAbAkJrq,AcCMpN3#m;qN]Jp&k6>-4;pldJm[crLYo)VBEJI6BlirMfn_]V]/L<$F*A4/qJHr<52/7:2cB6:eHTb@8
%kAEg,%l8R$[h;h;4Lbn>iF^KG\Dq(T5cZ&dMD3_YI<9sCakQWEAXbW]GOS:H9*sTf3+@%%C@d?%4dgs(ZjjK-7^`GC.qQZ4V4n*;
%U:VIHoMppA5&7aSW^g:;=a044d@&ak\b!M4@<-8?n)D/2&Bs^rTnU\oWMtrJ*C2&Q"&#jsl$!\.?.6O^ll]\jC9;=]Jsc[IG&Wb7
%4>Ca]C!'HH..777MdtY!$-9hOl5Qma1qbFFWdCP_@R\>.>rAt6%Y.o.^QtEgL)%qqjG&m'Dh[Phnh&TI-1"(kZ?WKU3iM[]>9!O;
%_#j*\8mat(qq>X8DDu;nL-P&EZZim&qM7UeZnZdV4CpnfbB\?^;1chlW!3!B:#';1TnYCn8^Af(%SQhmL\<^/8-:?OOYRg.L)7$c
%NL,D[qm1!ls*<0<]RpQi9P?)ke=gO(p-Mj((Zg0.J<e5PnL;h5Ha,<;AZm0'$@u,U*?C2$\(J-pi,sf;S!AL/bgtDgZ,![WX0a@,
%@XI(-r9;04NXJBpAi*4PiEkt1SSD7U!!uX]m3-h+4KZd\7Dguc`"#<0M(Q=-&HDiSlt[L91sZibd'm"KP4FhmT!nNhLbb,"<GXbC
%Wts.H2P./k'<%'Op_PFE1204up4q.tF&?AL'n9X:M)5O9DYkW"haLH5OZ>#+$tq-Xhs]$e,pB'u0SNadI%,L,eLckuaj+jE.-H"G
%l(sMqfsn4u_W/LTHZ<qJPe44rFl1jXL_lkW2Qr:0,Z<;ZOER]>'dL72:)3_FXmB)hn3B4C4nk!t\NPKNhTCj=%BHZCo"WrD\$A^N
%/1pljq#-51/[]:_@E+&JNhctcVR*F,0]X2OaSO)4MXC?[A3N!,l*OL\;YX7g(raM,f`98.UP)f4[].XNFCJ(OZ`5.'_l8[TGpjX!
%2$EZ;-adba7KjT(rlMZ9?q^0:[2Br)\9iQYIDN5H&7h_-)P#cHJGXZrP-VtZ%u:#t[2A<i;8"mC[`Q7$`Au5=]t*Ug&#E16TO$]k
%Bm`apf'O2OKTsp9mAGhV`W6VW.=,Gcn3<6R%MeC?S=&+W-Yh)C9RcK%4Q96ZgD=TZ6n[G)Tmhu1M4F8jau(FHk9PQ[_tQY17?KP?
%k\j9;?4ssQ:*ZPZ<`SkD+$)"..>f^>K\k1dlGB\[fap%hfc`+&<8:)-p'[*G\!qL!fmqRmh#>81qgR&2hdD;JD:c+*qM9.@4L%%n
%hL>.?p=10i3sa4sXK)//p;.(.24qfd6o)Q"V%%_>IRG^Wr.5oV8Bl,=(q\0OBuEJ&X^u^2C\JV*W?^/p-c_AY%qTH[SoE.XAH`9;
%1![qilj'lg7mYVWcYCcI%.2OOl1G8Q`7^S#Wp8%P(?g!cbr$WmnigE:\H0/'p7t@;Hg0i1G9F:dc4/-6pK<r\=c0$S[#-Fr8uJV/
%B/N[]U*,H#02BjD??a(GG@pd<1%$14e#bb7Dl%9On!^BT?SG;GP4)HQSEOY,F'KPr*SGGG#O0&s!SjWp'u-;.QE's5m0*)-o>sjS
%a&'2NrEuP`S(:c%ZiO1g(@nEOgd%$+;jF02[=j5%=`m/S"#,J7>snh:R\MI3,N+e,CpC"C`B"&^%dDVgBDQB8nOA.>OMW,"7iG,r
%>IbOD$?pEjW`Wsc^*maGXK@juY@g]%aQ)*en)jB,?o]JEVJ%O]7()uF>'/lIKXP-2LF3id8'c`^]7des+,?c12ZQiVc^#X\AHJTj
%](b8`#'o(*HWNgT0l!BgHg3_eh/?h9^qLu6okUc&YB!p<-UTfFh-J9!RZXo8^5HMc!KG_nJ>KDj-YGFQFb!%/pVT\.W9ENTP;c;/
%7qmk32\EmMg8-trQ_/ph.(O/[VF1C3ep)1Ts4pMkGS`EH-hFB`nVR4ToApdsYMG<Hkgg[t=rjd)[*%:KB]DCX?CA/$'YSpnmS3'f
%W)@3:goe0g-sQ8:VP"3J5i`o!>-0.%VAK`Q=JMR[N+sJ_C)1\MAIV[<WK*;b2)Y2e'():62@]<gL6J]:a\t3F1i/(g3^Nhr)8&XZ
%9S</AeuVfr3d5RS)Ek.nF5b2;0\.g`C`m<oH`>Vj4(M^B&E@?-)u_d<\ZbP'*>kgaRGD])IJ:Ite*P\'-82BL>'@U"'K9j?gQtJ'
%2A+&h?)"#Z0WPDLW)g5NX!V2D!b(#_J]iLV@r<,7K757E?:rt0kDMYY]EM1jm*_1Oap4nf]+;i.>`L`=)@WN%3UE3'gNcdqXp?2b
%OEZ[VWZIF=Quu^?dg)a^UEcGIL1*hb9etNQN">HKi1X-d+\1]L!uE(*Mmqr+;hUk>K/#(#RqQm'ePg`="/j6Ii/=\tV^FCd^'>c2
%2P\/c6=]\g)M2&qr(&SR15)RjLp8dQcNXK:r=7;#faW.*&fTnP[dM.i.lEl^X:1G_N+&8hRN3EI&NLd9@l44P0GWr\_/Rhfo;_YY
%F[40^f:s5.bGe2R^8,r[pdLu.*!0:n-\$6U78X;[m0i3&A=*tKl@8r0Xt;0=h'd-0\)\0kOuMSOM-ZMaG1R.cl^Qf[.*GN3jBZdH
%j^Km7ngE+KZ'T/qJ[sU.45^'s=[)5!.E1t>;_<D-$st;p6P>uK84nJOMJ@8]3W*r5,k+PR<cN(-$X31'Xkd^.:b^8p7QQoP6`B$B
%8f3YYGeG7Pe&S'qX=pA_OL'oLG;$j&6a-JUl4ESDFi7c4>ttAG9ff-=TYHm3@o!NF]a6d=(SrOIfdKn+'hP9^BWfHLZ])/_Q7&pn
%8O&Mr^^m6(PR#)jVYr&[Elk:\jrlqt_g.e>\$t+5hsJH>Ps*ii+iqAPU.ZZ.?/$K,Z0<MC<nQ^N\<*TNHjJ6H2AX(;KGs>M^.>ag
%f;ubQn$WfnFP;?]#h_\J_/\&Pbh]=l.:#=io>?%mp,7F0.TWi=0IU\amfX.*WDNC7(of<<(cf4H!SAli2Q16N%mmY0&3t$nDA%hs
%b<@Q[Iqd):/I6J/M=`1S_J^&p^.CVK3qe\ZerTK2Ub_KMJZC32b0CHMa-\hFRr`5f^\c["$PN]>N__'R&;]!n#/)n,OT66&Js##N
%2.jnfUgQOO/XYp(S5670UQI$FH`EDd-+sC%m,k$WR)O\4i>kUtAfWOhj:o:"Yc?Qg=2SUtUUXg@9V#_CD@d?3RNk(4)pCUi(m*Ik
%Mka.4Fg^E?3#YU\1Mn1-4DMsej,,E]?Oo?]iV:EO3#%#$%!D?p/3I?36b^Q[`hR^!)W#a@0*keC)-nl:&q4;:mX4\mDQ-i836+%/
%<<[km.c/iNPt5lr-B]dpDE]>$5V(="3F`;"5S,";iRinDVC+O'LlmK]p5Iaa7GX)c\4lpuh^+IOR#+fc'pq:1kbLZ#(7+56-r>Oi
%9n'$u&3ej;^Ffb*&Kk(DpG;jsAlijg6Xn!GKNT<)CprY@c>mrF6\Ruieu5O0-Vj<FL>=S@*t"\RLp46H=IgM(&4G/-iW(r2^GF\7
%R+AkH2qrE2mAKWD8jYQ70tP!+.,+%>,cPh4J4?F9E&r_OZ(1]O5GB,79$+^j?!Y2R7)V-]6F+fcOC5/GYntT@H>0/=dgeG`'(_S^
%?afA&cO3"D:ed>Tn?h/Y01Hre[J18Rh'AAC8CH@S<;3_b/Yur(s%oDr/+"G,5D(a-pY/1/<8dlY_sm1b@;%n]R.d\eUQ*3VOIiP;
%ZlWL>a1?;6[CaS9A"2htH\4$>OQq6spu#-aU0:n2;)+2jcjBW*;()j^]6i/Y"1%`n?M/2doOU5';*b`0&^(Vf]'!=JTPq"!JPDeD
%)mjc5h^bYGlrmYeY\>(:BA%Rki&]8k%>I&uVt@1mIVlGU2i>qW6M0r7cbFq\3ds@_RBj3oSNX6^J;[>DJn2%#>75U*38Y!;d=r4I
%62k3jRcD",=%F=a?/-sc8(0giNOt(!r0Ui&H4Md'aS#W<6d_Io_#J)gKVF"KhR-QE['*dXhN<fDDte5,>c:)nX;u1dJALgSanNL_
%k55+T)'8eBn%S\hiHN':],2SqIfJPkhuE?)2\1E7k8/Vqp$h,@DdM6>om&a\T6e'^h,5dF8l]s(TT-<enMGn/'s+T5d7r2N%W;H(
%eE\L>nBM,$?b^03j^7%m^L_RW+FJ4*;Yar!<+_jbX#p::F88gJpHb_SAi,6F"H'LsUXbf(#lKam0PtQs]<jf\7sP$oCYsEIhg:N9
%hQpL<ZE\,CDKSK7.B;se_Pj2YBV14AD/luj7c>tFrT"oH1M?T%ZO?YHP@3T5[non>B,eca*1t!closWLhi+GdI+gd=.ME6M]/P(=
%2q8Etg"J95IK&;SIfkHf55bD@m!i"sC*8iK@9[B)Re]2IBM)Z4Y`$GE/^s,fp][.UM\Yq#dU&3bGYk$)WHg<&M0sc$_pd-,)rA/"
%J+^.$[6.g2HL^jjG;$]/lDq*q^&7E>GQ7=3eQ6,VT)\Ahq;'qVpTH5VJ,@K)XWRN<g%R^YpZdP6p2>FcIqO82@qdOVqs!kTpM[hB
%nXocHfsg1m:]BdoDh%]Y`U!R#du/-nGk'UNraYM>Ys-lG?Ms0?G<`h<iI?7)d*m>+oeiX\rPS;LDd,p4`n)lXq=^^NIJ$Um1JtJR
%oZqa+j:<=iPPC7raWE@'4n&18=+Bi?pJ:_`p%L->jaVdWVcOu4edi_;a3JckVsZJ)D9)9e?[_fIs8:nIINj0hf'TC7PPseB\,Z<i
%+5p7-IJ"+(IX(DF:]$tiYB]^)dmJW^ik',8^\ZpX?bC[WQ5;b$G"WjQ0cZ:l![BOF="8JVlb<P=9ep"a\8]'[qE.I>1UkQ':1R7l
%%dF[3H$D+6Kpia8,m[X%\4&,3P>I`"oBlqMlYELj>#$0EqR?$7)U0VB]GgUCXuBB(8(;#9TJ"d]bEDBO+!3M,/n99\qYHZG;`oJ=
%0>nOipeomq$&B-@SYCQ`iC+N*#G<>.BK(Kl=q%7\+0!_cSI#\`iHJZ/21D+ro%-jkrQY3=lf',Js6q[t\0\t-O!"AjDc^slP/(ps
%Js2/Ie;oo#k;W<M8Zkb78UfEP5>/0*P3YI\Qc^!YU])gT5$i9OcoH>X-$b$2KKM@/>u3YZ^pc*7TbA0H4:sA',6BI@K7jn<r>h[D
%'NarGTM8G&)a-Sq?W!g%a[.9BDifQ20q<YCm6l8G)YQHbim;jmKJU"c\T=:TE1toTlueeB%/TXb\0lLr^p+$OlhBt:BCUKOr=<gQ
%]`'Sp:QDj0ipP(NQ*Gpri4W7jLCF.>nA#!qJ,90;:Hq%W3'YUG,6?6f9ChlhR83\4l/_GXQ;[<IE;L/JWr1h:I.Yo!`]qQ[H)lO;
%c1sTr,N3-Uo?Y\Wh+b57!4&PU\slZfV1plnUm%;9E76Z:7]&cd^R!qGhH1_(A.nF%F]>tL%78L[$$D=LDD2Pr;3*XuJ+C:FVY)FT
%l"r3UdoG9ro.pqen'2aZ%f*HrqcWU*KBfMk!?0=6epWM[Sp]'6,V'j3^faCDO*&HB_iYRq]6NCe*LaGu55aATe4=RUiT/Dc@=#fp
%)Wt7"eu>h^ZoQ*3:K0V+3^b,[490M/84$bLNkBV1G(]41I8(H._o(^XTOJ1glnXr&H?hC;9grP<lQiH$aJN!<P&6.&^2^%F=S0H<
%e]7XbMRk0[qSlir-W]cHWW^dH27NJ[3E/G2j)7d$#"A(L]_gTW')VdZq,"O"!O)KYd<rM89L<*7S&5,jVZNLC:8?6\,`Bj?F:&Oo
%;dVngQ\%KM2AN-5<^s.TAjBukP6)"Ib+h$qWHKlUCcG@m&*XW(%GVgnTZlrB#LcGDCZ`=0f?AS?:[H]JEMiM5Y*lbYq_@^!'0L\Q
%0>eI(p`!f$L,8Eo.-a)0CB(1cD^D:+q)4/q1\8=!c!,Dj1\:TW4kFC;W^[`[PO]c!!rkqWqil`^;;9LQqiPc,rbQXc?RtX!\s^$C
%)/rEUAACLE0Q@*G'3-,e&nRT!R=+#fID),?QYRJcBi%[]=U7i^9tB^a#].qs&D5KJ+g@pn2SMCr-M_>XUk"MR>YBWXMO0AD$h;.r
%rl%H[X=c^*l*'n6"[5S1&!m>4R+JfnnG`QdJ/gNr(8X3W!eifMBu^<`HDNAl%FOC*'u1Weh7LX38C&i"[L/i%TK]h9bQM1mKmI5%
%q]dJO&*DQ5d:_a6.(atX28lDlrW7.ja%uH^X/B\*/qfM,r&7\V:kU:h;?+eQ4%JA2QD#2KfPr+K1f%2B4eI5&5.c65?[![\n&hPN
%T`PprX[B&%%R=l'AP_4>UmKqZdm9:\+'p:<]^BCG-Bq&;.a;-!b0O]tlN0uYmU.X3o.-gp>ckm&oS09CV`4N#'6[!B!;ZUlnA?5K
%^Zh[cUnN$]:BC5NC@R3M/[G&uqAcgqGuk>dbTU=LXod2D/D".i69I!$e+6@65I7JApM?n0:[)*T.R(2@cYVoKB3TH*4"WX*>6'7W
%.c$M2?)VBOFa:mReBa*>h`Kjr':1K2R\'5@EIDG(^Gb-KO$@J'6[\ZYmbi34[=T3hDTN?lCMP!m/=M*j%P#KZZMr$D"1(_@5+^?s
%2:L?4jt%km%3;Ned[<.\&:K"s:`8H6q6NhBG!/6k1)NiZ;E=b8$ONkodl1$ddo]Ap4m:ALp=*t]`]uQ@Ni)>TAZER)YU=Se"2nRI
%VB1C3W_1eq4&CYtrN,*BWRN3bRpK\tVn=,BCg*(C$m\eEhLcmAgifQpCV2YWf!Gd7_.V21Ptk:s5B_M3";l)ASA4BcQeoMAQ0TO?
%?V;CQ0!DmKcJQ<3Nr`QnG>.%/^@"S'r'R0'V7#>FNI4Z#o./MJBV.lg=W?bU6599ZVKQ8OOH4)4IK$C5Xr$*g_de.^f3Lr1mp;s5
%!&(N;VK"ELgP):EbrSap8++mUr+`GOoOedJO/"g@L^HBp"aQHdeSJ&QVseNOog2o4Gg,XI\dRd#h$`lmi+4'lC#$r,Ag(hB8`._W
%L"OoHr4;P(3g0OE[p4M@Q/bT,a5qFqd(/se5aul/&=4JFk'+K+699Vj69PNt=k@.%2tO^c#`oLNodW(bgo74I[A*(_B+!i3O#[?!
%XSI/W5Z]I;UY2G5X)S"+R,%5?$g%$.$ZV6pnucI(2`&-M!g#oMI*<oroea-!X`<BhPcW'nocj$E.;%bp!<\an#.-tRX)Rmn0tkcr
%/u8)_0@XK^Qe*8,\='NP`..^L?5eKNX\[Ac0rqfdpEMh1;m5kM9g,H\TP`)_m7]Pq`=j!YXS%nNlN$jK>&sGAPHGXW9taRQNlNd[
%_XWa%kqnhBFV"BA\imUY[CNIf_.K9&;@1/"r+H0jom-]uosCl[e,W6-P>9?s6qt&JD<D?.j9P%Zo66aI]`FUK]`H16QZYGTE[%&D
%F/&)2T3euSGIocJlisBtD1&ts:49JM:-Gd2R5J%^i%+u5W0>s,o@mq<V<tpCek(qRhl2[fIm8Bcf):^]dP71(eOP%6gRd-db5A!W
%&,'m4o?m,IlLj^dl=jBe)l@]ER<0$*=2_)0e#0YUXa@JP::X\Y-XO"TIeL(A`s8b<HQX]q*q8E*HWmnZnr#+`4WR"<CdW+*p!RdD
%Bh8=CXk2Rj/FosBUKoH7d#;,Ui::"u>qc2S?Ea@upgmV&2m+RL=AI@/kgS;[e8A@M^<>sgGSB-[+,=3LK_6qrJm,X"]jlVsLh"@2
%nbJTOp-=/H5!M:32"gKmhkVn^X/5%7>aE-*#1d_G(J<GCMB;`L(]%e:Ktd/Grl$rdMkJ*`3H:`O=4BM`nfeOEdW[t<^J>Kg>jV0d
%`l?:W*_WUQ;YX!?G2i2HBLJ9:UDL\!H?m@"k9eH3e"b6+imm3=9h8H8o]!>V0/'j3>c*n(C8m71Dqam)W3usjYC2:SHN)=$g03Jr
%++;@ic``-.a5Y?jT;Gq$E;d>Gm\0>7)AT5_`^,$%9r/bL4F6VJ`67ar<j`:M*F61qPmS?micJo`WLTn"^XX:?*RmDSSn,euNV;L9
%P\E!"A-^shT3kH"ZrVOODpST]693'FP\4(8Fs=,bWKVW3*R>3V1gY[i69:1rQMUNJlEe*Mi`Lfe'f;2WE;o_m^m6E`+lNg:JI\jo
%eP+]Zk\h^6kFY!7f))%r:\NZ[TX<5o;:1K5USdr0eA@[qi"Oc9W-$+YWV[.NT7$,!F5#h@UE='LI31P^<(\pAc3mWsm8UGEl_(87
%Yadk`/>/B(G4QY7l(sYGe=jJ8b7BZfLuWUodf/ZWBuQ7f"ibV0>o$1_3e)@;GkNo.j+jPSmFU1>pX>!=Q@</CO`^Toldt%nnP>4Q
%hg!RuNupKdqd/Mia)Bk7AKAP>kc\X<IaD.`1O\PFCJFZi\,O:SYQ"-;hd!p[G$XINgY]Pa>$I]mj=d\nYIAuY++J\._iO!,^Q6t,
%0=Z4XqE8-!A^[&.f1-8169VT28ukZ[d^N*"%-7,q:GIrl77nsNEHb!41XER-O%W5D_%OqZ'b#DNO8=ZFoPUe<:I"3bgN$V,G9NN&
%`eh8[q;l`(/%C!$bVLjR]_q7S\c'+oq;-a:4FJIR:M(O;2:*[tAf@:<k#gh!(Y^gr3)S#gU#Tq3rN4Q_H[+P`pLG2McjWH&N[L]D
%U@)5lnbf2.jomX&JSk@SC"+uSS1W(Y%hjBVl^8!K8>jXXVYVl/]l*Fnds"S]j#"R3LSr8]fA4aH1Xl+IVEsMo2W6<EBp>ide0KZ[
%Wo9b-"`UN7Bs/>4*eI7;?oBk]^]TgD9*NRc:hVCB/<YE).aP%4Y0hqo1NS.LQOiH#IZ3;<81u4EeCOnd*(R`kh';:t8j@a`9_+nH
%`X?pMqXkSGcgLFf]`_-4hf#lRR5SmQX_8B?!b7@Zao!q0^OMgVk!96^%s4Mo)$D)Lhd69Pqp4Clh<=>-jprQW-PnGb"ZF(046nQ-
%GWC4f1sn+2BVB'1:`!dBKfIMIP;]8`NU9J`?%!+RjEJ@eX/U;YY\ToJ)/[AVo]DT'XAq7KR!;q,Hoom9nGLE&5+tc$WXJ7QoN?SK
%/H34,e3U^0PR$lCFr<[`g=`&G!m#.YOtqfQG:HrkarDD2mjs?]Mc`YN2VK2lUl2;o-gJ+@gsh7d4$I[3q-^@9jY?2Tf2SC"jWhei
%4L'KfBsJ?sL+qJj0>V:(q+7ltr\BSc+7SP[K="l"96g'#V<(i`IM2Rtlti;Ur=g>-$Ybb^ZX[`b>*`h#1AMI@P)<)aQa&AC6(]u_
%,L'rN[G8+Y3kb`m>&MkHq$6HG'<-*Mr)lM_M2L*92p.II1cPDh;Ul"WI?kPg>P]mW?a"pg/oVTS`UUMQl1Ed>obcV[/RZ)W`h96@
%cjnCN73lLh@I.PC1l*gJV&PPgLAA3rHkf29/7IFLAf^"HEs:ULF1(#U0-3m2#6'^_<3ii:i`'VB1bA(ZoQ1C4'"+;"BA^5Tn99_g
%O)KAhgYXa4iDEk^)dTpe$/JgTG"A`t,L$;'kE*)re/;Oann^^s87l(eRUXh:4@K:i'KUAY/QSHt*L!I<JQ-V6Fbc1Feil4F>WrJ%
%#%=Ha*r+e!ejWO",/SX00.TYu/&tel8gpJ'4!uYU#-Kn4!OPIl<etYe..ppIa\p1nek%$5.Hu'#@TjuP!$[36-,6!Na(8.JOR7`b
%B.#.W519sf=8"1[<d-$J]G<<'@F`GNmK)d>[F!/h"s'=-]!+[LSjb4=csL210^>2#BW!4Ee`,PY1t;=4^$j$GjZ9Fee@/3O"+(WE
%GQ9ih_=5\5(R!$o=T?gXZHhN!)Q6#+gaLn=k#`^sf^<sSd,0C<>]L,=gSg:q_GR\Na'h\p=e)A_l(1:7*\>D;_^G[>Lg8QY2PjKi
%aJ=bBHZIpoS=u%%3!uJ0.%sb=RX7!A@aajmG5>+>P;;gYm'C'"4*hNRf';2nKBB<i/YBDrW520=RIZ>4mi%s3<9UE*lI(VjU/s[`
%^O$pAWRqUV0bqtKM$aB#K4_5\.A#q`e-K\OWgNmK)TmN9o@_-CSsqR\\&H>kK:67OIRs$k/YOEsEa9J_$G$$GaWZse3YY#_2+OJ]
%_nKk;[Mb&dWFphmH(F6a,qeMih%m_D;26J[8hWZ&?$e^MlSUArFm+.B42nX(>PWD$CU8EBgnXnRWNPaa5j``1I9eF?<'/[5hd6:.
%I#B`iR^X!BEUk=o`mgj0SF:3\r59P;N_<]K/qB8%Y3;O6a0IbWU`-;<I[,Yr.':CBKAFL@*2AmHZ5tHX<9qfbn-Ma$E5D3.^sp)k
%ChGnHkCp"',X/Hh3.!PQ'@i5:Pj"rk,a$Y\mY9->RGgeKE$9":e59IFq:<R.G08P)naH["HtHW0g2(3!??Fr4'gjJRarG&<Ok)>E
%T4X:)Qg_(."C\a9K.aQl3\-.C>:]57j6A^`;bcpG\L'Y\aAm:C]%\!9FU6N<bM_(X!ObOW0/Oo]a<iLe>'p;"R-o`!.>V.EK!COb
%/kVh$T.'$).T.\+1m".H<DqD">1l9F.Q.Y09:`(OBRm<q3N%u:ahF.74h6fK)#VJfELSUZD)OF/a5@MePhYh]Zt-R`:ug'&05BHn
%5tZu+2FrrPMU[<[a^hHEk!^jfkB%D\0!t*0]qVe/:muB`V9^aeEf@PiTk>TME_/Kc8[<flp(0B$c$-k"(b+iV[$G9[GWrF/I\oo!
%)K%Fs+_VT__e4U\r=R'n,O;1CmMr[X_F>UC@4BS/3$c=Y&&p\l0%+37qtg:^GHQ((C80NWYdVc,I)U5]Qa@XQHWiKP3Rm?LN2jlX
%G'2"g<$F1$N4CSAGamc#]eO7q;H,"&@pK[;D0Rk?Jtub2f9b.sTm%L]`>9d*n:rTMo)N?4kmE?u:cK4P>&5BBWCC*]1uUOi6IJl#
%5(_sq(pr41?/Uu6RFAaIdAaMkEsc#AZhS!2[9ph*QAncY;\UNZs%UeiL]Ls@F`C8G%sCi\SCJ-XN-;@iNgkulL:866;5o*j(>VS`
%/btUDg2/?`JehoU=$AWmXUL[e<`j'u7N0Pn$F2TeM_k<%CHq.I%Ui,I7S>L[*SeW"lCP#I?)uMpkS_J$$2`Wjdic%jLqM*Df!\md
%,s(*WPNk^ae`JpXU+S1ZS>;oKYCjT-L[>mLYuK;.i@/CFOc3/:B@jkafSj!n)iUok0@F=/p:<Gb5DplcbW&e0p:KkVG-A2,l7T4Q
%[7k*_es_?.D]Sj';G\j:^=r1-hbma;&SDYb#4Qj5-b@!.m8^W$>=UcVBfr^`i?ES;EkR]eWG>A,,#3C9N4LI7MBUCt@]UA/EQddm
%%Cd0h;j/r>V8O[l`S<(cp!395,K(noVCR`AKHOAJ&S"tVE;e<]_rm&WAF+7UVGaJNpLQ`1WH*I/s).E(0$=$RVPS0V8g6U&BtC`0
%#:s%?Ch&Jj)CRK:!OQ\++/?Gp!p\27PC=@n0I&Z$/hIo<*\sk/?ps=0G)67ED(RO.YS,iWXU>2=9T_pY:[.GD(Rsh*D;85jlal[s
%J_$L&,C\4O@SL=Wrn2FZnm8;,H4Hk$h+JgT]SE#8j=Wf_Y.@01DAfm)g+!1?#D#kQ!;8bR-BWR&o-1<KkGoDO]/t7<I?(!2]0hrs
%[\gF8BdPp>+?gr#!B`:+=qf,'?4qPH$o!Ct7juEs1S-R+5BCSk@1OT2M#-e,^4`V:,q9p`6PbS7O+LD/QYfS%8_^\*FsPJtRjePQ
%83g,"5/Z06R`"bR'N",7k(i@p>H0]T!lVp6:(a52MioQF(=^!n<B!(F/KL4?&9i.DmF+T8mGXo!e05@"iR5eG5>3g,ZSZmWjdg!q
%nuHJD%!JJ2&[bH07&aN&go6S\9Xr7&_;M%jEh_^YCCi3;+P"2eIA!R*89*.-^r,\Y3GrRVqd$!CD,*S[2]GAT,!fCAcZ;l@cHRM!
%/U%'C!4&kmbf/$SPot[<e2d4,V4tNjB^Bn*dYN@/MM]fOKCR6NMe^_lW8@R8NhsNJ;mp9Gd7hHWisMR5TalNfZOB8aj_`gF3Q"P6
%@'.T2+!I(a-q-LpTVVfc;atA\^/L?GOFo9D/o.+J'P[/G;E\JI!]BAgTJfAu@qS.b$WA/Jm%B'3W$kZW_MC7s.WpQ&Jil`_C[9?p
%e=5oe17Vdnm%c>2;h6fsgnTE)+,k'0%CU.Ea9k0ohUHA>.[cn97o\0>9#>2o3UItL(D:)T\:<\8Tq0g'cFW\9R3"-bTc$isO?u?X
%>-#;XlscO;q*.;]h+Z&B$X#1brlAK%:#u]tgYUA77d?G+XWr3"N%=^ue=Hlr&UhKbDF_T;kR]r#`bS%;NV[lnqc;NK2!5_,@BDPd
%B,;6r&XYM"EN=UoSE=EN=oePbJDX>AdaamL.9\YOWbk+d;T;Nor^G+3E&246-8LCS=[*aKmW62EWhu'`]E!Tja2QRrRT6tEWoc6G
%c\?EZTO8.8*JBVUZC9=OU'X>"RY%Vc\jeg*2M#KHm[dW<EUL!Qng5qK)2B)BMmGi6;]QTe)g4gC@1XP@_+Zb`i""lR'BH#B4,_]*
%2!&PN2hbG4^DDcOWZcJJiUmAdhO83,_)'TpnS!%)V825JI3QdW#.-cImNnn9D>*Zch>>9C.RV+I2C1?@<+FX=a7E?-Wu%9odCl#L
%MiYIh@tmplFCJV+:q\S+hSg8$H_l[<<oococf!NEqI&0qYe@&Shld9:H$EPHo;onaM?t/si*a?!himk$d5n>G^+W5.a;qrsJUmF2
%3p^%lHh)^5b!oFQI<@UVW4:W1@NB0d*UhYtV9DdnNg>ZMEV?CM3Wpt-`;oDdTm%1oauSc`=<:,!>RK0R?ZFJAY&3t2)BJl\HSA2h
%a?s%tG'AC1Q!<PMbjXqXa(3?@\VP(KLL(F2fC:^OZc^lsDf`0&I1]ia0o$J,,'DOW(=kHXfRY"F'IP;qi7fq#"U!&ORa2lm_1[X$
%*/Zhe7i$u=1`bb1;1K2CrF<l/[PA"%;KP_6iW^u<,KloTqghk=%1d-r[b+-NgHB#3VSmI\M]9UXi:+oq"[s^i,N`$H0h.Aa2a[K=
%p/2d/_=K!T(cIa4Mm^i)a:PgRIqR?:A5(5'.dI'hoc3_n;eer,bB5kj++A6[ishKodqa99\n640N0b]jk$fo_AcsQWPdb)CbNfa_
%a-N5'ZQJ_rAm0OfccTUIpTNd*e-ST46O+TC(t4nh[he)0=-'<a";^O1k0X5cgUfsA7W4dj\pkF\)RJuL(iq*jAT>:`XY"(Eq:Mt1
%P][5%7(k&K`ZRJP:dh/qF/+BI&[\dM$OY(92Vi\<VJq(i9dr#%[%".AP("-)>H%<bSM)7phMPJq$k9G.X#=Gk'E^0AWOR.9!N,)>
%U$f`n^8n'o-.e"U&"+V9Y!JO`#K.B0enY[.90:j6&d`)WYiWJc2i+JTOI%$@9[TU@L.KujMi>TM!@Ge"/Uk==8S)`JGAl:YX1L-n
%:CD6UBf])#AKERiC,Ne)L!5iVkYp^&<"\:OD)-\?&!<$"A:f:m&ggR>+c?2>>DNi6j<rRI[p^>;]^Xm+S9V%4rkkVCi*+_m,_l-R
%<;6Z`')Yf`%aji:nb4=ll1,gRi>ojg"_tiP9-0A`nDS#gRm@sA>Sg<uSOB3sfsX:9.tC`F$EIa#6j9\TWrhBXdtf!ZA3WcMcs)HP
%IGYYh()ri7b0AI,,ua"g7(fOe4k*/mD'$4h`$cJ.T;ue=!.Fo&"<X`;?K#CG:e?%EOYSj/[5=7UMhJeBi0.l:X_](@=igmo.s.Pf
%fif"[8eT_fJ"lNNp*X";V.(k+*\GL?'q;Apm?tQO\c7n5R(;8=2%Lh6:()^ai`+nK60MZQTugF1RRBKqnr6kTKGEqPbc^J3nZR`j
%^=ddmQF4OeAn=Sr)H2#rHZh=X;'"[.lX6NGQ%Jl`au^F@59[8^AU@-9A7=iRdsH(D_Z:p-2Zu@(&\p0W$;2<6afEOg-l;2B6^!Fm
%=4%$DiTP_-d@:*fl),nnjLHfI!'@TGj]ESJP',I/[.S$IZRd=A;Dmn2@u`jQ(=\5C0pd=6!_X9pnkG;fR.AXcSh@NT4TRFnU]\S8
%Gm/j?U/'anp>5W/h'\`3l'a@&X^2DjmpfJ**Mp^o$JIARN@_OVH`mu4F)8h)H0H)Y+2_obK@Hr>bEKMh>j-_^)qW=MQ&h<Goos":
%2esX=`5,^-oRg;^V1>rFX0tgF:2QF>^1>iki?;U,8h:H&Z;/4M.@J9r-'cX0dV(hM8:u$:%NK9*%L[5oiaGFndW_$MgA6N\VlW>&
%DFWKu'>7m$V[LCIEnV?Q7qp`F,\[E"5ZmOJ&skD8Ihm?'-Quj2A/S2*cR`SPGBgPU.1'I-K[]:C\FEGMam',c:.aDZ*9g[,[3'cS
%OZUCVR3tlbEBh8_bHm+F/%D2ZIBmD(HPsh6.cgZT8:;pOQ89@(!Wm'\q8h<J7im'$Q9#UPE(@k\*hG?P^DW=X%NTt3K@LJNSdSV!
%Wl=iZ&^k-Y<oE1W^A'F%BLlQn-4n+701WJgO!<Hj0$U@&>O")>5S@X0g8V@Okh1)hlhOgg8%^ueMHea8'?g3.+[<U%U7P:)A`10G
%EFpdmhS_S:gnRl[2/kCM6][Eo!(5-CPM5=h!lHcc@O7P8-uJ$JA_@]qj#O'\JSJf7;OZ@reo+e@c$WC?m+9[oDAU[LmAcDS$/Z>/
%WC<+hMD.W<Z5GG^0?[QFg/U8OAf^*/ZAk!S<LH2&@@pX[DK0G7GTK8JG[8(""I!@./^;b(L/%_USqp3*CT(a>\Q)QZ4"1i.MfN_n
%F(-CW4LeME_A>kl8ebb3!e>^%N+R1XL^c!2JGjHWhXq!B'N>GFUYC''NR2k'f&P,3q*nGs844sQoR"4+GJ:7&DbLho[#DjiW^<i"
%[)ZZC$-/4,H`#^Z7V_!=UAK&uq+).B_)7E&`M$"<V2[(PfRk9WooGD7Rn`!:b(85)49QZYFZ#]_$+%G_"`K^3CW^D3S;E#EAM"F8
%+:*BF<b,)1f3=Gp\2gU[@.9h@gfbXGRhORrYp=N6AGK@Cd$''Hi$(dj]32dnRuFt7jY@+JK`d&bepqB$(,/jj@6&7LET>I;#>[I-
%?&,75(/p]\"#)BL^C$$0'42\5LD_a5q=g%$NC4>#];UE>3An/+!Xet#Rr"&iYLc5PQ=iD'_*CXABO]Geos0(Z84CATKCmSSQshHT
%IT'Sm29S(.H5qs5bLK*n(7n%fdT3'1"geO6g8I^PY*\C4SRcfC_;k38k@T2eCHm2;hVb\Ra:nr6\*u#n@3<`Sd.[0nFcunlU/8&<
%,;@WQNqRa6d7n.r?Z0ebVM/Bc[KqNP1j?>SNOPB]M:p_OmQ,%QdI%q1^"V;A</nr1>Dn@O*prB?HoMD6UiuDCnf7$Af=O*rn+g^B
%-T*RAdItlTBQpYHnD:eS8QT#&S1661P[h(E3!M*A-i+;`5Ia19igMd</t%L,>52$NQb,PA<")if)qd6c_(qB$Y#@(9=q??k7lg[%
%0tEI4GB8jnJ(OCcJ*?daj+pct@iD1hooV^kmlZtcH[@sfI,Ef/XsQ-Lk%a'JGeAS$h;>PbG>qms]]0)W-#G9B/q]#BdLS-k^'V:X
%F:FD&mQodpYejeF#%;M(3&L"kmd!;9@2OWUQIngnEhJG.a+Ael]]]60C1`hj_lm$aAHoVVB(d'@Z"+7%%P@L_b,'-RBp'3FN26;H
%'PSA_Deh$:\"ehdVP]iBEfpIu14t3kb"<BtVm3@#F("6o>&*]@cN-OH!R>ViDfTK5[*9Z.VPp),_c\U?6Y_bgNNC<(!.bH2LKSFL
%CcKZV]USuj\Qpbfl)>[Ikp!Y/&%fj4]stsO2sKEf`#;u.#nqqnn_)oL9/4]GF)b9@j&')_=1Cl'4Vq&"WrI]2RX@2-UqnNB+b3$5
%ZRE9<qBD&JL@cp7?-6jes%nVO2V-Eu"1"LMBRjf\aErN'O(Us?/$=eAUEL>G?(@]s5h+9fJn'Z"bHFm(A/Ui\_DG(^ge$W28Jm:3
%BTa:Jc=!PJUJ&=2eMi\<SP#?T'2fXEY3Ujk=/!iSR8C@#F_:mXUCj1V/*0n7qcIM'4Y1hqfWZW0SMg@JWYU#cMkWA1-B.^S>;MG1
%BMa'619`hR^DE]Bjpr[?4JUV[U2Z$dN07]NZ"le(bT&r_g/Pr#W9:i,>]3A/eNZ\%q"-4=S9[.A`BV`8>5W9d^DL[,o-Zll\a>G%
%AfrZ-0\Z.L&[2a`%=4>aQ59F%g89(r'7Q^u&!r\L#Zmh57/8$<#-)%X5fL$uT`tjO7*UrMFFraOB0DAW^"=!o/G(G`1K_UGe<'&B
%70[a5#WHn$FEk0AV"dSSGh"@/;H2b9Mb:cM,fGEcY]!C-s(5D8dl(j0W"Sr`qV8"qVde.%@CRc&F(.!B>]u4[<LH<+eP'4k/Z8"E
%_n#.aU7L+@Dd>Fd!p`g0>Bp5QqFTqX(LQ=m=*CINQ`B?/OZmqE&*^UonN<+D</Q_jXL5G,SYH^-+N0k]0)*p!5Lm6_\V`a<P)4<\
%lpdc2A]a.mj\ghn9P^lLJu?B9q9'JZl5%@,S[%1bLiKcdFcO$eU2mZ2*sa\j$?b5jCXg`\9?"RnQJ@='FtE-^LkEjVPEBJK*;nA>
%nCX':*\;>`+.WBjDbJ?t0K;#Wb''JiM6a!K[YdhidbO325tW[a(st;uF/eQcM,jBiQCQMEeFm[^ACuU[X"0L["tIoJ@EB@%ZFV\?
%R:jF'Q3U&`/l1bFQE4>_da'JT&7QLP&PIinbgB3KR<'TSl\-^]A!qj31M&Bm.:X0kSB9Zhj33cE3kGjs`0HV/[cN-]A^Yij*G;NK
%2Ut@g&Qbj+@^Sk?\MBbr,,'*tj`SG71V"0#?AGfYg<X"A=&MWMba!8A`;2!e]VmF%H/ct+VQt'mk/pi;@JLL:k0]8L<EpD>C7BX0
%/OM92I-,(0%.T],nMArM0ul(W`r4?_*f]r8$!,f(c'M:T_l+rsN:JU"SI8fe?rW!F1LGl>FCVJC09[JeMV5h42_a=c7.;]T1Zj!-
%q=s>hbae6;Dqp<Ip<q`_0sf#o(KQHf#^$'3Vk!o[q';u4QZ98Z";Ntocr/Wg>?IFh#OWa=Jg,oq91CR]B]mQ::V"\P*\;/@$;(Jf
%n=md'2@lt["tNV%fhU@?e-M_4cCbf2TjmV*cXMd>>s0"B5UTl?.D?K?oq\XOdajMF2YYG`7CP;ol-4!.FB)p9$Em&W;ROq*P%q9E
%ctM+=QA@]^2>HfBF(b_'I6V&rqe4%mMFRWf8_CUu<csXX9U'+kAaZiiaT.:Q3MD.oE+eL2:o\>WpM#_llE$]Hr$`O?@`bp%62V_s
%F+eJ%8R<h)SC"6n")!30iYKqY'ME_r0(^`[!BbEA>@aZUi"o]k-Y"W0aWD546DQ!Lm5PdDV.kT?k'?qL+W2_<b(HW^YaEiWfM]+o
%\>X0I\06rCVReC926%i]5f?j0pZ+%A?1QXJjLTSrKi&-tE88uk>F0>d\>612PSG2p5tq(,*Zcu#rCi(9F/+b/WGLuuQA"$BY*hb8
%\%DSXb>;SParI#N1oS*7j,1<s(bEp_BFV"'Ecbj#;E5Roco/eY(FmmSF/`:G55"h>-4f5;(5$ZZ!$*.3ZtD<K5t5UFTq!]3Sr0!Y
%h(g"4mT^sB7dO2sp:2fLV?B@fP)IgP.l_!bfp=<nQ/Q[3/QfkE)sO'Tm"%(H3?2V,l<%Ud")T:3oM``BPscu2-&<('bWbsm"aMMX
%b3&Z=EtmfGZXT#JWU,RS'!k`D/dXj3Z;K"QG7tDjMNM:\SulN^T&>4V%!!sKn)@q1B'&c1GTIbbgR=jS]F_DEUqBVrU*al,.dhV#
%45$r'3[_8Hln4]t*,Qm_H6lI]%KmC6q*FRn5deeA6k/!SX\KF;JYpo-T$="BY_ZVm274bq3MWsm:QC(gi7sBj5,9e[Q'G/2Ull`&
%,.*Gm!uicqX[J&SEeM6?L&%%M9P[dL-Mn`T[U=J-9oj@VA?@.\k[=XQ1ta0$*0N1+0sSUkj:CiW_?5t5bEC;;G0VFP:.R_n,G$JS
%Y>[KN#LdIr<e_XnEOI)()`n9&dE6h2L]g2;#$#KMUK3E)0hTn)46&HjdbLb<L;_*BTKpUg/-U?g$?E`_c[S%0]=Qg!HUC)81]U6T
%:;C^MhGLDkbe#=R9%>VX.:@aRH<+!)]KCFDVk[9FP9nop:HPM]oGl>sKCL10+<:rdP]hYqUjPTp=;-(5%&e!F[($4Pg3Aqn@5Q;*
%.MN$.De>CX)BLt^457AZdX92s_8ZnT3_!S:"k'1h-n%cWq*=/ZU*nWQ_SBKZFD.[T!D?jFbq;?Hk,r5GMS"Lc>S6\q0P'N^5&TKV
%ImGMm%6<l)%E(Sac8pl%7&Umo)I]'Ef!E%3-U9m9g5@=)>N:I8`JEQ]GV<`O_aqVDa<C6Dn%hWN=e$_Z];TNQ:X5J%5#T1dMG]*9
%C#lH$DFcplVUEcVM1$9!Na+JZGk,(bTktZaYsk?4R&>a8>fCdIEg5+Y:6iXfWSH2_HfP<#Bce^jp;.pB[")JH4o/i%s""A/\3ihS
%E*<T'cL11p=K]"i.<r,,lH1&3i9K'&Rru!"03--2RN:K<EdnJ0:;@3IOA!M^95gckEc^oHK#+7X=,H05F)Dahc^8^L$l1#!#t"cK
%j6&-Solum<ps!Z--k]nq]t(IRdSQb#m^s1^,0d\#_O/uN33kp4K=D$&*$4D,=5mZfoP/`P,];A[ClNN[ad8tf&qNeQ6Bj(jo2ppe
%q/T$(3BaLqQ^&3)N"5U--O=]3U;,:A9-8am!^hhHe-/cWH<U%_d'Xp;`rq9&E>2HCX+XBc\2.2XM1mc[Hf`'''(Zs+q77;p,pCgu
%?es\!<JL1bZ1uSB*6c,GF+U[A_g0A'X?MJ36%qkYZ35+nbK3/+>Ba!0h)54M-V!DC/@7c(9suk59u\73Xk?i[/?U^lk)<M`:*9\F
%B-YOX&5%YJQ-7E`<"/ZW$9"n?Rja2NfT*:7!Hjb2?`18MjBE[FT:VH/YAHkr3^N>tdtgp4=0>qPf"JSF5>/hbB,cUQ,=/f_1R/;!
%S=`pGG92=2Ng[5dpC[0c5/ke!gX08S;7q!qNkb.U+gl.cJrIUWMH%_6#;'g`!/i-J$[FNpnegrid'hm+N&7u(,.b<4Wo[Y\+Bfc*
%FOQ%UVcb]tnI7FKH5oF/GFJ%fN'/WVaZVN!9A,.1R<3aJM'(5\(jBfI"OO)=HEB;SaX@mJN[Rp1NdDhN]0Dat/7>3Iff+XsS42lX
%.F4W_76i?Wh@o1[>OorYmKtk]2#MJ6cQElo<Y6@gbpn(6ee!3_I7IkLiNk>Je4m;L6Yf$eFoY**#g8j9Cgd`N&r"JB<<bIQM;!.?
%^o6!/Rn!q;il->WPK-AM[:P=3%=Oo%I3rMJp\ic_MbNt/gde*bg]_GV>,PT6M?!ZUe_8t*13b;@%a[[5WS&",eV`U.c@?Q>'OuW9
%PjSr(c"7"$(m:4+$jf*["N;f=DGEIio^3SYaaUTNFR\UZ7^9?/._=TeO+)@tWADgAZM^RgeYWgQDe9b0.K3ui/qg5iTXO*8d9F'e
%-TEo0$+JO[2s.d,.13SGK6,=q^?SnKbgi\&"I"bgTH5A>m1]l*ct%.]a!l$^4e)i60qH+kRFNGO?0B^6g>M<@og9$@-rpAP%GT2P
%k\61O2BXH$+,/Cf@3)J&m%<ZV=@PV2=?k))+8M%A"@13$XSFW*0j!`e,?GZ^KCgB/_1%aVW?.s=l#3SVBu-P1[I&j;R]:.Sf8KQb
%AI^lG,5UP1`NKtX_cnAVP.H`6?61BigPGeY8F=Fm8)19si52aB9hUXK,E66##_^k4fVqa4LliFL6&J1/@&R?7BK:#N8B]YjAB>$@
%6ETt;6;\_u%_GpjZ3[H2(pCD[,F+Z-TOUo4TaHXP&Qcd_N;0+dBmboqU/[*$Ml4-F@$A[`NZ<(jc@U.jm2cjlphQ._0-In5/4S;=
%e<H:F4Z_e0@APkfCagS"C:.M!X2p;(S%=)MOFj;*/M5V4dT!q+#m#ks*[49T#Za&Kjt:eGNqs#]d:D2#Z3k6>^gi=$A^3%hq.k6i
%_]d\$Qk<?_f]S.BY.62)Hl/hnHa^5<5%;<@6agRJ5_E1[$@WhGjAET]<*6@:?<m62l,u9WUojME3/IZjP)^71C,Q4j8&t.40%?93
%N;inG>'n0>Kp`R_Zi#Cnl4@H2>g;bhVr=MCC-#JqAB-2>qXb`%`bn^O'W)]I[*TA+r`*ch?D=Hi=9Nhl<:2--L;]$L\iV`-[\QI7
%M+rj0M\I0HXpH&bW?HLpG>Xm!mj;:>?7#"U+Q+#[Ap#M!Ym?ofDVa1R*gLk9fuL1?-.FsRY]Spj:TVF(pZE4c)+cj-:T2G%Xhecq
%2,1uk6H"lpO=I,e<Zt>K?3HH@IXrj5ZAUYb6-=-[,/-#hL\VRW[0#g.#+#/kBk`$&<a)Ie/OiH3XIqPIW.'Q7a6H]fR9\n04mO0Q
%K]$+2'sD3i;uDsY4Gl9?'h*t>7/h3C=b^YB3Kd/_<hl[;VH/@M9SUou8+@:1e.-m'fbUUA"Xj?%IRd]]79bC2T'jeTVrudZkV+Sb
%>?JM9SC3Z#:^J!%M%0<lP_2Hhpq6^cfL75"i]a\Oh+"+'d4P[8+Cg=Ee5VF'4I`'cmd*_m;tqNuABYX>X!d4%V"DO&Yj13b]RL]$
%i#p(o9D`B=$n&uM^'Ud#mqUIUG9c2jI?AQYNIYbdMblJ^%&BnB$Oa%X&q-(33?f2VON@3SUaR/_L+&:c`Wb'tPktO-6(YfIM[fQY
%KGIcIC'"IL!1&gC`1bV]4'sDSQE*i7lcFK6<R5*.\r94l2@4<QGIufN:qi+PT"H\qrG:X@q;EdgE8(mp>d8o?p"ectj`P9#emDr]
%j_9L^U%'r$-7fR^YA!=$@^A45fS7ir`Q0*L<<b'./SVX6!o>4?Y<_h?;CI:0VYi[;6h1[pC_u((p1bh?h+?:l<U%7_M[OG!Sp0kJ
%_Eb;fRT8Pqjl)&kr3PWJBsE<b^+3:X(&+`oa$<[q0S7L%2nE*L=8ASBoHBkX3BsG?E';So.)f4FiMDl8G,[OCc]Dp>-W9oFVj5m.
%Tp5ke0((Lhju(tW1AIhT(P'qR+Mh>P9+bWp^d.)aRt@tRph:;3VFWaL6fq9U`qfo$AAo\9\h'K[>0(fU31MEWVA>G=AN`[E1EMZ,
%I-bAT5E?TF^<'GM[82X$<75UMQ;qt\--nW+b:;N,=mE6u$[`56^nQRG[N]E*^c#%-s%trt^m.IhO'=1gV3lK=$C@pUL23=b]4EG\
%(EkJYF>fsI;p1puSCFSaJ'YcO&_fAOlV]R0B2UZoXNccg(]<-Uh9]PD?s;T0FG:P^N[_GbO9-aTJLSbdU't7EMjrgTkPh,0/CW_`
%P$L:W(T"-Z\B8Wn8p?3+-drtA_;"Zkd%]2fUa3;-6=S(%L93M8F9]!_1U!"]6*<[6fW(d+6p&)U=U#H1]WP7Ol>oI,;=QqO&P.^J
%$V0SOl]14BJ<=FRbU,.9n`4#&;ia`99O-^.4W*Mmg)B6#PV3a^J2d^.$[d%.$RSrD@#5ATTP_6^0mOcRR[EXZUTi'd%qm;cD[;W&
%S,Ka*ZW7NCD"#II%(UnkTlpGVc/M<Q;8E(u1\u[%`CgoH^K[0qDM#%8'FnZ_IU-tl_F7Er_gSLNfn`Qd1(J2VVcYkUVEVKfmm?;$
%Vujf2ZJARIiHFbZlJqZ]2L(c#,nTcD4rR@[aV2K0^>1.M#d(k=G$*;[>+)HC=ncD;Phf<@VkMi0O==mH#XPIq+%?TMU`TOZ[FU@4
%Q'<`*=Q;I'PjIpVd;FO@EStR;o8)i^okC_cH1eq(;Q]mr[^KloAT+n-YUeO@dQ^X9HMsfGW+GlYeOZL*g&@N*=;phcQ<t0k]6VQ3
%7]9;c2b$NAKOb+YH9Ef3.k!9E>omVK[NRf#?P0hoB)\?PCI2:/$Y9\n;O=1&23($I%AIb^P*8neW<nkgLZO'O6Gt)T?8;L.P-lC`
%%Z3YcI[D(t@$j,K9""^1gT\'FFX07Q8InTjpV*s2PNlJD.Ko*/.:^6FJ>0W*#i^\`2F;8CoM#MPCj"AghjiaJZoSe1EQK3&R?Re3
%g--?M(m*h@nIjEQj2<iuS_,P*W\B*t;Pj/P<9X:Zbl+W&p/FKk`=s.>/"GV'QFG]=$4a^d]6ZWjHf'`Wk#C*+"JD/b8J]=.Di.L(
%Rs>.4=HqNf1"HXedVLtgXA:^eOdX7[r.e3IqQ5%oHR(bX3fKrPgl(6rIAkW_!n:$T84N00<qfOq.B6Fc-A@TVL:6"B/kM]me(XVR
%PacUo3M<?gr?ODq'u^c3^`?'Ii0,Y/eJu`=PEj\J/dgHU1J+)Mdal4;&LtKea;];_X>q5qT)<7Za(?$=\Le-m5W<%g;4Kd!HY,6t
%>dJPSALek<D_p`IX`Ad5@S0b&-pXG`_1?=]Z#dEs!R@[_"0*ea>eqc1-K>g@6<!aTIPs&b2pdsd+tJ/LgI>?RX9L*:c;q&SLN15f
%40Xi(/*Xm]O9R$1WWZ4:V%?!M0og(JZ-:emPoBeRj3!A6ZhJf^S'Mh)5KX=h_@ERN`9^ZgACR8YOf_fIOp#METF8k.gQ5%[&Hn7/
%Rg\(][p#b)U't92OK<2(9IT:WG<f?M[YNK%'=7G8!q]q<kgA5`3A.RYX!O1jhseKo.,>[/ho[,?L,*mZ=,EFe+gjogUT=euE<DOZ
%3[LTHqrkp4IFVQVYo!#VZ6TbW[-Z$P[(\EcW5soLm7!)uABoesKOiXTnhC:I<S3E(=9Q,\`(a+o/:O>A>t?Os0SF"ErE$P@q:qc?
%2NoGMaBFjnSN0K]:nLjgqsnMs+a4BJC_"LsKU8[B+p%b1Z`/Z0]`D$R-+cNMkETl;jES;M+'P/8gSc1uZTQ?I0!=S9`=tb0)mWG0
%Wu,tILK'/nX'MO&-@oHhbp]8*bVCX!ObG8+O"4s+_J'?6Vt9luI_\9k0J/<L3LleC)$EQp)V6^!>,lRm7gjHhNUdbAmi$"G/._-[
%>5pC4r@FHB$R&qIUm[bIUa_:_+p*&<-pk$'*eG!4bm.neUrAMI`QpjjINshj.sJ>f7Esu0;aNR^/?X^GWlYm8IW@7&ql]1kqsL4:
%p-R?#Eb'-EFO9F3=EENiT$!?B:t-pI3%;Bs?V%?*4seFER:fJ.g<AjaSq'$T?bs+^!.:H1r+m7fWOkZ$aX9u2L+p-4IVAL5dFr&A
%OUNBC;JY7N<OEAiEE'M80T.PCn0k)hdR;7C]dV=Q*p00K8r#^Y%Vt1]rCP`%5\S#_`Cs&KD(/(aO@Yo,2o1\;dDa(]M+#VgArWFr
%lRX0!kf34pUU&2$a&CA<Wk.&ShkB\H^%8p?KB-hWSkKIV-osN2VV5O@7A2n:pM78NLk*l4V@N@02F?!6\kr7fkiBMC(u_E[LPGf)
%eB0t!Wm^/m+Bcje+B,<;k?A_dAfgERHRNN<%Iq-,9GHDf/;Ek6QLPG^@@9P8f%rpuO;WH'Oj8iIPe$6_DFY+&?.hUtYSL[b=e2c>
%)$Sp:n<_[6,+]X+nE,^64W7nq`a$\T8V&R+e,thCRN5O-+\u\(l1![=Kk)LVg'a!iFN^_$oHCU>,Q=rc>VU!HnW.CUVZG5[U0Glh
%*m1`+Vr)O'<e?t4p=/`PR$%u!/S3<]?i89a[lPsebB#S]"Fc1[*54"_*+2eAKbK]6-m$M=K&FgI,l<Cug5<FmUD6is1)6-NF5Co6
%W5iZDO4I'b8]ai[_\L9[H,prp%)j^MnSIEPbM$t70T[rQmA*^-_\K#3<Bj?+58l(A;oFRKJn0j5+SBJF<YIqMJ"J]-Y[_\CpPGs*
%]pR<.3A1h6!bO"E%2^0M7RsiTfoB2Q9q<2[g@_9?/t/:q.eBq2d3<if4rObO^Cg3.:hk*QKOP.bO=bp.dI-=&\P!PM#?Ji>UAU%9
%V`3c%<H%Fs-*_?TB@``M+U(It"f.i0]0';eK7cn;Pt4,4!noA!Dipp,m]Ksk%%^$=El)+)O$6N#ZVPgcWZ8n:*!h0,SJ;O`@Oec'
%C%nhs1o]Lh`/$tn.4ap-;NP$Eamm;DP_;`gfduc^P\pl:B/N20J&GqE2)J:0O_R`1EcSUifMFFTbn/tLLEik0-db@3)<oNu^Jff7
%KTGM,1)/&O2c`49pR<2@W[>)"qPlF&ebpK)V6?1Q@eRXf=kp7dV:9sVaQ0ga7I[S"L^4%XRP^VEY*l5gT;'p-RJP^;;otDCBnd!=
%P)HSOP49e^+3iciTujQJDV<28MGMBH;KliW0%#]p;,j&aY:d(P?rOuuWNDVuFFmYNk1?@u`DEMbNde&j)%IF&9QmOKK($Vm+g+)4
%JqSc);^*EKhj::S%@tOQfFZb:Tg%t"5n8qk=P`eMs-E/Yh.IbaXZpY>c:*o.gB0R2[Fr.4X>]1[H;u8]Jn1uNlGa1:3gA5J/$]:K
%;Dg)N1XM@Uj3)1cC8@"L1Rqq2OUl2)W!_g9_F.@"GLMc[c.;RD&ZV$=2uf:e564b<k")tQk=/0'3;8Vn9ff![Oi.bJp&A[>Me_5T
%2(>=Y4OHm(<JAbYE]F7t$Ro4Ylk?;\kNYuYamWYFI9:dK[2E#/3e.9_0a[FPA<O2CK2N]0#/q.M&aSQ!h<a%VIJqdY2>ifU?K0u'
%DuP&7bl=dPP!Alf-"2"FC!fqd&J2i.ScX^K$3U9([,^==Xi28C'muULT[@<(dNn$g8:<Rq@<k+RlbbCuN2SPDgFs<.d'M.^E7>PK
%LJm9n?ql*@L6lBu9eBk&4h#EtDKu:;5.k7@5L%&CZT'-)GHX.SRiq+R!Vi3h0j&n)Eotr$/&@Ef'ZG]sc??;5@=G:H)OlPP$rRe'
%'e)6/C/%F,r:Ht.(SO9k>E[3gWN0\qS^MAFKYl7fWd@B!V*p/;1!sF/5?ONnX)IJ;d864-rQ8T\<(.D'WH:2.X>U7NG:q'pZFEN8
%"qfo)R+_q%<&^Yi7/>?3_fCrEUJ98P#pPCNA[Ai3T."Fi6n7Ma8$rmJE-F;Pl"Z?e@9d&_X25Yu$cEZuE0[ChOS.gGjrJ!<%W\@0
%#(R'1n43H@/E[m(-oorrr$HK.Gc!4o$InO&S;'=<MD`qg`"e/GLGcQ>lG/6fg?T4Z%%K"A.L[@@[A/lNVY+iVl]ft4P`j0$(Macn
%kea4%`0rIKD::Pe.:?t;U82qC4,IX=faV[GlnLtFJeO!d+Hpc&gN=ZpBj&/sOe^T_9l5758KTOfS>`o+7Q3j-B?]>FN0<Z2rLlG:
%YI^aU\#9-+)kf>[PH(p0RAKli<mVBDcjGn2B?k!:)r6LWN%@&pUp]JSe.DSi!@m9?#M#+fO5Su.:1j5GUQ03fg]Io>5"h3!=!)NW
%^#p0VBGk@4F1Ci$I^89]$4>L4hD/Ok-Z:oDR1p#<VN[6LglF4pkTT%qWP1d@4TmmtPr9TEmaO%k>LlVu[Sa+E4E83U!uE?Rc:\9Z
%A^YUE9"!1A&YoB1-Zu^D\7s!tFKQ[IP;2/FC%rJq5TTck+BHp0dWCgSm3V3k6a@Y-^D%MCZ0c)$:U5/,"qjWC2",_J(V?.U@\'#t
%R6o%;aA+35jh4mQ%$@P#f\5]3#>^^cSsjCk>]M.,Y2=-CcT6rM_;=)(>D65uM]>Y@hgmT\`i-9b.I];gUhgB$!tpFc,%Y1H67Tn)
%`6.4)'=Y#l]dg.Z-bh.oAL`P`;pJ;7Nj$shVO\<'e4(62Eq;.i2,e35\XS4X^hk/U^l>^mZq47#7J0eF5C[4978!"FRr`B@'M30i
%Ts@9eET>\t7;27+i.]jFHH.6M34&=gD[Kf5r4-AuWT7qlW1'XAVs*;=hN_Dq]9W21Npl5e*@reT.F_jG)_#YP=fTjk*D'!MMOJaP
%A&@-KgSXe=<PmH#-X!IHjT'%hB.<&PrLk2aR%q6[1fE2S3/iD;*%KJ`,e#b];8AE<o4E3:8tN06)a)C-(j]"'W76p'5U<0$WMTZF
%;;!ft_EE(g7<U>*[AtaoZmJ!f<I2gT=h_(VqMq;^?Vn?fC8$ou<TNSJ"YqL.rJhP`T8?IaiH3DlcTb,e^#4BS?:a9EI.JHZYBHA,
%2b&)fJ!k&?OjZ9M\)k*7)$bXBKj)I^h6L49!-e(!-2Y_Dc6hDCB`S`oppW*l>YrSj(F2*17cjpl2s@M@I1;GOYNdpJWMSV3:d$[N
%/`l:G;DqgHUO+.R9_7r/lROGkn@l9%dl.?j2ho[j0Uq_*C>bT()mR0fP\a8K@ARM2[Jl:%Bocl>nO3&$^V1m5'>/_Q=GGR1I+R'O
%X.L[h6hfnJ04$m@m_uYBIJ*96QTr4Zm[mh#qWb-=o3ZquIeWTos7#0ildPNPo]'TAs7"jF+9($0rGhe,r?4ce@3JF]rkEs[c&_nk
%^W^S25PiLZIJ<,ihnF@6?[mClbmuJAqpBmerWK_]odqhGp?K73?iBIY5%`ki5P4jQq5<[gs7G?P[m0RDmXXs@f+1bA6p^'A7]&t0
%rSj;bJ,7Vq?\MuR5d:sTHImQDn1jNk+$6+m&bA$6i8Lm=k54V>q"<tA?iJ7Krq9-k52tB?1S0Z!I(VMTD`_Q\qs)pcqWAqbp)Dt#
%[W=\*TBoY*^\ubcs+io)X0;N]`=FWYr+Wq;l4o@dI<t*q?[VUmlW6=KrJNV<hX]Z%JMmgQj8D5?H#E>4h/;L8n))VNU\D3K-P?F^
%GFkDZ4<V82?8I'S'iC9<q$9McKmN42BF`H*o090Tbl=>Bf_=ouZTRa)>VlCCnn[ZC9_$!uO+k)La1jJ!O&E^9aNr*11\:XcRK)$%
%mp@:12m^=!'D3FnN_OGs.u:.f*EQ$99N.cL&7KYD0u>k_[lFER*%-od%QHreBC,C:21^1Vg+llH1i)m6jFU?(3ZIW:[I`j+k/LZP
%DkjX^b43kl]ATd9^Jg!09]nuP8:.d-HD6S5[cUl,dbc&DFj^i^1ua1@4uXFd@-5*"E0)Dg?;eTW?^!,"I4O(Ppt4,VZ2;YImcNM'
%\14LTU1n.D/D-HAnOiRrPk32uORNDZjpS+!MM4u/OUB:O.<*)He.0E+)OM)T9k:dRO<'U5I4bl`(9KP$UY/+(*S,kN"7`bL55!hd
%0/Y!t)(IN%^9U>jS]R2Y9N4s:jLA*EZ:IJa0%T2&;RLtPi$s'j$>NCKNI'eWAu=jChPP,"$AmnO_Xeu/gXC?[:(BAb;Gl#sP)>9R
%%n],+WJOD%nU6rPT:@,nJ6WQS^*'TgFFDF7aXqQ('fBW12RB\s]UKDFY-f4uqon?=<7LVih&WF]p&)HUil*;C>a3,7MF!b*k9E/3
%X=&d346Z*gWbA\qrAh<DXfDpIP2O^[.r.!GBLB$QO1eCB1BOIb*=)i<Pt+O9gk^9BFDCI\!G!iRs/p"#OZGFPj'];]l)BageH+_>
%PgGj^WWM7J[Sfi@YtUrlB[2L\U7P<a`Ta]fMu7W61/!f^rOl!Xm\=l<HKPQXOBi"D`-[gOFMf_o$luHo%WI$c88q#L5P_M6BZ7BQ
%2E?E?4Ga,Z86,=o*/[!3i$>*I;6lnO]X11%[B;K2XBt'cUlp[7`'L=sYr.SQ6K\6BGpLM&S0ZH8i#\uQ=sWc/Phjms$p=,*-c<'d
%7P-Hn@o3pg1f?#"o8[WT3=VheC/psdi%q=^&daddc+`,4I:A'%S`OrH[be%#W2`-TT,,"JfnRAb<'3V=!#"th6i<qrYLP2)eQdQ3
%PnH)o2Hba_-cSo,+NpI9gb4n?c&id`qI;s3R:2@.X!=/_l>r_(-R!Z*`E`"fT;o"#;'u[2Ru,piH%'L;=]39F[1Q8+X!7:P+s\g0
%5,.K;oLq\F[)kk]dS'4((K0]fdQ*%nKR3W+F3#dfl6r;mSk(QBR/Q"be0O6RjH$%Aan-N``A/.Fm8+UT@0M9T]hlC>6)86AQ0d$>
%C?YfB'XLec]`bR^8G+CQ9\,=m9dScPdq[nhD24qNm7R?.,U'ftLi1=tm,G`<[@@#]8H2ED?.2V-"^],=-.Z'j3=Id0]cD52mo5Fr
%'[^X+q,Z!4Cb8hb;0t+cedg?&YqsO``8oEF#!?<bUK`K^MFH.0P,a$9)&lRMB9KK_lB*(21m-4XW.^<`9Sl2Q,/e@p.N->tgdsH+
%(6hX"j^cWuj+G5aF7uR1PXG^a]/E;b=K;U]Fu99d!G3C:/S)G?ObO,7d++RgB.dJ]*2CdOLLm9T9S14-U),l=/.t*CP6lhS3Kp8B
%QEC(I8.c<,^/^"83jgJhQD@i=G>E&ASWDV43T2l_-BlhB`%,uBdnUj<8fIY3T[ktD7$Sn$LCh^)W>8$@!q2k<]N+/H<>2AD6c;oW
%PmQ4TBf9dX<D>athFO.gD5pG;d(E70cc3G-^s0gSWu[p<Vd"!`P!/D0UQQOs3s>4tRmg9i7(dD_fWN/##g]=2_b=qai17LNlN=T4
%``7D3AKHu\'s+*rRn!Hr$ejNJ+"?_KP4`W5JZgIcH'h+[!`uL1=3onT"!jrA/#;*/+L+4u`0YnZe1k^DYdR.?BJHSGG*B_l>,83_
%PLV'*k*&(Fdn,'`mA/TQ_`2fBod'o:?gtU>c+t%jR)aB!'';sS1L9%oYQE*9,qW2QPmXEV3uM)<<r6]8WL%aWCfg^J.Z!B-Y$uj7
%KR;?O2d:?Q@Ie-34_\<<)Se4?F_NVP\Paq,>)0A3r6B8YX#V15(9iD[0`(.*aSCY(!Ri=;S1@cQgb@BFPfRGX)r<W#h__--Lr#^C
%VH1TjUCSti8[,K>HuC8f8MFq,%Q5%,TPkYXlfJZ@G+q41(J=n69Clqss)WsQ>tUo"['WW-8M)\tb=e<IBkC?Nl]'gblbsJ&idG2D
%,YQ.rjt*NgQS0R.iDGQ.DTHVu6S2fZWCJ:i@ku[N4\OMA)32Q+@bPr2bs<2#Ui'r"?-Wl:YtV41RE<e;-%1k<q-a>abMGtN+MZ>C
%A<D`*B(VB#ES8DD9J3>@Qb$0b]Kmet-WRU:>TU!EOr">]D'0`D8.Ai!Xoo\]Jf;c^k]$CU023?&lHeQn6=d3qKLd$^#"$t7lJ>Cm
%+TdQ/6-rsOGTNe?QsHR\Pc8:en]9Nu&A/%@[(8<2#t*a=Eh0N,bO?X[pnePcL+0aMlA6-u'rG8Sl>r_\//:=K!)ou)2f#.b\uYUF
%]BXSUT:`,Y;c-t_g*jS8L,<FYRUQZWnLAQUesS"b)@2%Qfdb/Zm8%]D0AY,53,n1X?Y#l>oa9fN2#KD)'CTHWlndsCDq7Y9cNZdU
%&_KK,Ou+>X?*O0[!G#M$A7-+=Oj4>W4sHtu!Mi3(LIguUEKF,dI=HHC!S&H"^Y&U&1G((\*N:SAr0H'Z1q,o..O]-RV[7;ROG^??
%@C6PW'MDH\DMNF`(5#>ADL+1)20`87d9;:@%;ajQTK)1#(.3,.`Z"3HA2&LV/@iG2eH]8a1b3A"A[AkN]kGU]WW%`$?FV$:TKl7L
%@aArC$jW`-^nb'H!hl"".b'.G6!Y34n=NNl3-'^>+8\of1VmVDc$hU@KdH4ijbG2nik:V2%W75'ZIUT=HX,!SA]KLg@cDiiSUFO_
%G#ka1K7&hY_?]<Hg^p(#)lK"ac)F%G//'IWTS9DRCJ#l.n_&B@i]I(@g@&e1:Qj0&`)lEog%mC:6C/XrfX"j_Yb9%i/E3tX)EH"c
%[CDXbO]eKS$+p&g/:tRBk!i1-dJ.LU-5>r8]/[ph&t*OlJ]-&@C=_Q\Rmg;8Wds5J(<Ljna==bTP&1qbka+e%>=CKW^[G==7p2r6
%IEM1MVBtN[hRJss71-ABK"-Abmcp_Y.7Qad82uY/UL_I/Gc>M'!TPE2((J=>_tYKN.@Z@G,Q0T*5PHG];-"(7-enh+Y>si?,"6g5
%0jJY$FnMQY:Pr$"9MI-G/&:LdLZ!'ql`'l,$k;?6*[,@a]]QuBrmj[E$Sb4ZJ^\/9TLD4hf>-aA.r"aQj<KtFhrbBHrb\&"@EP(#
%rNG'E]HdfRJBd?+jYP$%<Y=&"MPjic,t,u51W)qO0Uj`cHFJ[gW,J#9a+]q5"jXDWkU@n[ONS<drOKUDWaP`YXH'oCa>*HJ2/f!D
%#!r?qpt@&/bH=FVgbu-HP4Vb@dnGiuef+[*;^$m%8G4s;C_b\-7&]+#'SfWP#^*=fYtl',eOV.uYgJ"=J9aN0(L8,*)L=).,n#)Y
%^V0l$Y,nHJrCqOAbpYmF+#+pKB_tZKB^Mb@`-%oYEkD]b,`3;:.e1&TF+4u!*;n(k;t\NL\kX6t%o-leSu&!1S%?D4-Il>dI!$C6
%<_T;-F:,k#[f[%'O)mg5XV+(PW9LUp_^H,(K-V#blsG`8m3ef4:T/?N6GZO5*_6lB^*GsS]*o0ploQ.cMP1so_bI.Vcpa[NVC;Z(
%^_1Fkm!2#!D"iIMfIJ:(Ufi,TRk6`$@lk?o\S"\YcZ`FQ,"pO#id1nTferGAeKDZMIq)H^g5K33d5>DILtm!7EFs$X=;A"@NV](=
%+d0T9/4NE=-+E%$;3Fs[`D#B![(6sM^"[h7+L>VUTk+P9C>`(Fqjio5fM7VR&M>a%kiV!9:*(IX)Bq2k"-9n!\YqW"[Oq?+Hi&fW
%;Q0dJ=UHB]HYiU9HaF(">8\$ZS#`F;\V4_7)MDY2&R<O8/r:-6h6]G2U]m5_Mp#YZ*u1f;A&p+4\YBBCW;-1Ge.4i[Fo)"`]`Rg\
%/,&-"d8-GO2Xg<DGQ#AO^%lcV!rc<a@lQ\kF8LuQM^>(fBDlYF(NWK:l87u.-oQQ@nBPn8%llMT:pLs(%9*"D)b@B0JbjPGPi=!"
%:s7^4D%D/)dLcqR0U]h)+.JRV)"X]V^Zjo=Z8p1-<CI0feh#eN?JCS[UF<P\^Dq2PB_U#S.3I,-+URINB:5\8e]3f8rN<1!T?^/%
%_kYc0LYkQbgqIAblEgW:+;IW/PWBY,(rL#iq@Z</GmIc=n[:4U^oh3qV!K0]l)IbQUeViY9eoQ%<R`SN0@pHG]\@$qGrCW%af*^M
%@bJDu2VUL5n6+I?0MI[">t_VBU_pHt2P%EllWkfFJ_7))DU`:5b<ZA8orut;/U@8db$29dJi[aQ5q(975UUB\:8^bZ[5t5=\IRGe
%SJH@Sd'aW8[aa^bh-kH>pf/4;LCl##jq^4L&aRZc'f?EX-^a-[NO'.,eou(TX/SF(q`].HWref*9X%_]Y`W`TkqlNp4Dd57NSUIi
%b$qV'KP*lR.CD//!@gQY8`/#f\a@9nbaB^^cg5[2lkN3[j`!$:qeD;Ga:n<jlQ@iI@'E(*jJTtl]$_]EdZ,YYBNJpWPjn]SG:gLs
%*4L&D5l]e\Zk4FSlWpp*^Xtf%#*_ObA/>Zo"!N1a%`UdCs*N?X,eI482i9!Z#/45SFRIcR@(fZ2nrVu^B\uM-2jZ;L9/A;8E8M>1
%1h2`:QQ@.A*?O&]4YX-;$&+i7=JbR`Zuqsni0"H4+-YcA/"1F:5"*ON/_a<&\$9g7JRSg./K=YQMHGgoUgqjY_710b6O&cXWWZUW
%)!UdI)b[CB8lL]`3\c[T<f9I.SdtDA&2L:;k7:M(&1TOa4#4*dX+2ufb.c2HA0>#;*?h[>.[3Q7NB\P9=4##K5NL=&'mLnB[aXGf
%JKMj?><d#29a`L[b6PCCEH2,51#-A++i1guJB"Gs(YI:&>9X/UAD>>(*Q,8J4O:9r,&JnZ<6%-l^C<JXLnoDapAU&?"e\tue@XhB
%:rX:LOKFa!2Jfl"-k.1/[u;`4?a>g#i^arK/sJPO0h?2^LBsK/)1IpVl1=0F=un*LW5ZN+G\mdd-.6/D2[3LuA0#8Xpi;:(763Y4
%115f`AYm(#a!:BX'O-,s7"&>gEGEu0!XCYLV<Zj9TRbtdD&7[\jS%,8R7NOA%Y"Rc1jJ@2Ij%idju/aN>+EQmEK4,,LYo@.JOrb;
%$+$'ond#>BU&SYeooUNu#i-l%H#l(L4d?r1ATA"'JJ=,2UjnQL6$&kP.A2Pj5s<ERjg"<1>9DCcc*Fic2Xq/$9;AL*nFgJVGbC_N
%i")_Tetj""'nW]jPG83+)!YgmX:S)EaNHWY"b!!/,iD>8Sr5E;8N%nTfBH!AK["Un#MSk"PblJEgO]&!$FVF\FigNR0I[goM<C#L
%`)MCkJl6\<7dq,4Qi)#WW,1<<bB*')B8H,^ND;C&!`q@m:19PKTbPL$('6YJ%K/ka1parf./fOOirT$H`NICN.XHD2RMKE@FcZS[
%F\>;3ilHWs,T[Y(+E(M(=%^s^aliq?)GV9HV&6!u<"5ffoHuYHEZ`KffZ57Tk!p^te$tsNdDpqj.A<m*57*dWNh0Op.g2E::-m[s
%pfo&;%f0.iP:/$SL<V[;!7jq>K"c6j3qfeZO33a+1\-KMl_&Pj?%eoC75q3Z,$PODF3m9,\MXg\2!ToI8]$h?PPA4MQ"9I+S;hgX
%X'@Fg)B6BuRO!FG*#TUDauOJ'8.Bj&%XPcCn"Z+l)-D0gHY)t*@f437_V[N-^P6jtf0!qPF(WC7$l>=mU7=VCL(7#&a@B4b<Q-e$
%-!(+#VU`=,o5VI^o*%jXd)E5mds3BZ2HFdXL&j,h;\F0cjV=\#L:A?,<?#U!9+R*qEUtF"*Y"*+O$>FY2Fb[$/..P95V:G%$^Z5:
%3b'9#dP9NfeM.Tt3AjV+NK2UaeR<KLBnf@=2Du&CSf*(m3If"q>Y:7T@FCBsdnb@:7E5A^\PO5)S,_oS5WSt("ZV<L6'la,LZ+)-
%i0EE!9P`q<&>A%(*IOg[;6rV3)Z\ckl$V7M3?BGOQU!Or!@8BQ,_h,n6Q%!*b<"])!(bq!6imr5]Y7mt#E'oZk'o>JPVrXr;'0Tu
%?[Vs;GaF<#rdWP/5\TZrBjb9e?X]C6e`.0ENV^05\p=@0Y24BT,FJLa%7]JV;=(%p_->2?r<(jf8L3,QWBM/*!u1)kSG_BC"bc;'
%YW`IE*h&<nMKd)j?lDb@3427.XEHJfj<iR@4",@?g7AMDqN0ks#'iFoiap>,5igD+\6WLF2@CC2U;<c<e4f;G+4<B2Y0pTonrYc1
%=<lA!3\ZOa*UjjbE]6i3M_HDh.3HGQI%;(^G`:pl)W5(Y_,%V?O7h;>ZFF%\BlL=[<#NnHf4e@@3ScT5i'?/TXB1p7k!/P"Klo2+
%Um#JEC#Yn\J]s:IcT(7kD%^HbiAM*QFG.[Pq90uj\0dN957Bomr?OB'/"s.=A('B_:r:bKQS$3YBknn%=eP;#S#p@=p13/\,UgVQ
%5]m,s*ISUoNTND"+`^fh$<;g%hK#Vj__rM!oFS7cZ<BBSCqAJ<8-2e[_!'Mie`M[62qe)&UoU6DR"Dp/DfeApT9qY%2r.Wq>Gf;t
%F@/$84&ZKdMe0b_TLkU-Z95.uRMA*cPG;%%0_#^'fP+8OP=Z/Zb32$3p08e6knK6!."%PR8d8tYKdj5a:^,i#k.WV5@RstqC`>>`
%LJT-pR.]V^XE]=17RmW+JFJdKe$u+%nd1L'Y%!h[W::ar.Z?`WO*,>E;W<OrJZ?Am8d81Z'i\Y%0a%Z'QpcQs;;f6$NWpt$!HulQ
%:=T=;m.^W_fgS]D@:PRU0%NQ(Bl>'fp->bCqgt8m>U:`<q^DB*hY2<LgparLr=`2AWQJ.2gLBORWn^W:@Xo7pDMSM+_8$Mn#1KBb
%fYB9MfmZkbbek/(k#LV,'rARZZG[>2'N!%"k(<oUgt,V<du0AZ6!-&.L+a#0U,fu:[0f(J-7Xnm5bK&6nW(pC`*ME)j$[-V4NJk]
%U9%^GYrpY,b'+S4b/gMX?`g&hXt&`5J6d&9bTUMh?$k;e(#*r?F0@41Ws1_Qp)1HeJE-6BA<0@<@%V:UTJbEI!:/6B/72*=aE`aV
%kZ.&*Y&ZJN8JG-bAHc8&e<tN"?U38?_D:TLecAfIh[kJoK;%L?0^Nj>(flKG>RU#aIRVpQ=,2Xj0#8nG&_IAB@hmk86+8*e)+?2G
%Uo9JuK?frKdNoXt\i)T3!r=Yl\A%$81^&**bnCZUk_u48mb<aq\[hMC(?fFf6`n2-2!`[t.*n1T[srYJWH9H)O9=eJTYT'iRCgQF
%T<(^<\h\1D:%<s)r1XN&LXsHbP^!sQm]$G@ZY-)+K0pkmdrdVj$;GIhf<,H+kMuPa[`+npW)Jkio0?.sgdud6j_I0o[X!W\^HHo2
%;9P6h)LsdWD3Hj+6/!EfksVZBqhg8ec70;YhFHNHnT+:J>mGp&FO'pr`=VcTO+IHSEaWKg^,p4<mP^=_Fdn./fA$t+&fo-bCN-r\
%-m2*qH<0#JD9[G'p-`]C+)5e=drY1#Ul(>DdEl/qmEG+r+pb1//t8cqC0\N,;hBJ?/)&oui-S+LeQ@-ud&"4/?@$CZT3XN.=Wk08
%rA#&-?D/`s'c4gce^pkK3YMp-B>X2Ll`sN2Qd$>14VBQZEL"53q\:,rcM*mFjaZ.OI;]k3N/43p&[BZQTWO@\@V[%NLq#?('[Fg?
%=g<3'70o<"NC&tO;Y2_>p:1ii<H=GYF7qp>-dkrBEtVd_Y\ebm;2!fr10p$$\-S==Ku$FBa:>b>LOb`Mcu5I7XTA`A9.oN40:-N]
%+)k7bUeZFfin6;#]Ca7W+<N5,Qbr4^Gj;kbHR]QTQ1=d+fcY5/d!X;C*QiATZYBmYX`VAk#SOm;bW;oMl9G_N]rFI\1s-JuWrtno
%9'BrJ5u`_Ur$i2Q<]n+bI%BD8mSmu*W;Gu8pBAML:\==4/!Lp`cW3(t]>H/EJQg\"'f?jLFW?"GO2I0Gm=0f?dqEsBJE6do:tbf0
%>)4%V%WiMo-glVA@^L`s!G8,3KA,Q4GWU^CpPKaU;u,DiM#QD7($)X.:dD&=:cB8g@,HPB6dkED'eI_Z&r0YS?"qlp]3LqUO$3A$
%oaY)M5-CGVo[6r4I4l/0f"qU5q;0s"I>8?I0.onX+()3<O0st)?D`:%mRGeX=eMNI$S'DE`EDBlZMAOX06<Tong?'n75)MZeB8Pd
%m<)[,;=q;@8,!a0kWr@+"<ei"/OQ8ZAOmNK%#KE#,]/f+aL1PumT3B!kUJ;Qgu\>/f:G<q;c#Ou1A<h+MI$KZ;(q/da`pl8X5!Q0
%G5/QDieDCPqK`m&XDLpY(N_@OebOKGB6[T0=eMNI$S'DE`EDBlZ?c>.5-NVBG_CKGTQ(,Y6\1);*lS_/`L%>Y/a)-s0a\l+3p.0X
%a:h5^+*gkJ\EuZcE]33Pa9g:q;,ZgB'_1[;;`uT9$"R00DeDEILfXu&;)6V4Ti?,h3!1ktG65tBMYc3O]j=QJS+Gb$0e,-(1oRN=
%&aR\/hSg2ZNpe#OjE&giaRCPV[q<+,1nA\Y_#dc?h3I3)J"jR159^pO:UDmn&+_2fgeQ<"'jSuIE9#?)Cd71'(FPO`X&A)FCRN7*
%U0Gi+K\qP.3>u1S%WXEge=,SnZB!`%nDsQ$oacBG-;2`dX6?CXMRm*s-MOJI"?-<heak2ZMt"Wj3;QBYP<A.gkcqMBcun!%cd1!$
%.WLPcNC0i$DV2(4GM.?uiIc[gYth@h%:+[+W0\rb,,+Zj#ba8)+hXTIMKZp.0-`6jZe%-*U!&6?H5R=lg^.0ME/8;g*SjfH3p>i_
%1#/W#jC,n7ARkGH.1Q%fY+qfN3_0T=+\+Lqbmupi(s-dR%jLi*QMhrC3>F2+Y#^5tCBG=5Wu'P/QjiQ\4G.^g/X8<:[DnokCfd/#
%m3\1/YJ-M;3*Y%n\dZa3R->"9Arkn'O/(q.O$BufprNnRbZ#BD_P"Fko+9KT$7_T5':tmS_LUrLd_I>9O_0s`UWAah_49b`-6r^N
%lPq=#:f<Hb4]2!TJA'E3dL]$&d5kKA&="G-UQsic=^i8Ya`1$tVur3bg7eMTBAXL>5to0TTYT$YD8)DJZMluUm=AHupD$[O\OoP[
%YDgF"?h5!J>36qC/A=if)35tp&R.Mu=&b:rZUErs%0o2%+C#AtUE!:\+r?:AMKF]`.TV3sGqYd.)R17)VcF`"$o4K^>(opkZ6h'4
%$`[K0d!&RWGXX5\I4"[D!`MkQ43i`#n^dFL%Z-r6I9#LZ=%1`T.d/r@<NHIqnp[,2"[j!ZcN.>i`\Ic5]$(1D069BUhd*AE'tJ]@
%\\n)a8F4GKke<cW*'.@QR(dk6eulIdXi"T21)pKZ0j>Y>d`+D8nSh4pUBHUB<;e3gEk8YiPSC]fP+n:?;Uc56f("X1SnbY'jlc(_
%=C!PSK^:O:J+M]OYinoLnPG$Sck'ZQ"/IOV#@qgP<O>X[O0/hFBN*d2QO8=]CucC><^JJY?3lQP'j8LnkULaCI;cNR=2a[lD-%N2
%kZd!jX5kK,8)=5[cF+@J5n08!/(&]IAu9!m&aA&c'KkPF1G[/VK_oS;HQTT,)qn1iHDQ.n]:]E$&3)T/G3_u7]camr?Vt(0F+/+o
%`6(o7ZRlMHQ<#MldP;84m[($uE[s%T^4Wd9..9R+dJJf)n'3s();HMdX0mLtRVpM\:.0ac,R_1'V?]+Xe3odBo"T#MY@F`r=a<8_
%4WpHb$lb"b=:m`Vj<P`''?f(OMr_sM@"u_:r!^<c+PK2?VFDa9]GqHf7>kQi-GU0+&B-T=PrDT[T[Oo)%qUV!"@F<XpoZEj0q+"c
%'\jrB@;/f)V1FpH1&U4D\4+2(h+;(B49F9PcCk>nXUfF<qZ7slD&*=J&<JRH!0'ugV@e)7e+]FlooLMLm)U9^M%:0ES>*_Ee\Tpj
%2da90_GM:M1Fo7Z)$bcU1QQ8S)Tnt9_QOngg+`I46F@a6%4-FM6l_W]W!s=s<@@Q4.QYR?ELJ#N@[kuj`e;pKKTO&7M`;rpfa\8k
%JqQd;D]=QH>7s/HpGo2;'@TlM0K%+'\A;s@;=D#;B)"3W`(o&Hn)tnUg13p%bK59IR"i@7#0:>/1(8dc[,E:W&f&C/(c'+t.gl:-
%H'N*'WOS.!0=TIYX709(0"0>ckMd]3`=7J%<%An]RpeU,fg7c!KcDM6fJtVl0j'NiK>>2GnNRKej)&^)M2!c.6;#a"12&#WS?cdC
%%!jHV2fojX@-tJ-RCB!e3ZOrT@=\Yu%Gt7:H?dqZLuBsTh(T3GrE9+b![NR<D?Pp24A]<f9V$3S5Q\:M!K%/@-7!4/P(b8fW^8Xp
%Vtj&b(dM5A$#Ct\MG&rng_73+cu;6=T(#;[OmVM6ACh=.r&X32-qkBWPT5[5C_]7bCOcs*(HfVKDl=^qS\^TSk:gB(=CNQgU^/J-
%U4h`TF=KOm*!bV_cA>KqH"bdJ!=p;<)^>S2Y]u\R<FX65rW/713rXcUP<`(+nMm5e-;&i<]0a3lCbn]2N,0u?*$lY>KbLjn?&-X$
%cl`lL0VAu7=egL&e&^aKT:2=r;6j(W60l249<ZH*7L3-]!$u[G*"YUE4OG<3P[du1^c),RjPI0IOG)d*5\`O+<Kd.@4s+<VbIX84
%K#Yn1NIDN]F1L<2mfFdTbpsK<:0+*`i-bi#hnGh@eo!Ih5UeqWZA*6In-eTW!@7#!N<pVa^`PGh.jP@oe]<)/B)VmLf\X`U6[Jgc
%+[%ZC1E8fA!B\YRe2G[fmjj9:0&Z>r&s.n,c0]>++ciJUL8$roi(Nci.pjMs*I4:&3ZOrTH-!IP>/U(L[2tp)*-/P^;0UCnQTpL=
%!"5gfAS>K=)6Gq6<C&90]P/8;^j@BtDl=B2C5iWl<C\3_n+Ip^+s)t]FcST.!6V`(d5k@\Mu:kLLdW4J2Ej0?9bPCL\,afK]h63d
%EE%p9j4o?NZBWB7g!JjI#H%a6."j)E&KF4'hG?hRgNJ!ohDA"dTU%TE-No0%R8FFsfjiXmnn86t18(4j>57<q%&cXuIKYTG0k`BH
%D3O=Tp9(&)))CMgS'U#>">lBGrS[aWZA6LkQE<PDA!@r<qhd-CW4tmR=_Hdqd;2016`9<k2$0+GYIYKqcUXmkkfUDN`@+WK\6D9B
%97j6(\Da"j8"-M!*o.!:UnTh5O!(*O=u?R6J5gfUM<0*5D!,e/mX&-%)Ruqn6&1+ZdE[EG!D[+7Hblg%;;<Z9m'q.N`W/O;*BN@O
%B7#`]Aa@P9\LkSZDP;QA'ZL+Ga037X2[d^M&+jAN^4?5oKK@<Ls.B[e14^2AjksOb/'.56aYeSr>01tkkT[oprlibb0-u7fMNf*.
%_1r%6JL?Ehill![.6pNMAIqdX<8iBXckDZ8!t=/[N(.e!A98JoIOrK\""bei9JgG-R9@<s(<Mk&T_Hk'0GU\7,]Qq060O_0-OZu0
%YZL%,EsjtU'Ji6K+d>%jh*L48:Z8O*=[p(/@K\qJOccL`8SZ%^?,5qbT+Z1T2>n;daGa2=Ets5,@d8O9#XNBAP:G!P'i;+]-?K5:
%r[(2t$X(n(ktMjq/rTuf?moiqedQ.Fp&WCZ/ZYP;)_l:Q7H6"-nE>n*U=j!PJ%(dAd/N%"(5\ocRdt_,pn.*7<'X80S76P]He,*?
%P"lA9?'_9!Gddd[V=9N'3`3lH&LB9UDipu9<C8G$m_@Q)WVb<<3ALN:0=r;i?NMpG=Yd1k$h9ZA0+6,,Qlct;LkOlVUA9Be6^Vm<
%TnJOfVGM[5q&:iY(NR&O*NZ.VY=:9@A?onS/)ep22_;'kQq\nfQR/I3)Eb/rOG2>7.839aR=SuoFkgF4,VnMFNT(9N\`Ci6%&B%d
%<-b-hCpPO6lH=sq05Ys?dL+'0Kp_snc7#:E"WY75)au3==ErGg-d1@IMEIeFUM[<!OY8pLH7SZjp7Ij'9KraAE>S?(d[2`;d%E/p
%6meAD&)O\aFBT6o/j)PCP9,ndp/^StQb`XncL:eHs)rkkRt!'jrk"g&\A.q,LJQfU2h>oHjkYt>rq4aPs7kirVm!l3n^$\'qnpUh
%T79>T+9$?\l/fr]+9)1FJ,8eG.N*a4$P7]-I.5B>^\d!a?[q`-L6%fP~>
%AI9_PrivateDataEnd
